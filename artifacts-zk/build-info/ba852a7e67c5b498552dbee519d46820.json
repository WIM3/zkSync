{"id":"ba852a7e67c5b498552dbee519d46820","_format":"hh-sol-build-info-1","solcVersion":"0.8.8","solcLongVersion":"0.8.8+commit.dddeac2f","input":{"language":"Solidity","sources":{"@openzeppelin/contracts/token/ERC20/ERC20.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.8.0) (token/ERC20/ERC20.sol)\n\npragma solidity ^0.8.0;\n\nimport \"./IERC20.sol\";\nimport \"./extensions/IERC20Metadata.sol\";\nimport \"../../utils/Context.sol\";\n\n/**\n * @dev Implementation of the {IERC20} interface.\n *\n * This implementation is agnostic to the way tokens are created. This means\n * that a supply mechanism has to be added in a derived contract using {_mint}.\n * For a generic mechanism see {ERC20PresetMinterPauser}.\n *\n * TIP: For a detailed writeup see our guide\n * https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How\n * to implement supply mechanisms].\n *\n * We have followed general OpenZeppelin Contracts guidelines: functions revert\n * instead returning `false` on failure. This behavior is nonetheless\n * conventional and does not conflict with the expectations of ERC20\n * applications.\n *\n * Additionally, an {Approval} event is emitted on calls to {transferFrom}.\n * This allows applications to reconstruct the allowance for all accounts just\n * by listening to said events. Other implementations of the EIP may not emit\n * these events, as it isn't required by the specification.\n *\n * Finally, the non-standard {decreaseAllowance} and {increaseAllowance}\n * functions have been added to mitigate the well-known issues around setting\n * allowances. See {IERC20-approve}.\n */\ncontract ERC20 is Context, IERC20, IERC20Metadata {\n    mapping(address => uint256) private _balances;\n\n    mapping(address => mapping(address => uint256)) private _allowances;\n\n    uint256 private _totalSupply;\n\n    string private _name;\n    string private _symbol;\n\n    /**\n     * @dev Sets the values for {name} and {symbol}.\n     *\n     * The default value of {decimals} is 18. To select a different value for\n     * {decimals} you should overload it.\n     *\n     * All two of these values are immutable: they can only be set once during\n     * construction.\n     */\n    constructor(string memory name_, string memory symbol_) {\n        _name = name_;\n        _symbol = symbol_;\n    }\n\n    /**\n     * @dev Returns the name of the token.\n     */\n    function name() public view virtual override returns (string memory) {\n        return _name;\n    }\n\n    /**\n     * @dev Returns the symbol of the token, usually a shorter version of the\n     * name.\n     */\n    function symbol() public view virtual override returns (string memory) {\n        return _symbol;\n    }\n\n    /**\n     * @dev Returns the number of decimals used to get its user representation.\n     * For example, if `decimals` equals `2`, a balance of `505` tokens should\n     * be displayed to a user as `5.05` (`505 / 10 ** 2`).\n     *\n     * Tokens usually opt for a value of 18, imitating the relationship between\n     * Ether and Wei. This is the value {ERC20} uses, unless this function is\n     * overridden;\n     *\n     * NOTE: This information is only used for _display_ purposes: it in\n     * no way affects any of the arithmetic of the contract, including\n     * {IERC20-balanceOf} and {IERC20-transfer}.\n     */\n    function decimals() public view virtual override returns (uint8) {\n        return 18;\n    }\n\n    /**\n     * @dev See {IERC20-totalSupply}.\n     */\n    function totalSupply() public view virtual override returns (uint256) {\n        return _totalSupply;\n    }\n\n    /**\n     * @dev See {IERC20-balanceOf}.\n     */\n    function balanceOf(address account) public view virtual override returns (uint256) {\n        return _balances[account];\n    }\n\n    /**\n     * @dev See {IERC20-transfer}.\n     *\n     * Requirements:\n     *\n     * - `to` cannot be the zero address.\n     * - the caller must have a balance of at least `amount`.\n     */\n    function transfer(address to, uint256 amount) public virtual override returns (bool) {\n        address owner = _msgSender();\n        _transfer(owner, to, amount);\n        return true;\n    }\n\n    /**\n     * @dev See {IERC20-allowance}.\n     */\n    function allowance(address owner, address spender) public view virtual override returns (uint256) {\n        return _allowances[owner][spender];\n    }\n\n    /**\n     * @dev See {IERC20-approve}.\n     *\n     * NOTE: If `amount` is the maximum `uint256`, the allowance is not updated on\n     * `transferFrom`. This is semantically equivalent to an infinite approval.\n     *\n     * Requirements:\n     *\n     * - `spender` cannot be the zero address.\n     */\n    function approve(address spender, uint256 amount) public virtual override returns (bool) {\n        address owner = _msgSender();\n        _approve(owner, spender, amount);\n        return true;\n    }\n\n    /**\n     * @dev See {IERC20-transferFrom}.\n     *\n     * Emits an {Approval} event indicating the updated allowance. This is not\n     * required by the EIP. See the note at the beginning of {ERC20}.\n     *\n     * NOTE: Does not update the allowance if the current allowance\n     * is the maximum `uint256`.\n     *\n     * Requirements:\n     *\n     * - `from` and `to` cannot be the zero address.\n     * - `from` must have a balance of at least `amount`.\n     * - the caller must have allowance for ``from``'s tokens of at least\n     * `amount`.\n     */\n    function transferFrom(\n        address from,\n        address to,\n        uint256 amount\n    ) public virtual override returns (bool) {\n        address spender = _msgSender();\n        _spendAllowance(from, spender, amount);\n        _transfer(from, to, amount);\n        return true;\n    }\n\n    /**\n     * @dev Atomically increases the allowance granted to `spender` by the caller.\n     *\n     * This is an alternative to {approve} that can be used as a mitigation for\n     * problems described in {IERC20-approve}.\n     *\n     * Emits an {Approval} event indicating the updated allowance.\n     *\n     * Requirements:\n     *\n     * - `spender` cannot be the zero address.\n     */\n    function increaseAllowance(address spender, uint256 addedValue) public virtual returns (bool) {\n        address owner = _msgSender();\n        _approve(owner, spender, allowance(owner, spender) + addedValue);\n        return true;\n    }\n\n    /**\n     * @dev Atomically decreases the allowance granted to `spender` by the caller.\n     *\n     * This is an alternative to {approve} that can be used as a mitigation for\n     * problems described in {IERC20-approve}.\n     *\n     * Emits an {Approval} event indicating the updated allowance.\n     *\n     * Requirements:\n     *\n     * - `spender` cannot be the zero address.\n     * - `spender` must have allowance for the caller of at least\n     * `subtractedValue`.\n     */\n    function decreaseAllowance(address spender, uint256 subtractedValue) public virtual returns (bool) {\n        address owner = _msgSender();\n        uint256 currentAllowance = allowance(owner, spender);\n        require(currentAllowance >= subtractedValue, \"ERC20: decreased allowance below zero\");\n        unchecked {\n            _approve(owner, spender, currentAllowance - subtractedValue);\n        }\n\n        return true;\n    }\n\n    /**\n     * @dev Moves `amount` of tokens from `from` to `to`.\n     *\n     * This internal function is equivalent to {transfer}, and can be used to\n     * e.g. implement automatic token fees, slashing mechanisms, etc.\n     *\n     * Emits a {Transfer} event.\n     *\n     * Requirements:\n     *\n     * - `from` cannot be the zero address.\n     * - `to` cannot be the zero address.\n     * - `from` must have a balance of at least `amount`.\n     */\n    function _transfer(\n        address from,\n        address to,\n        uint256 amount\n    ) internal virtual {\n        require(from != address(0), \"ERC20: transfer from the zero address\");\n        require(to != address(0), \"ERC20: transfer to the zero address\");\n\n        _beforeTokenTransfer(from, to, amount);\n\n        uint256 fromBalance = _balances[from];\n        require(fromBalance >= amount, \"ERC20: transfer amount exceeds balance\");\n        unchecked {\n            _balances[from] = fromBalance - amount;\n            // Overflow not possible: the sum of all balances is capped by totalSupply, and the sum is preserved by\n            // decrementing then incrementing.\n            _balances[to] += amount;\n        }\n\n        emit Transfer(from, to, amount);\n\n        _afterTokenTransfer(from, to, amount);\n    }\n\n    /** @dev Creates `amount` tokens and assigns them to `account`, increasing\n     * the total supply.\n     *\n     * Emits a {Transfer} event with `from` set to the zero address.\n     *\n     * Requirements:\n     *\n     * - `account` cannot be the zero address.\n     */\n    function _mint(address account, uint256 amount) internal virtual {\n        require(account != address(0), \"ERC20: mint to the zero address\");\n\n        _beforeTokenTransfer(address(0), account, amount);\n\n        _totalSupply += amount;\n        unchecked {\n            // Overflow not possible: balance + amount is at most totalSupply + amount, which is checked above.\n            _balances[account] += amount;\n        }\n        emit Transfer(address(0), account, amount);\n\n        _afterTokenTransfer(address(0), account, amount);\n    }\n\n    /**\n     * @dev Destroys `amount` tokens from `account`, reducing the\n     * total supply.\n     *\n     * Emits a {Transfer} event with `to` set to the zero address.\n     *\n     * Requirements:\n     *\n     * - `account` cannot be the zero address.\n     * - `account` must have at least `amount` tokens.\n     */\n    function _burn(address account, uint256 amount) internal virtual {\n        require(account != address(0), \"ERC20: burn from the zero address\");\n\n        _beforeTokenTransfer(account, address(0), amount);\n\n        uint256 accountBalance = _balances[account];\n        require(accountBalance >= amount, \"ERC20: burn amount exceeds balance\");\n        unchecked {\n            _balances[account] = accountBalance - amount;\n            // Overflow not possible: amount <= accountBalance <= totalSupply.\n            _totalSupply -= amount;\n        }\n\n        emit Transfer(account, address(0), amount);\n\n        _afterTokenTransfer(account, address(0), amount);\n    }\n\n    /**\n     * @dev Sets `amount` as the allowance of `spender` over the `owner` s tokens.\n     *\n     * This internal function is equivalent to `approve`, and can be used to\n     * e.g. set automatic allowances for certain subsystems, etc.\n     *\n     * Emits an {Approval} event.\n     *\n     * Requirements:\n     *\n     * - `owner` cannot be the zero address.\n     * - `spender` cannot be the zero address.\n     */\n    function _approve(\n        address owner,\n        address spender,\n        uint256 amount\n    ) internal virtual {\n        require(owner != address(0), \"ERC20: approve from the zero address\");\n        require(spender != address(0), \"ERC20: approve to the zero address\");\n\n        _allowances[owner][spender] = amount;\n        emit Approval(owner, spender, amount);\n    }\n\n    /**\n     * @dev Updates `owner` s allowance for `spender` based on spent `amount`.\n     *\n     * Does not update the allowance amount in case of infinite allowance.\n     * Revert if not enough allowance is available.\n     *\n     * Might emit an {Approval} event.\n     */\n    function _spendAllowance(\n        address owner,\n        address spender,\n        uint256 amount\n    ) internal virtual {\n        uint256 currentAllowance = allowance(owner, spender);\n        if (currentAllowance != type(uint256).max) {\n            require(currentAllowance >= amount, \"ERC20: insufficient allowance\");\n            unchecked {\n                _approve(owner, spender, currentAllowance - amount);\n            }\n        }\n    }\n\n    /**\n     * @dev Hook that is called before any transfer of tokens. This includes\n     * minting and burning.\n     *\n     * Calling conditions:\n     *\n     * - when `from` and `to` are both non-zero, `amount` of ``from``'s tokens\n     * will be transferred to `to`.\n     * - when `from` is zero, `amount` tokens will be minted for `to`.\n     * - when `to` is zero, `amount` of ``from``'s tokens will be burned.\n     * - `from` and `to` are never both zero.\n     *\n     * To learn more about hooks, head to xref:ROOT:extending-contracts.adoc#using-hooks[Using Hooks].\n     */\n    function _beforeTokenTransfer(\n        address from,\n        address to,\n        uint256 amount\n    ) internal virtual {}\n\n    /**\n     * @dev Hook that is called after any transfer of tokens. This includes\n     * minting and burning.\n     *\n     * Calling conditions:\n     *\n     * - when `from` and `to` are both non-zero, `amount` of ``from``'s tokens\n     * has been transferred to `to`.\n     * - when `from` is zero, `amount` tokens have been minted for `to`.\n     * - when `to` is zero, `amount` of ``from``'s tokens have been burned.\n     * - `from` and `to` are never both zero.\n     *\n     * To learn more about hooks, head to xref:ROOT:extending-contracts.adoc#using-hooks[Using Hooks].\n     */\n    function _afterTokenTransfer(\n        address from,\n        address to,\n        uint256 amount\n    ) internal virtual {}\n}\n"},"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts v4.4.1 (token/ERC20/extensions/IERC20Metadata.sol)\n\npragma solidity ^0.8.0;\n\nimport \"../IERC20.sol\";\n\n/**\n * @dev Interface for the optional metadata functions from the ERC20 standard.\n *\n * _Available since v4.1._\n */\ninterface IERC20Metadata is IERC20 {\n    /**\n     * @dev Returns the name of the token.\n     */\n    function name() external view returns (string memory);\n\n    /**\n     * @dev Returns the symbol of the token.\n     */\n    function symbol() external view returns (string memory);\n\n    /**\n     * @dev Returns the decimals places of the token.\n     */\n    function decimals() external view returns (uint8);\n}\n"},"@openzeppelin/contracts/token/ERC20/IERC20.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.6.0) (token/ERC20/IERC20.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Interface of the ERC20 standard as defined in the EIP.\n */\ninterface IERC20 {\n    /**\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\n     * another (`to`).\n     *\n     * Note that `value` may be zero.\n     */\n    event Transfer(address indexed from, address indexed to, uint256 value);\n\n    /**\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\n     * a call to {approve}. `value` is the new allowance.\n     */\n    event Approval(address indexed owner, address indexed spender, uint256 value);\n\n    /**\n     * @dev Returns the amount of tokens in existence.\n     */\n    function totalSupply() external view returns (uint256);\n\n    /**\n     * @dev Returns the amount of tokens owned by `account`.\n     */\n    function balanceOf(address account) external view returns (uint256);\n\n    /**\n     * @dev Moves `amount` tokens from the caller's account to `to`.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transfer(address to, uint256 amount) external returns (bool);\n\n    /**\n     * @dev Returns the remaining number of tokens that `spender` will be\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\n     * zero by default.\n     *\n     * This value changes when {approve} or {transferFrom} are called.\n     */\n    function allowance(address owner, address spender) external view returns (uint256);\n\n    /**\n     * @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\n     * that someone may use both the old and the new allowance by unfortunate\n     * transaction ordering. One possible solution to mitigate this race\n     * condition is to first reduce the spender's allowance to 0 and set the\n     * desired value afterwards:\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n     *\n     * Emits an {Approval} event.\n     */\n    function approve(address spender, uint256 amount) external returns (bool);\n\n    /**\n     * @dev Moves `amount` tokens from `from` to `to` using the\n     * allowance mechanism. `amount` is then deducted from the caller's\n     * allowance.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transferFrom(\n        address from,\n        address to,\n        uint256 amount\n    ) external returns (bool);\n}\n"},"@openzeppelin/contracts/utils/Context.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts v4.4.1 (utils/Context.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Provides information about the current execution context, including the\n * sender of the transaction and its data. While these are generally available\n * via msg.sender and msg.data, they should not be accessed in such a direct\n * manner, since when dealing with meta-transactions the account sending and\n * paying for execution may not be the actual sender (as far as an application\n * is concerned).\n *\n * This contract is only required for intermediate, library-like contracts.\n */\nabstract contract Context {\n    function _msgSender() internal view virtual returns (address) {\n        return msg.sender;\n    }\n\n    function _msgData() internal view virtual returns (bytes calldata) {\n        return msg.data;\n    }\n}\n"},"contracts/Greeter.sol":{"content":"//SPDX-License-Identifier: Unlicense\r\npragma solidity >=0.5.0 <0.9.0;\r\n\r\ncontract Greeter {\r\n    string private greeting;\r\n\r\n    constructor(string memory _greeting)  {\r\n        greeting = _greeting;\r\n    }\r\n\r\n    function greet() public view returns (string memory) {\r\n        return greeting;\r\n    }\r\n\r\n    function setGreeting(string memory _greeting) public {\r\n        greeting = _greeting;\r\n    }\r\n}\r\n"},"contracts/ISLEToken.sol":{"content":"//SPDX-License-Identifier: Unlicense\r\npragma solidity ^0.8.8;\r\n\r\nimport '@openzeppelin/contracts/token/ERC20/ERC20.sol';\r\n\r\n\r\ncontract ISLEToken is ERC20 {\r\n\r\n  string private _name = 'ISLE Token v0.0';\r\n  string private _symbol = 'ISLEv0.0';\r\n  uint8 private _dec = 10;\r\n  uint256 private _totalSupply = 1000000000 * (10 ** uint256(_dec));\r\n\r\n\r\n    constructor() ERC20(_name, _symbol) {\r\n        _mint(msg.sender, _totalSupply);\r\n    }\r\n}\r\n\r\n\r\n"}},"settings":{"optimizer":{"enabled":true,"mode":"3"},"outputSelection":{"*":{"*":["abi","evm.methodIdentifiers","metadata"],"":["ast"]}}}},"output":{"errors":[],"version":"0.8.8","long_version":"0.8.8+commit.dddeac2f.Windows.msvc","zk_version":"1.3.8","sources":{"@openzeppelin/contracts/token/ERC20/ERC20.sol":{"id":0,"ast":{"nodeType":"SourceUnit","name":null,"src":"105:12907:0","memberName":null,"functionName":null,"AST":null,"nodes":[{"nodeType":"PragmaDirective","name":null,"src":"105:23:0","memberName":null,"functionName":null,"AST":null,"nodes":null,"statements":null,"arguments":null,"declarations":null,"members":null,"components":null,"clauses":null,"options":null,"body":null,"trueBody":null,"falseBody":null,"expression":null,"condition":null,"initializationExpression":null,"leftExpression":null,"rightExpression":null,"subExpression":null,"trueExpression":null,"falseExpression":null,"loopExpression":null,"baseExpression":null,"indexExpression":null,"startExpression":null,"endExpression":null,"value":null,"initialValue":null,"externalCall":null,"eventCall":null,"errorCall":null,"leftHandSide":null,"rightHandSide":null,"length":null},{"nodeType":"ImportDirective","name":null,"src":"130:22:0","memberName":null,"functionName":null,"AST":null,"nodes":null,"statements":null,"arguments":null,"declarations":null,"members":null,"components":null,"clauses":null,"options":null,"body":null,"trueBody":null,"falseBody":null,"expression":null,"condition":null,"initializationExpression":null,"leftExpression":null,"rightExpression":null,"subExpression":null,"trueExpression":null,"falseExpression":null,"loopExpression":null,"baseExpression":null,"indexExpression":null,"startExpression":null,"endExpression":null,"value":null,"initialValue":null,"externalCall":null,"eventCall":null,"errorCall":null,"leftHandSide":null,"rightHandSide":null,"length":null},{"nodeType":"ImportDirective","name":null,"src":"153:41:0","memberName":null,"functionName":null,"AST":null,"nodes":null,"statements":null,"arguments":null,"declarations":null,"members":null,"components":null,"clauses":null,"options":null,"body":null,"trueBody":null,"falseBody":null,"expression":null,"condition":null,"initializationExpression":null,"leftExpression":null,"rightExpression":null,"subExpression":null,"trueExpression":null,"falseExpression":null,"loopExpression":null,"baseExpression":null,"indexExpression":null,"startExpression":null,"endExpression":null,"value":null,"initialValue":null,"externalCall":null,"eventCall":null,"errorCall":null,"leftHandSide":null,"rightHandSide":null,"length":null},{"nodeType":"ImportDirective","name":null,"src":"195:33:0","memberName":null,"functionName":null,"AST":null,"nodes":null,"statements":null,"arguments":null,"declarations":null,"members":null,"components":null,"clauses":null,"options":null,"body":null,"trueBody":null,"falseBody":null,"expression":null,"condition":null,"initializationExpression":null,"leftExpression":null,"rightExpression":null,"subExpression":null,"trueExpression":null,"falseExpression":null,"loopExpression":null,"baseExpression":null,"indexExpression":null,"startExpression":null,"endExpression":null,"value":null,"initialValue":null,"externalCall":null,"eventCall":null,"errorCall":null,"leftHandSide":null,"rightHandSide":null,"length":null},{"nodeType":"ContractDefinition","name":"ERC20","src":"1401:11610:0","memberName":null,"functionName":null,"AST":null,"nodes":[{"nodeType":"VariableDeclaration","name":"_balances","src":"1457:45:0","memberName":null,"functionName":null,"AST":null,"nodes":null,"statements":null,"arguments":null,"declarations":null,"members":null,"components":null,"clauses":null,"options":null,"body":null,"trueBody":null,"falseBody":null,"expression":null,"condition":null,"initializationExpression":null,"leftExpression":null,"rightExpression":null,"subExpression":null,"trueExpression":null,"falseExpression":null,"loopExpression":null,"baseExpression":null,"indexExpression":null,"startExpression":null,"endExpression":null,"value":null,"initialValue":null,"externalCall":null,"eventCall":null,"errorCall":null,"leftHandSide":null,"rightHandSide":null,"length":null},{"nodeType":"VariableDeclaration","name":"_allowances","src":"1509:67:0","memberName":null,"functionName":null,"AST":null,"nodes":null,"statements":null,"arguments":null,"declarations":null,"members":null,"components":null,"clauses":null,"options":null,"body":null,"trueBody":null,"falseBody":null,"expression":null,"condition":null,"initializationExpression":null,"leftExpression":null,"rightExpression":null,"subExpression":null,"trueExpression":null,"falseExpression":null,"loopExpression":null,"baseExpression":null,"indexExpression":null,"startExpression":null,"endExpression":null,"value":null,"initialValue":null,"externalCall":null,"eventCall":null,"errorCall":null,"leftHandSide":null,"rightHandSide":null,"length":null},{"nodeType":"VariableDeclaration","name":"_totalSupply","src":"1583:28:0","memberName":null,"functionName":null,"AST":null,"nodes":null,"statements":null,"arguments":null,"declarations":null,"members":null,"components":null,"clauses":null,"options":null,"body":null,"trueBody":null,"falseBody":null,"expression":null,"condition":null,"initializationExpression":null,"leftExpression":null,"rightExpression":null,"subExpression":null,"trueExpression":null,"falseExpression":null,"loopExpression":null,"baseExpression":null,"indexExpression":null,"startExpression":null,"endExpression":null,"value":null,"initialValue":null,"externalCall":null,"eventCall":null,"errorCall":null,"leftHandSide":null,"rightHandSide":null,"length":null},{"nodeType":"VariableDeclaration","name":"_name","src":"1618:20:0","memberName":null,"functionName":null,"AST":null,"nodes":null,"statements":null,"arguments":null,"declarations":null,"members":null,"components":null,"clauses":null,"options":null,"body":null,"trueBody":null,"falseBody":null,"expression":null,"condition":null,"initializationExpression":null,"leftExpression":null,"rightExpression":null,"subExpression":null,"trueExpression":null,"falseExpression":null,"loopExpression":null,"baseExpression":null,"indexExpression":null,"startExpression":null,"endExpression":null,"value":null,"initialValue":null,"externalCall":null,"eventCall":null,"errorCall":null,"leftHandSide":null,"rightHandSide":null,"length":null},{"nodeType":"VariableDeclaration","name":"_symbol","src":"1644:22:0","memberName":null,"functionName":null,"AST":null,"nodes":null,"statements":null,"arguments":null,"declarations":null,"members":null,"components":null,"clauses":null,"options":null,"body":null,"trueBody":null,"falseBody":null,"expression":null,"condition":null,"initializationExpression":null,"leftExpression":null,"rightExpression":null,"subExpression":null,"trueExpression":null,"falseExpression":null,"loopExpression":null,"baseExpression":null,"indexExpression":null,"startExpression":null,"endExpression":null,"value":null,"initialValue":null,"externalCall":null,"eventCall":null,"errorCall":null,"leftHandSide":null,"rightHandSide":null,"length":null},{"nodeType":"FunctionDefinition","name":"","src":"1976:113:0","memberName":null,"functionName":null,"AST":null,"nodes":null,"statements":null,"arguments":null,"declarations":null,"members":null,"components":null,"clauses":null,"options":null,"body":{"nodeType":"Block","name":null,"src":"2032:57:0","memberName":null,"functionName":null,"AST":null,"nodes":null,"statements":[{"nodeType":"ExpressionStatement","name":null,"src":"2042:13:0","memberName":null,"functionName":null,"AST":null,"nodes":null,"statements":null,"arguments":null,"declarations":null,"members":null,"components":null,"clauses":null,"options":null,"body":null,"trueBody":null,"falseBody":null,"expression":{"nodeType":"Assignment","name":null,"src":"2042:13:0","memberName":null,"functionName":null,"AST":null,"nodes":null,"statements":null,"arguments":null,"declarations":null,"members":null,"components":null,"clauses":null,"options":null,"body":null,"trueBody":null,"falseBody":null,"expression":null,"condition":null,"initializationExpression":null,"leftExpression":null,"rightExpression":null,"subExpression":null,"trueExpression":null,"falseExpression":null,"loopExpression":null,"baseExpression":null,"indexExpression":null,"startExpression":null,"endExpression":null,"value":null,"initialValue":null,"externalCall":null,"eventCall":null,"errorCall":null,"leftHandSide":{"nodeType":"Identifier","name":"_name","src":"2042:5:0","memberName":null,"functionName":null,"AST":null,"nodes":null,"statements":null,"arguments":null,"declarations":null,"members":null,"components":null,"clauses":null,"options":null,"body":null,"trueBody":null,"falseBody":null,"expression":null,"condition":null,"initializationExpression":null,"leftExpression":null,"rightExpression":null,"subExpression":null,"trueExpression":null,"falseExpression":null,"loopExpression":null,"baseExpression":null,"indexExpression":null,"startExpression":null,"endExpression":null,"value":null,"initialValue":null,"externalCall":null,"eventCall":null,"errorCall":null,"leftHandSide":null,"rightHandSide":null,"length":null},"rightHandSide":{"nodeType":"Identifier","name":"name_","src":"2050:5:0","memberName":null,"functionName":null,"AST":null,"nodes":null,"statements":null,"arguments":null,"declarations":null,"members":null,"components":null,"clauses":null,"options":null,"body":null,"trueBody":null,"falseBody":null,"expression":null,"condition":null,"initializationExpression":null,"leftExpression":null,"rightExpression":null,"subExpression":null,"trueExpression":null,"falseExpression":null,"loopExpression":null,"baseExpression":null,"indexExpression":null,"startExpression":null,"endExpression":null,"value":null,"initialValue":null,"externalCall":null,"eventCall":null,"errorCall":null,"leftHandSide":null,"rightHandSide":null,"length":null},"length":null},"condition":null,"initializationExpression":null,"leftExpression":null,"rightExpression":null,"subExpression":null,"trueExpression":null,"falseExpression":null,"loopExpression":null,"baseExpression":null,"indexExpression":null,"startExpression":null,"endExpression":null,"value":null,"initialValue":null,"externalCall":null,"eventCall":null,"errorCall":null,"leftHandSide":null,"rightHandSide":null,"length":null},{"nodeType":"ExpressionStatement","name":null,"src":"2065:17:0","memberName":null,"functionName":null,"AST":null,"nodes":null,"statements":null,"arguments":null,"declarations":null,"members":null,"components":null,"clauses":null,"options":null,"body":null,"trueBody":null,"falseBody":null,"expression":{"nodeType":"Assignment","name":null,"src":"2065:17:0","memberName":null,"functionName":null,"AST":null,"nodes":null,"statements":null,"arguments":null,"declarations":null,"members":null,"components":null,"clauses":null,"options":null,"body":null,"trueBody":null,"falseBody":null,"expression":null,"condition":null,"initializationExpression":null,"leftExpression":null,"rightExpression":null,"subExpression":null,"trueExpression":null,"falseExpression":null,"loopExpression":null,"baseExpression":null,"indexExpression":null,"startExpression":null,"endExpression":null,"value":null,"initialValue":null,"externalCall":null,"eventCall":null,"errorCall":null,"leftHandSide":{"nodeType":"Identifier","name":"_symbol","src":"2065:7:0","memberName":null,"functionName":null,"AST":null,"nodes":null,"statements":null,"arguments":null,"declarations":null,"members":null,"components":null,"clauses":null,"options":null,"body":null,"trueBody":null,"falseBody":null,"expression":null,"condition":null,"initializationExpression":null,"leftExpression":null,"rightExpression":null,"subExpression":null,"trueExpression":null,"falseExpression":null,"loopExpression":null,"baseExpression":null,"indexExpression":null,"startExpression":null,"endExpression":null,"value":null,"initialValue":null,"externalCall":null,"eventCall":null,"errorCall":null,"leftHandSide":null,"rightHandSide":null,"length":null},"rightHandSide":{"nodeType":"Identifier","name":"symbol_","src":"2075:7:0","memberName":null,"functionName":null,"AST":null,"nodes":null,"statements":null,"arguments":null,"declarations":null,"members":null,"components":null,"clauses":null,"options":null,"body":null,"trueBody":null,"falseBody":null,"expression":null,"condition":null,"initializationExpression":null,"leftExpression":null,"rightExpression":null,"subExpression":null,"trueExpression":null,"falseExpression":null,"loopExpression":null,"baseExpression":null,"indexExpression":null,"startExpression":null,"endExpression":null,"value":null,"initialValue":null,"externalCall":null,"eventCall":null,"errorCall":null,"leftHandSide":null,"rightHandSide":null,"length":null},"length":null},"condition":null,"initializationExpression":null,"leftExpression":null,"rightExpression":null,"subExpression":null,"trueExpression":null,"falseExpression":null,"loopExpression":null,"baseExpression":null,"indexExpression":null,"startExpression":null,"endExpression":null,"value":null,"initialValue":null,"externalCall":null,"eventCall":null,"errorCall":null,"leftHandSide":null,"rightHandSide":null,"length":null}],"arguments":null,"declarations":null,"members":null,"components":null,"clauses":null,"options":null,"body":null,"trueBody":null,"falseBody":null,"expression":null,"condition":null,"initializationExpression":null,"leftExpression":null,"rightExpression":null,"subExpression":null,"trueExpression":null,"falseExpression":null,"loopExpression":null,"baseExpression":null,"indexExpression":null,"startExpression":null,"endExpression":null,"value":null,"initialValue":null,"externalCall":null,"eventCall":null,"errorCall":null,"leftHandSide":null,"rightHandSide":null,"length":null},"trueBody":null,"falseBody":null,"expression":null,"condition":null,"initializationExpression":null,"leftExpression":null,"rightExpression":null,"subExpression":null,"trueExpression":null,"falseExpression":null,"loopExpression":null,"baseExpression":null,"indexExpression":null,"startExpression":null,"endExpression":null,"value":null,"initialValue":null,"externalCall":null,"eventCall":null,"errorCall":null,"leftHandSide":null,"rightHandSide":null,"length":null},{"nodeType":"FunctionDefinition","name":"name","src":"2154:98:0","memberName":null,"functionName":null,"AST":null,"nodes":null,"statements":null,"arguments":null,"declarations":null,"members":null,"components":null,"clauses":null,"options":null,"body":{"nodeType":"Block","name":null,"src":"2223:29:0","memberName":null,"functionName":null,"AST":null,"nodes":null,"statements":[{"nodeType":"Return","name":null,"src":"2233:12:0","memberName":null,"functionName":null,"AST":null,"nodes":null,"statements":null,"arguments":null,"declarations":null,"members":null,"components":null,"clauses":null,"options":null,"body":null,"trueBody":null,"falseBody":null,"expression":{"nodeType":"Identifier","name":"_name","src":"2240:5:0","memberName":null,"functionName":null,"AST":null,"nodes":null,"statements":null,"arguments":null,"declarations":null,"members":null,"components":null,"clauses":null,"options":null,"body":null,"trueBody":null,"falseBody":null,"expression":null,"condition":null,"initializationExpression":null,"leftExpression":null,"rightExpression":null,"subExpression":null,"trueExpression":null,"falseExpression":null,"loopExpression":null,"baseExpression":null,"indexExpression":null,"startExpression":null,"endExpression":null,"value":null,"initialValue":null,"externalCall":null,"eventCall":null,"errorCall":null,"leftHandSide":null,"rightHandSide":null,"length":null},"condition":null,"initializationExpression":null,"leftExpression":null,"rightExpression":null,"subExpression":null,"trueExpression":null,"falseExpression":null,"loopExpression":null,"baseExpression":null,"indexExpression":null,"startExpression":null,"endExpression":null,"value":null,"initialValue":null,"externalCall":null,"eventCall":null,"errorCall":null,"leftHandSide":null,"rightHandSide":null,"length":null}],"arguments":null,"declarations":null,"members":null,"components":null,"clauses":null,"options":null,"body":null,"trueBody":null,"falseBody":null,"expression":null,"condition":null,"initializationExpression":null,"leftExpression":null,"rightExpression":null,"subExpression":null,"trueExpression":null,"falseExpression":null,"loopExpression":null,"baseExpression":null,"indexExpression":null,"startExpression":null,"endExpression":null,"value":null,"initialValue":null,"externalCall":null,"eventCall":null,"errorCall":null,"leftHandSide":null,"rightHandSide":null,"length":null},"trueBody":null,"falseBody":null,"expression":null,"condition":null,"initializationExpression":null,"leftExpression":null,"rightExpression":null,"subExpression":null,"trueExpression":null,"falseExpression":null,"loopExpression":null,"baseExpression":null,"indexExpression":null,"startExpression":null,"endExpression":null,"value":null,"initialValue":null,"externalCall":null,"eventCall":null,"errorCall":null,"leftHandSide":null,"rightHandSide":null,"length":null},{"nodeType":"FunctionDefinition","name":"symbol","src":"2365:102:0","memberName":null,"functionName":null,"AST":null,"nodes":null,"statements":null,"arguments":null,"declarations":null,"members":null,"components":null,"clauses":null,"options":null,"body":{"nodeType":"Block","name":null,"src":"2436:31:0","memberName":null,"functionName":null,"AST":null,"nodes":null,"statements":[{"nodeType":"Return","name":null,"src":"2446:14:0","memberName":null,"functionName":null,"AST":null,"nodes":null,"statements":null,"arguments":null,"declarations":null,"members":null,"components":null,"clauses":null,"options":null,"body":null,"trueBody":null,"falseBody":null,"expression":{"nodeType":"Identifier","name":"_symbol","src":"2453:7:0","memberName":null,"functionName":null,"AST":null,"nodes":null,"statements":null,"arguments":null,"declarations":null,"members":null,"components":null,"clauses":null,"options":null,"body":null,"trueBody":null,"falseBody":null,"expression":null,"condition":null,"initializationExpression":null,"leftExpression":null,"rightExpression":null,"subExpression":null,"trueExpression":null,"falseExpression":null,"loopExpression":null,"baseExpression":null,"indexExpression":null,"startExpression":null,"endExpression":null,"value":null,"initialValue":null,"externalCall":null,"eventCall":null,"errorCall":null,"leftHandSide":null,"rightHandSide":null,"length":null},"condition":null,"initializationExpression":null,"leftExpression":null,"rightExpression":null,"subExpression":null,"trueExpression":null,"falseExpression":null,"loopExpression":null,"baseExpression":null,"indexExpression":null,"startExpression":null,"endExpression":null,"value":null,"initialValue":null,"externalCall":null,"eventCall":null,"errorCall":null,"leftHandSide":null,"rightHandSide":null,"length":null}],"arguments":null,"declarations":null,"members":null,"components":null,"clauses":null,"options":null,"body":null,"trueBody":null,"falseBody":null,"expression":null,"condition":null,"initializationExpression":null,"leftExpression":null,"rightExpression":null,"subExpression":null,"trueExpression":null,"falseExpression":null,"loopExpression":null,"baseExpression":null,"indexExpression":null,"startExpression":null,"endExpression":null,"value":null,"initialValue":null,"externalCall":null,"eventCall":null,"errorCall":null,"leftHandSide":null,"rightHandSide":null,"length":null},"trueBody":null,"falseBody":null,"expression":null,"condition":null,"initializationExpression":null,"leftExpression":null,"rightExpression":null,"subExpression":null,"trueExpression":null,"falseExpression":null,"loopExpression":null,"baseExpression":null,"indexExpression":null,"startExpression":null,"endExpression":null,"value":null,"initialValue":null,"externalCall":null,"eventCall":null,"errorCall":null,"leftHandSide":null,"rightHandSide":null,"length":null},{"nodeType":"FunctionDefinition","name":"decimals","src":"3091:91:0","memberName":null,"functionName":null,"AST":null,"nodes":null,"statements":null,"arguments":null,"declarations":null,"members":null,"components":null,"clauses":null,"options":null,"body":{"nodeType":"Block","name":null,"src":"3156:26:0","memberName":null,"functionName":null,"AST":null,"nodes":null,"statements":[{"nodeType":"Return","name":null,"src":"3166:9:0","memberName":null,"functionName":null,"AST":null,"nodes":null,"statements":null,"arguments":null,"declarations":null,"members":null,"components":null,"clauses":null,"options":null,"body":null,"trueBody":null,"falseBody":null,"expression":{"nodeType":"Literal","name":null,"src":"3173:2:0","memberName":null,"functionName":null,"AST":null,"nodes":null,"statements":null,"arguments":null,"declarations":null,"members":null,"components":null,"clauses":null,"options":null,"body":null,"trueBody":null,"falseBody":null,"expression":null,"condition":null,"initializationExpression":null,"leftExpression":null,"rightExpression":null,"subExpression":null,"trueExpression":null,"falseExpression":null,"loopExpression":null,"baseExpression":null,"indexExpression":null,"startExpression":null,"endExpression":null,"value":"18","initialValue":null,"externalCall":null,"eventCall":null,"errorCall":null,"leftHandSide":null,"rightHandSide":null,"length":null},"condition":null,"initializationExpression":null,"leftExpression":null,"rightExpression":null,"subExpression":null,"trueExpression":null,"falseExpression":null,"loopExpression":null,"baseExpression":null,"indexExpression":null,"startExpression":null,"endExpression":null,"value":null,"initialValue":null,"externalCall":null,"eventCall":null,"errorCall":null,"leftHandSide":null,"rightHandSide":null,"length":null}],"arguments":null,"declarations":null,"members":null,"components":null,"clauses":null,"options":null,"body":null,"trueBody":null,"falseBody":null,"expression":null,"condition":null,"initializationExpression":null,"leftExpression":null,"rightExpression":null,"subExpression":null,"trueExpression":null,"falseExpression":null,"loopExpression":null,"baseExpression":null,"indexExpression":null,"startExpression":null,"endExpression":null,"value":null,"initialValue":null,"externalCall":null,"eventCall":null,"errorCall":null,"leftHandSide":null,"rightHandSide":null,"length":null},"trueBody":null,"falseBody":null,"expression":null,"condition":null,"initializationExpression":null,"leftExpression":null,"rightExpression":null,"subExpression":null,"trueExpression":null,"falseExpression":null,"loopExpression":null,"baseExpression":null,"indexExpression":null,"startExpression":null,"endExpression":null,"value":null,"initialValue":null,"externalCall":null,"eventCall":null,"errorCall":null,"leftHandSide":null,"rightHandSide":null,"length":null},{"nodeType":"FunctionDefinition","name":"totalSupply","src":"3242:106:0","memberName":null,"functionName":null,"AST":null,"nodes":null,"statements":null,"arguments":null,"declarations":null,"members":null,"components":null,"clauses":null,"options":null,"body":{"nodeType":"Block","name":null,"src":"3312:36:0","memberName":null,"functionName":null,"AST":null,"nodes":null,"statements":[{"nodeType":"Return","name":null,"src":"3322:19:0","memberName":null,"functionName":null,"AST":null,"nodes":null,"statements":null,"arguments":null,"declarations":null,"members":null,"components":null,"clauses":null,"options":null,"body":null,"trueBody":null,"falseBody":null,"expression":{"nodeType":"Identifier","name":"_totalSupply","src":"3329:12:0","memberName":null,"functionName":null,"AST":null,"nodes":null,"statements":null,"arguments":null,"declarations":null,"members":null,"components":null,"clauses":null,"options":null,"body":null,"trueBody":null,"falseBody":null,"expression":null,"condition":null,"initializationExpression":null,"leftExpression":null,"rightExpression":null,"subExpression":null,"trueExpression":null,"falseExpression":null,"loopExpression":null,"baseExpression":null,"indexExpression":null,"startExpression":null,"endExpression":null,"value":null,"initialValue":null,"externalCall":null,"eventCall":null,"errorCall":null,"leftHandSide":null,"rightHandSide":null,"length":null},"condition":null,"initializationExpression":null,"leftExpression":null,"rightExpression":null,"subExpression":null,"trueExpression":null,"falseExpression":null,"loopExpression":null,"baseExpression":null,"indexExpression":null,"startExpression":null,"endExpression":null,"value":null,"initialValue":null,"externalCall":null,"eventCall":null,"errorCall":null,"leftHandSide":null,"rightHandSide":null,"length":null}],"arguments":null,"declarations":null,"members":null,"components":null,"clauses":null,"options":null,"body":null,"trueBody":null,"falseBody":null,"expression":null,"condition":null,"initializationExpression":null,"leftExpression":null,"rightExpression":null,"subExpression":null,"trueExpression":null,"falseExpression":null,"loopExpression":null,"baseExpression":null,"indexExpression":null,"startExpression":null,"endExpression":null,"value":null,"initialValue":null,"externalCall":null,"eventCall":null,"errorCall":null,"leftHandSide":null,"rightHandSide":null,"length":null},"trueBody":null,"falseBody":null,"expression":null,"condition":null,"initializationExpression":null,"leftExpression":null,"rightExpression":null,"subExpression":null,"trueExpression":null,"falseExpression":null,"loopExpression":null,"baseExpression":null,"indexExpression":null,"startExpression":null,"endExpression":null,"value":null,"initialValue":null,"externalCall":null,"eventCall":null,"errorCall":null,"leftHandSide":null,"rightHandSide":null,"length":null},{"nodeType":"FunctionDefinition","name":"balanceOf","src":"3406:125:0","memberName":null,"functionName":null,"AST":null,"nodes":null,"statements":null,"arguments":null,"declarations":null,"members":null,"components":null,"clauses":null,"options":null,"body":{"nodeType":"Block","name":null,"src":"3489:42:0","memberName":null,"functionName":null,"AST":null,"nodes":null,"statements":[{"nodeType":"Return","name":null,"src":"3499:25:0","memberName":null,"functionName":null,"AST":null,"nodes":null,"statements":null,"arguments":null,"declarations":null,"members":null,"components":null,"clauses":null,"options":null,"body":null,"trueBody":null,"falseBody":null,"expression":{"nodeType":"IndexAccess","name":null,"src":"3506:18:0","memberName":null,"functionName":null,"AST":null,"nodes":null,"statements":null,"arguments":null,"declarations":null,"members":null,"components":null,"clauses":null,"options":null,"body":null,"trueBody":null,"falseBody":null,"expression":null,"condition":null,"initializationExpression":null,"leftExpression":null,"rightExpression":null,"subExpression":null,"trueExpression":null,"falseExpression":null,"loopExpression":null,"baseExpression":{"nodeType":"Identifier","name":"_balances","src":"3506:9:0","memberName":null,"functionName":null,"AST":null,"nodes":null,"statements":null,"arguments":null,"declarations":null,"members":null,"components":null,"clauses":null,"options":null,"body":null,"trueBody":null,"falseBody":null,"expression":null,"condition":null,"initializationExpression":null,"leftExpression":null,"rightExpression":null,"subExpression":null,"trueExpression":null,"falseExpression":null,"loopExpression":null,"baseExpression":null,"indexExpression":null,"startExpression":null,"endExpression":null,"value":null,"initialValue":null,"externalCall":null,"eventCall":null,"errorCall":null,"leftHandSide":null,"rightHandSide":null,"length":null},"indexExpression":{"nodeType":"Identifier","name":"account","src":"3516:7:0","memberName":null,"functionName":null,"AST":null,"nodes":null,"statements":null,"arguments":null,"declarations":null,"members":null,"components":null,"clauses":null,"options":null,"body":null,"trueBody":null,"falseBody":null,"expression":null,"condition":null,"initializationExpression":null,"leftExpression":null,"rightExpression":null,"subExpression":null,"trueExpression":null,"falseExpression":null,"loopExpression":null,"baseExpression":null,"indexExpression":null,"startExpression":null,"endExpression":null,"value":null,"initialValue":null,"externalCall":null,"eventCall":null,"errorCall":null,"leftHandSide":null,"rightHandSide":null,"length":null},"startExpression":null,"endExpression":null,"value":null,"initialValue":null,"externalCall":null,"eventCall":null,"errorCall":null,"leftHandSide":null,"rightHandSide":null,"length":null},"condition":null,"initializationExpression":null,"leftExpression":null,"rightExpression":null,"subExpression":null,"trueExpression":null,"falseExpression":null,"loopExpression":null,"baseExpression":null,"indexExpression":null,"startExpression":null,"endExpression":null,"value":null,"initialValue":null,"externalCall":null,"eventCall":null,"errorCall":null,"leftHandSide":null,"rightHandSide":null,"length":null}],"arguments":null,"declarations":null,"members":null,"components":null,"clauses":null,"options":null,"body":null,"trueBody":null,"falseBody":null,"expression":null,"condition":null,"initializationExpression":null,"leftExpression":null,"rightExpression":null,"subExpression":null,"trueExpression":null,"falseExpression":null,"loopExpression":null,"baseExpression":null,"indexExpression":null,"startExpression":null,"endExpression":null,"value":null,"initialValue":null,"externalCall":null,"eventCall":null,"errorCall":null,"leftHandSide":null,"rightHandSide":null,"length":null},"trueBody":null,"falseBody":null,"expression":null,"condition":null,"initializationExpression":null,"leftExpression":null,"rightExpression":null,"subExpression":null,"trueExpression":null,"falseExpression":null,"loopExpression":null,"baseExpression":null,"indexExpression":null,"startExpression":null,"endExpression":null,"value":null,"initialValue":null,"externalCall":null,"eventCall":null,"errorCall":null,"leftHandSide":null,"rightHandSide":null,"length":null},{"nodeType":"FunctionDefinition","name":"transfer","src":"3727:189:0","memberName":null,"functionName":null,"AST":null,"nodes":null,"statements":null,"arguments":null,"declarations":null,"members":null,"components":null,"clauses":null,"options":null,"body":{"nodeType":"Block","name":null,"src":"3812:104:0","memberName":null,"functionName":null,"AST":null,"nodes":null,"statements":[{"nodeType":"VariableDeclarationStatement","name":null,"src":"3822:28:0","memberName":null,"functionName":null,"AST":null,"nodes":null,"statements":null,"arguments":null,"declarations":[{"nodeType":"VariableDeclaration","name":"owner","src":"3822:13:0","memberName":null,"functionName":null,"AST":null,"nodes":null,"statements":null,"arguments":null,"declarations":null,"members":null,"components":null,"clauses":null,"options":null,"body":null,"trueBody":null,"falseBody":null,"expression":null,"condition":null,"initializationExpression":null,"leftExpression":null,"rightExpression":null,"subExpression":null,"trueExpression":null,"falseExpression":null,"loopExpression":null,"baseExpression":null,"indexExpression":null,"startExpression":null,"endExpression":null,"value":null,"initialValue":null,"externalCall":null,"eventCall":null,"errorCall":null,"leftHandSide":null,"rightHandSide":null,"length":null}],"members":null,"components":null,"clauses":null,"options":null,"body":null,"trueBody":null,"falseBody":null,"expression":null,"condition":null,"initializationExpression":null,"leftExpression":null,"rightExpression":null,"subExpression":null,"trueExpression":null,"falseExpression":null,"loopExpression":null,"baseExpression":null,"indexExpression":null,"startExpression":null,"endExpression":null,"value":null,"initialValue":{"nodeType":"FunctionCall","name":null,"src":"3838:12:0","memberName":null,"functionName":null,"AST":null,"nodes":null,"statements":null,"arguments":[],"declarations":null,"members":null,"components":null,"clauses":null,"options":null,"body":null,"trueBody":null,"falseBody":null,"expression":{"nodeType":"Identifier","name":"_msgSender","src":"3838:10:0","memberName":null,"functionName":null,"AST":null,"nodes":null,"statements":null,"arguments":null,"declarations":null,"members":null,"components":null,"clauses":null,"options":null,"body":null,"trueBody":null,"falseBody":null,"expression":null,"condition":null,"initializationExpression":null,"leftExpression":null,"rightExpression":null,"subExpression":null,"trueExpression":null,"falseExpression":null,"loopExpression":null,"baseExpression":null,"indexExpression":null,"startExpression":null,"endExpression":null,"value":null,"initialValue":null,"externalCall":null,"eventCall":null,"errorCall":null,"leftHandSide":null,"rightHandSide":null,"length":null},"condition":null,"initializationExpression":null,"leftExpression":null,"rightExpression":null,"subExpression":null,"trueExpression":null,"falseExpression":null,"loopExpression":null,"baseExpression":null,"indexExpression":null,"startExpression":null,"endExpression":null,"value":null,"initialValue":null,"externalCall":null,"eventCall":null,"errorCall":null,"leftHandSide":null,"rightHandSide":null,"length":null},"externalCall":null,"eventCall":null,"errorCall":null,"leftHandSide":null,"rightHandSide":null,"length":null},{"nodeType":"ExpressionStatement","name":null,"src":"3860:28:0","memberName":null,"functionName":null,"AST":null,"nodes":null,"statements":null,"arguments":null,"declarations":null,"members":null,"components":null,"clauses":null,"options":null,"body":null,"trueBody":null,"falseBody":null,"expression":{"nodeType":"FunctionCall","name":null,"src":"3860:28:0","memberName":null,"functionName":null,"AST":null,"nodes":null,"statements":null,"arguments":[{"nodeType":"Identifier","name":"owner","src":"3870:5:0","memberName":null,"functionName":null,"AST":null,"nodes":null,"statements":null,"arguments":null,"declarations":null,"members":null,"components":null,"clauses":null,"options":null,"body":null,"trueBody":null,"falseBody":null,"expression":null,"condition":null,"initializationExpression":null,"leftExpression":null,"rightExpression":null,"subExpression":null,"trueExpression":null,"falseExpression":null,"loopExpression":null,"baseExpression":null,"indexExpression":null,"startExpression":null,"endExpression":null,"value":null,"initialValue":null,"externalCall":null,"eventCall":null,"errorCall":null,"leftHandSide":null,"rightHandSide":null,"length":null},{"nodeType":"Identifier","name":"to","src":"3877:2:0","memberName":null,"functionName":null,"AST":null,"nodes":null,"statements":null,"arguments":null,"declarations":null,"members":null,"components":null,"clauses":null,"options":null,"body":null,"trueBody":null,"falseBody":null,"expression":null,"condition":null,"initializationExpression":null,"leftExpression":null,"rightExpression":null,"subExpression":null,"trueExpression":null,"falseExpression":null,"loopExpression":null,"baseExpression":null,"indexExpression":null,"startExpression":null,"endExpression":null,"value":null,"initialValue":null,"externalCall":null,"eventCall":null,"errorCall":null,"leftHandSide":null,"rightHandSide":null,"length":null},{"nodeType":"Identifier","name":"amount","src":"3881:6:0","memberName":null,"functionName":null,"AST":null,"nodes":null,"statements":null,"arguments":null,"declarations":null,"members":null,"components":null,"clauses":null,"options":null,"body":null,"trueBody":null,"falseBody":null,"expression":null,"condition":null,"initializationExpression":null,"leftExpression":null,"rightExpression":null,"subExpression":null,"trueExpression":null,"falseExpression":null,"loopExpression":null,"baseExpression":null,"indexExpression":null,"startExpression":null,"endExpression":null,"value":null,"initialValue":null,"externalCall":null,"eventCall":null,"errorCall":null,"leftHandSide":null,"rightHandSide":null,"length":null}],"declarations":null,"members":null,"components":null,"clauses":null,"options":null,"body":null,"trueBody":null,"falseBody":null,"expression":{"nodeType":"Identifier","name":"_transfer","src":"3860:9:0","memberName":null,"functionName":null,"AST":null,"nodes":null,"statements":null,"arguments":null,"declarations":null,"members":null,"components":null,"clauses":null,"options":null,"body":null,"trueBody":null,"falseBody":null,"expression":null,"condition":null,"initializationExpression":null,"leftExpression":null,"rightExpression":null,"subExpression":null,"trueExpression":null,"falseExpression":null,"loopExpression":null,"baseExpression":null,"indexExpression":null,"startExpression":null,"endExpression":null,"value":null,"initialValue":null,"externalCall":null,"eventCall":null,"errorCall":null,"leftHandSide":null,"rightHandSide":null,"length":null},"condition":null,"initializationExpression":null,"leftExpression":null,"rightExpression":null,"subExpression":null,"trueExpression":null,"falseExpression":null,"loopExpression":null,"baseExpression":null,"indexExpression":null,"startExpression":null,"endExpression":null,"value":null,"initialValue":null,"externalCall":null,"eventCall":null,"errorCall":null,"leftHandSide":null,"rightHandSide":null,"length":null},"condition":null,"initializationExpression":null,"leftExpression":null,"rightExpression":null,"subExpression":null,"trueExpression":null,"falseExpression":null,"loopExpression":null,"baseExpression":null,"indexExpression":null,"startExpression":null,"endExpression":null,"value":null,"initialValue":null,"externalCall":null,"eventCall":null,"errorCall":null,"leftHandSide":null,"rightHandSide":null,"length":null},{"nodeType":"Return","name":null,"src":"3898:11:0","memberName":null,"functionName":null,"AST":null,"nodes":null,"statements":null,"arguments":null,"declarations":null,"members":null,"components":null,"clauses":null,"options":null,"body":null,"trueBody":null,"falseBody":null,"expression":{"nodeType":"Literal","name":null,"src":"3905:4:0","memberName":null,"functionName":null,"AST":null,"nodes":null,"statements":null,"arguments":null,"declarations":null,"members":null,"components":null,"clauses":null,"options":null,"body":null,"trueBody":null,"falseBody":null,"expression":null,"condition":null,"initializationExpression":null,"leftExpression":null,"rightExpression":null,"subExpression":null,"trueExpression":null,"falseExpression":null,"loopExpression":null,"baseExpression":null,"indexExpression":null,"startExpression":null,"endExpression":null,"value":"true","initialValue":null,"externalCall":null,"eventCall":null,"errorCall":null,"leftHandSide":null,"rightHandSide":null,"length":null},"condition":null,"initializationExpression":null,"leftExpression":null,"rightExpression":null,"subExpression":null,"trueExpression":null,"falseExpression":null,"loopExpression":null,"baseExpression":null,"indexExpression":null,"startExpression":null,"endExpression":null,"value":null,"initialValue":null,"externalCall":null,"eventCall":null,"errorCall":null,"leftHandSide":null,"rightHandSide":null,"length":null}],"arguments":null,"declarations":null,"members":null,"components":null,"clauses":null,"options":null,"body":null,"trueBody":null,"falseBody":null,"expression":null,"condition":null,"initializationExpression":null,"leftExpression":null,"rightExpression":null,"subExpression":null,"trueExpression":null,"falseExpression":null,"loopExpression":null,"baseExpression":null,"indexExpression":null,"startExpression":null,"endExpression":null,"value":null,"initialValue":null,"externalCall":null,"eventCall":null,"errorCall":null,"leftHandSide":null,"rightHandSide":null,"length":null},"trueBody":null,"falseBody":null,"expression":null,"condition":null,"initializationExpression":null,"leftExpression":null,"rightExpression":null,"subExpression":null,"trueExpression":null,"falseExpression":null,"loopExpression":null,"baseExpression":null,"indexExpression":null,"startExpression":null,"endExpression":null,"value":null,"initialValue":null,"externalCall":null,"eventCall":null,"errorCall":null,"leftHandSide":null,"rightHandSide":null,"length":null},{"nodeType":"FunctionDefinition","name":"allowance","src":"3974:149:0","memberName":null,"functionName":null,"AST":null,"nodes":null,"statements":null,"arguments":null,"declarations":null,"members":null,"components":null,"clauses":null,"options":null,"body":{"nodeType":"Block","name":null,"src":"4072:51:0","memberName":null,"functionName":null,"AST":null,"nodes":null,"statements":[{"nodeType":"Return","name":null,"src":"4082:34:0","memberName":null,"functionName":null,"AST":null,"nodes":null,"statements":null,"arguments":null,"declarations":null,"members":null,"components":null,"clauses":null,"options":null,"body":null,"trueBody":null,"falseBody":null,"expression":{"nodeType":"IndexAccess","name":null,"src":"4089:27:0","memberName":null,"functionName":null,"AST":null,"nodes":null,"statements":null,"arguments":null,"declarations":null,"members":null,"components":null,"clauses":null,"options":null,"body":null,"trueBody":null,"falseBody":null,"expression":null,"condition":null,"initializationExpression":null,"leftExpression":null,"rightExpression":null,"subExpression":null,"trueExpression":null,"falseExpression":null,"loopExpression":null,"baseExpression":{"nodeType":"IndexAccess","name":null,"src":"4089:18:0","memberName":null,"functionName":null,"AST":null,"nodes":null,"statements":null,"arguments":null,"declarations":null,"members":null,"components":null,"clauses":null,"options":null,"body":null,"trueBody":null,"falseBody":null,"expression":null,"condition":null,"initializationExpression":null,"leftExpression":null,"rightExpression":null,"subExpression":null,"trueExpression":null,"falseExpression":null,"loopExpression":null,"baseExpression":{"nodeType":"Identifier","name":"_allowances","src":"4089:11:0","memberName":null,"functionName":null,"AST":null,"nodes":null,"statements":null,"arguments":null,"declarations":null,"members":null,"components":null,"clauses":null,"options":null,"body":null,"trueBody":null,"falseBody":null,"expression":null,"condition":null,"initializationExpression":null,"leftExpression":null,"rightExpression":null,"subExpression":null,"trueExpression":null,"falseExpression":null,"loopExpression":null,"baseExpression":null,"indexExpression":null,"startExpression":null,"endExpression":null,"value":null,"initialValue":null,"externalCall":null,"eventCall":null,"errorCall":null,"leftHandSide":null,"rightHandSide":null,"length":null},"indexExpression":{"nodeType":"Identifier","name":"owner","src":"4101:5:0","memberName":null,"functionName":null,"AST":null,"nodes":null,"statements":null,"arguments":null,"declarations":null,"members":null,"components":null,"clauses":null,"options":null,"body":null,"trueBody":null,"falseBody":null,"expression":null,"condition":null,"initializationExpression":null,"leftExpression":null,"rightExpression":null,"subExpression":null,"trueExpression":null,"falseExpression":null,"loopExpression":null,"baseExpression":null,"indexExpression":null,"startExpression":null,"endExpression":null,"value":null,"initialValue":null,"externalCall":null,"eventCall":null,"errorCall":null,"leftHandSide":null,"rightHandSide":null,"length":null},"startExpression":null,"endExpression":null,"value":null,"initialValue":null,"externalCall":null,"eventCall":null,"errorCall":null,"leftHandSide":null,"rightHandSide":null,"length":null},"indexExpression":{"nodeType":"Identifier","name":"spender","src":"4108:7:0","memberName":null,"functionName":null,"AST":null,"nodes":null,"statements":null,"arguments":null,"declarations":null,"members":null,"components":null,"clauses":null,"options":null,"body":null,"trueBody":null,"falseBody":null,"expression":null,"condition":null,"initializationExpression":null,"leftExpression":null,"rightExpression":null,"subExpression":null,"trueExpression":null,"falseExpression":null,"loopExpression":null,"baseExpression":null,"indexExpression":null,"startExpression":null,"endExpression":null,"value":null,"initialValue":null,"externalCall":null,"eventCall":null,"errorCall":null,"leftHandSide":null,"rightHandSide":null,"length":null},"startExpression":null,"endExpression":null,"value":null,"initialValue":null,"externalCall":null,"eventCall":null,"errorCall":null,"leftHandSide":null,"rightHandSide":null,"length":null},"condition":null,"initializationExpression":null,"leftExpression":null,"rightExpression":null,"subExpression":null,"trueExpression":null,"falseExpression":null,"loopExpression":null,"baseExpression":null,"indexExpression":null,"startExpression":null,"endExpression":null,"value":null,"initialValue":null,"externalCall":null,"eventCall":null,"errorCall":null,"leftHandSide":null,"rightHandSide":null,"length":null}],"arguments":null,"declarations":null,"members":null,"components":null,"clauses":null,"options":null,"body":null,"trueBody":null,"falseBody":null,"expression":null,"condition":null,"initializationExpression":null,"leftExpression":null,"rightExpression":null,"subExpression":null,"trueExpression":null,"falseExpression":null,"loopExpression":null,"baseExpression":null,"indexExpression":null,"startExpression":null,"endExpression":null,"value":null,"initialValue":null,"externalCall":null,"eventCall":null,"errorCall":null,"leftHandSide":null,"rightHandSide":null,"length":null},"trueBody":null,"falseBody":null,"expression":null,"condition":null,"initializationExpression":null,"leftExpression":null,"rightExpression":null,"subExpression":null,"trueExpression":null,"falseExpression":null,"loopExpression":null,"baseExpression":null,"indexExpression":null,"startExpression":null,"endExpression":null,"value":null,"initialValue":null,"externalCall":null,"eventCall":null,"errorCall":null,"leftHandSide":null,"rightHandSide":null,"length":null},{"nodeType":"FunctionDefinition","name":"approve","src":"4431:197:0","memberName":null,"functionName":null,"AST":null,"nodes":null,"statements":null,"arguments":null,"declarations":null,"members":null,"components":null,"clauses":null,"options":null,"body":{"nodeType":"Block","name":null,"src":"4520:108:0","memberName":null,"functionName":null,"AST":null,"nodes":null,"statements":[{"nodeType":"VariableDeclarationStatement","name":null,"src":"4530:28:0","memberName":null,"functionName":null,"AST":null,"nodes":null,"statements":null,"arguments":null,"declarations":[{"nodeType":"VariableDeclaration","name":"owner","src":"4530:13:0","memberName":null,"functionName":null,"AST":null,"nodes":null,"statements":null,"arguments":null,"declarations":null,"members":null,"components":null,"clauses":null,"options":null,"body":null,"trueBody":null,"falseBody":null,"expression":null,"condition":null,"initializationExpression":null,"leftExpression":null,"rightExpression":null,"subExpression":null,"trueExpression":null,"falseExpression":null,"loopExpression":null,"baseExpression":null,"indexExpression":null,"startExpression":null,"endExpression":null,"value":null,"initialValue":null,"externalCall":null,"eventCall":null,"errorCall":null,"leftHandSide":null,"rightHandSide":null,"length":null}],"members":null,"components":null,"clauses":null,"options":null,"body":null,"trueBody":null,"falseBody":null,"expression":null,"condition":null,"initializationExpression":null,"leftExpression":null,"rightExpression":null,"subExpression":null,"trueExpression":null,"falseExpression":null,"loopExpression":null,"baseExpression":null,"indexExpression":null,"startExpression":null,"endExpression":null,"value":null,"initialValue":{"nodeType":"FunctionCall","name":null,"src":"4546:12:0","memberName":null,"functionName":null,"AST":null,"nodes":null,"statements":null,"arguments":[],"declarations":null,"members":null,"components":null,"clauses":null,"options":null,"body":null,"trueBody":null,"falseBody":null,"expression":{"nodeType":"Identifier","name":"_msgSender","src":"4546:10:0","memberName":null,"functionName":null,"AST":null,"nodes":null,"statements":null,"arguments":null,"declarations":null,"members":null,"components":null,"clauses":null,"options":null,"body":null,"trueBody":null,"falseBody":null,"expression":null,"condition":null,"initializationExpression":null,"leftExpression":null,"rightExpression":null,"subExpression":null,"trueExpression":null,"falseExpression":null,"loopExpression":null,"baseExpression":null,"indexExpression":null,"startExpression":null,"endExpression":null,"value":null,"initialValue":null,"externalCall":null,"eventCall":null,"errorCall":null,"leftHandSide":null,"rightHandSide":null,"length":null},"condition":null,"initializationExpression":null,"leftExpression":null,"rightExpression":null,"subExpression":null,"trueExpression":null,"falseExpression":null,"loopExpression":null,"baseExpression":null,"indexExpression":null,"startExpression":null,"endExpression":null,"value":null,"initialValue":null,"externalCall":null,"eventCall":null,"errorCall":null,"leftHandSide":null,"rightHandSide":null,"length":null},"externalCall":null,"eventCall":null,"errorCall":null,"leftHandSide":null,"rightHandSide":null,"length":null},{"nodeType":"ExpressionStatement","name":null,"src":"4568:32:0","memberName":null,"functionName":null,"AST":null,"nodes":null,"statements":null,"arguments":null,"declarations":null,"members":null,"components":null,"clauses":null,"options":null,"body":null,"trueBody":null,"falseBody":null,"expression":{"nodeType":"FunctionCall","name":null,"src":"4568:32:0","memberName":null,"functionName":null,"AST":null,"nodes":null,"statements":null,"arguments":[{"nodeType":"Identifier","name":"owner","src":"4577:5:0","memberName":null,"functionName":null,"AST":null,"nodes":null,"statements":null,"arguments":null,"declarations":null,"members":null,"components":null,"clauses":null,"options":null,"body":null,"trueBody":null,"falseBody":null,"expression":null,"condition":null,"initializationExpression":null,"leftExpression":null,"rightExpression":null,"subExpression":null,"trueExpression":null,"falseExpression":null,"loopExpression":null,"baseExpression":null,"indexExpression":null,"startExpression":null,"endExpression":null,"value":null,"initialValue":null,"externalCall":null,"eventCall":null,"errorCall":null,"leftHandSide":null,"rightHandSide":null,"length":null},{"nodeType":"Identifier","name":"spender","src":"4584:7:0","memberName":null,"functionName":null,"AST":null,"nodes":null,"statements":null,"arguments":null,"declarations":null,"members":null,"components":null,"clauses":null,"options":null,"body":null,"trueBody":null,"falseBody":null,"expression":null,"condition":null,"initializationExpression":null,"leftExpression":null,"rightExpression":null,"subExpression":null,"trueExpression":null,"falseExpression":null,"loopExpression":null,"baseExpression":null,"indexExpression":null,"startExpression":null,"endExpression":null,"value":null,"initialValue":null,"externalCall":null,"eventCall":null,"errorCall":null,"leftHandSide":null,"rightHandSide":null,"length":null},{"nodeType":"Identifier","name":"amount","src":"4593:6:0","memberName":null,"functionName":null,"AST":null,"nodes":null,"statements":null,"arguments":null,"declarations":null,"members":null,"components":null,"clauses":null,"options":null,"body":null,"trueBody":null,"falseBody":null,"expression":null,"condition":null,"initializationExpression":null,"leftExpression":null,"rightExpression":null,"subExpression":null,"trueExpression":null,"falseExpression":null,"loopExpression":null,"baseExpression":null,"indexExpression":null,"startExpression":null,"endExpression":null,"value":null,"initialValue":null,"externalCall":null,"eventCall":null,"errorCall":null,"leftHandSide":null,"rightHandSide":null,"length":null}],"declarations":null,"members":null,"components":null,"clauses":null,"options":null,"body":null,"trueBody":null,"falseBody":null,"expression":{"nodeType":"Identifier","name":"_approve","src":"4568:8:0","memberName":null,"functionName":null,"AST":null,"nodes":null,"statements":null,"arguments":null,"declarations":null,"members":null,"components":null,"clauses":null,"options":null,"body":null,"trueBody":null,"falseBody":null,"expression":null,"condition":null,"initializationExpression":null,"leftExpression":null,"rightExpression":null,"subExpression":null,"trueExpression":null,"falseExpression":null,"loopExpression":null,"baseExpression":null,"indexExpression":null,"startExpression":null,"endExpression":null,"value":null,"initialValue":null,"externalCall":null,"eventCall":null,"errorCall":null,"leftHandSide":null,"rightHandSide":null,"length":null},"condition":null,"initializationExpression":null,"leftExpression":null,"rightExpression":null,"subExpression":null,"trueExpression":null,"falseExpression":null,"loopExpression":null,"baseExpression":null,"indexExpression":null,"startExpression":null,"endExpression":null,"value":null,"initialValue":null,"externalCall":null,"eventCall":null,"errorCall":null,"leftHandSide":null,"rightHandSide":null,"length":null},"condition":null,"initializationExpression":null,"leftExpression":null,"rightExpression":null,"subExpression":null,"trueExpression":null,"falseExpression":null,"loopExpression":null,"baseExpression":null,"indexExpression":null,"startExpression":null,"endExpression":null,"value":null,"initialValue":null,"externalCall":null,"eventCall":null,"errorCall":null,"leftHandSide":null,"rightHandSide":null,"length":null},{"nodeType":"Return","name":null,"src":"4610:11:0","memberName":null,"functionName":null,"AST":null,"nodes":null,"statements":null,"arguments":null,"declarations":null,"members":null,"components":null,"clauses":null,"options":null,"body":null,"trueBody":null,"falseBody":null,"expression":{"nodeType":"Literal","name":null,"src":"4617:4:0","memberName":null,"functionName":null,"AST":null,"nodes":null,"statements":null,"arguments":null,"declarations":null,"members":null,"components":null,"clauses":null,"options":null,"body":null,"trueBody":null,"falseBody":null,"expression":null,"condition":null,"initializationExpression":null,"leftExpression":null,"rightExpression":null,"subExpression":null,"trueExpression":null,"falseExpression":null,"loopExpression":null,"baseExpression":null,"indexExpression":null,"startExpression":null,"endExpression":null,"value":"true","initialValue":null,"externalCall":null,"eventCall":null,"errorCall":null,"leftHandSide":null,"rightHandSide":null,"length":null},"condition":null,"initializationExpression":null,"leftExpression":null,"rightExpression":null,"subExpression":null,"trueExpression":null,"falseExpression":null,"loopExpression":null,"baseExpression":null,"indexExpression":null,"startExpression":null,"endExpression":null,"value":null,"initialValue":null,"externalCall":null,"eventCall":null,"errorCall":null,"leftHandSide":null,"rightHandSide":null,"length":null}],"arguments":null,"declarations":null,"members":null,"components":null,"clauses":null,"options":null,"body":null,"trueBody":null,"falseBody":null,"expression":null,"condition":null,"initializationExpression":null,"leftExpression":null,"rightExpression":null,"subExpression":null,"trueExpression":null,"falseExpression":null,"loopExpression":null,"baseExpression":null,"indexExpression":null,"startExpression":null,"endExpression":null,"value":null,"initialValue":null,"externalCall":null,"eventCall":null,"errorCall":null,"leftHandSide":null,"rightHandSide":null,"length":null},"trueBody":null,"falseBody":null,"expression":null,"condition":null,"initializationExpression":null,"leftExpression":null,"rightExpression":null,"subExpression":null,"trueExpression":null,"falseExpression":null,"loopExpression":null,"baseExpression":null,"indexExpression":null,"startExpression":null,"endExpression":null,"value":null,"initialValue":null,"externalCall":null,"eventCall":null,"errorCall":null,"leftHandSide":null,"rightHandSide":null,"length":null},{"nodeType":"FunctionDefinition","name":"transferFrom","src":"5190:286:0","memberName":null,"functionName":null,"AST":null,"nodes":null,"statements":null,"arguments":null,"declarations":null,"members":null,"components":null,"clauses":null,"options":null,"body":{"nodeType":"Block","name":null,"src":"5323:153:0","memberName":null,"functionName":null,"AST":null,"nodes":null,"statements":[{"nodeType":"VariableDeclarationStatement","name":null,"src":"5333:30:0","memberName":null,"functionName":null,"AST":null,"nodes":null,"statements":null,"arguments":null,"declarations":[{"nodeType":"VariableDeclaration","name":"spender","src":"5333:15:0","memberName":null,"functionName":null,"AST":null,"nodes":null,"statements":null,"arguments":null,"declarations":null,"members":null,"components":null,"clauses":null,"options":null,"body":null,"trueBody":null,"falseBody":null,"expression":null,"condition":null,"initializationExpression":null,"leftExpression":null,"rightExpression":null,"subExpression":null,"trueExpression":null,"falseExpression":null,"loopExpression":null,"baseExpression":null,"indexExpression":null,"startExpression":null,"endExpression":null,"value":null,"initialValue":null,"externalCall":null,"eventCall":null,"errorCall":null,"leftHandSide":null,"rightHandSide":null,"length":null}],"members":null,"components":null,"clauses":null,"options":null,"body":null,"trueBody":null,"falseBody":null,"expression":null,"condition":null,"initializationExpression":null,"leftExpression":null,"rightExpression":null,"subExpression":null,"trueExpression":null,"falseExpression":null,"loopExpression":null,"baseExpression":null,"indexExpression":null,"startExpression":null,"endExpression":null,"value":null,"initialValue":{"nodeType":"FunctionCall","name":null,"src":"5351:12:0","memberName":null,"functionName":null,"AST":null,"nodes":null,"statements":null,"arguments":[],"declarations":null,"members":null,"components":null,"clauses":null,"options":null,"body":null,"trueBody":null,"falseBody":null,"expression":{"nodeType":"Identifier","name":"_msgSender","src":"5351:10:0","memberName":null,"functionName":null,"AST":null,"nodes":null,"statements":null,"arguments":null,"declarations":null,"members":null,"components":null,"clauses":null,"options":null,"body":null,"trueBody":null,"falseBody":null,"expression":null,"condition":null,"initializationExpression":null,"leftExpression":null,"rightExpression":null,"subExpression":null,"trueExpression":null,"falseExpression":null,"loopExpression":null,"baseExpression":null,"indexExpression":null,"startExpression":null,"endExpression":null,"value":null,"initialValue":null,"externalCall":null,"eventCall":null,"errorCall":null,"leftHandSide":null,"rightHandSide":null,"length":null},"condition":null,"initializationExpression":null,"leftExpression":null,"rightExpression":null,"subExpression":null,"trueExpression":null,"falseExpression":null,"loopExpression":null,"baseExpression":null,"indexExpression":null,"startExpression":null,"endExpression":null,"value":null,"initialValue":null,"externalCall":null,"eventCall":null,"errorCall":null,"leftHandSide":null,"rightHandSide":null,"length":null},"externalCall":null,"eventCall":null,"errorCall":null,"leftHandSide":null,"rightHandSide":null,"length":null},{"nodeType":"ExpressionStatement","name":null,"src":"5373:38:0","memberName":null,"functionName":null,"AST":null,"nodes":null,"statements":null,"arguments":null,"declarations":null,"members":null,"components":null,"clauses":null,"options":null,"body":null,"trueBody":null,"falseBody":null,"expression":{"nodeType":"FunctionCall","name":null,"src":"5373:38:0","memberName":null,"functionName":null,"AST":null,"nodes":null,"statements":null,"arguments":[{"nodeType":"Identifier","name":"from","src":"5389:4:0","memberName":null,"functionName":null,"AST":null,"nodes":null,"statements":null,"arguments":null,"declarations":null,"members":null,"components":null,"clauses":null,"options":null,"body":null,"trueBody":null,"falseBody":null,"expression":null,"condition":null,"initializationExpression":null,"leftExpression":null,"rightExpression":null,"subExpression":null,"trueExpression":null,"falseExpression":null,"loopExpression":null,"baseExpression":null,"indexExpression":null,"startExpression":null,"endExpression":null,"value":null,"initialValue":null,"externalCall":null,"eventCall":null,"errorCall":null,"leftHandSide":null,"rightHandSide":null,"length":null},{"nodeType":"Identifier","name":"spender","src":"5395:7:0","memberName":null,"functionName":null,"AST":null,"nodes":null,"statements":null,"arguments":null,"declarations":null,"members":null,"components":null,"clauses":null,"options":null,"body":null,"trueBody":null,"falseBody":null,"expression":null,"condition":null,"initializationExpression":null,"leftExpression":null,"rightExpression":null,"subExpression":null,"trueExpression":null,"falseExpression":null,"loopExpression":null,"baseExpression":null,"indexExpression":null,"startExpression":null,"endExpression":null,"value":null,"initialValue":null,"externalCall":null,"eventCall":null,"errorCall":null,"leftHandSide":null,"rightHandSide":null,"length":null},{"nodeType":"Identifier","name":"amount","src":"5404:6:0","memberName":null,"functionName":null,"AST":null,"nodes":null,"statements":null,"arguments":null,"declarations":null,"members":null,"components":null,"clauses":null,"options":null,"body":null,"trueBody":null,"falseBody":null,"expression":null,"condition":null,"initializationExpression":null,"leftExpression":null,"rightExpression":null,"subExpression":null,"trueExpression":null,"falseExpression":null,"loopExpression":null,"baseExpression":null,"indexExpression":null,"startExpression":null,"endExpression":null,"value":null,"initialValue":null,"externalCall":null,"eventCall":null,"errorCall":null,"leftHandSide":null,"rightHandSide":null,"length":null}],"declarations":null,"members":null,"components":null,"clauses":null,"options":null,"body":null,"trueBody":null,"falseBody":null,"expression":{"nodeType":"Identifier","name":"_spendAllowance","src":"5373:15:0","memberName":null,"functionName":null,"AST":null,"nodes":null,"statements":null,"arguments":null,"declarations":null,"members":null,"components":null,"clauses":null,"options":null,"body":null,"trueBody":null,"falseBody":null,"expression":null,"condition":null,"initializationExpression":null,"leftExpression":null,"rightExpression":null,"subExpression":null,"trueExpression":null,"falseExpression":null,"loopExpression":null,"baseExpression":null,"indexExpression":null,"startExpression":null,"endExpression":null,"value":null,"initialValue":null,"externalCall":null,"eventCall":null,"errorCall":null,"leftHandSide":null,"rightHandSide":null,"length":null},"condition":null,"initializationExpression":null,"leftExpression":null,"rightExpression":null,"subExpression":null,"trueExpression":null,"falseExpression":null,"loopExpression":null,"baseExpression":null,"indexExpression":null,"startExpression":null,"endExpression":null,"value":null,"initialValue":null,"externalCall":null,"eventCall":null,"errorCall":null,"leftHandSide":null,"rightHandSide":null,"length":null},"condition":null,"initializationExpression":null,"leftExpression":null,"rightExpression":null,"subExpression":null,"trueExpression":null,"falseExpression":null,"loopExpression":null,"baseExpression":null,"indexExpression":null,"startExpression":null,"endExpression":null,"value":null,"initialValue":null,"externalCall":null,"eventCall":null,"errorCall":null,"leftHandSide":null,"rightHandSide":null,"length":null},{"nodeType":"ExpressionStatement","name":null,"src":"5421:27:0","memberName":null,"functionName":null,"AST":null,"nodes":null,"statements":null,"arguments":null,"declarations":null,"members":null,"components":null,"clauses":null,"options":null,"body":null,"trueBody":null,"falseBody":null,"expression":{"nodeType":"FunctionCall","name":null,"src":"5421:27:0","memberName":null,"functionName":null,"AST":null,"nodes":null,"statements":null,"arguments":[{"nodeType":"Identifier","name":"from","src":"5431:4:0","memberName":null,"functionName":null,"AST":null,"nodes":null,"statements":null,"arguments":null,"declarations":null,"members":null,"components":null,"clauses":null,"options":null,"body":null,"trueBody":null,"falseBody":null,"expression":null,"condition":null,"initializationExpression":null,"leftExpression":null,"rightExpression":null,"subExpression":null,"trueExpression":null,"falseExpression":null,"loopExpression":null,"baseExpression":null,"indexExpression":null,"startExpression":null,"endExpression":null,"value":null,"initialValue":null,"externalCall":null,"eventCall":null,"errorCall":null,"leftHandSide":null,"rightHandSide":null,"length":null},{"nodeType":"Identifier","name":"to","src":"5437:2:0","memberName":null,"functionName":null,"AST":null,"nodes":null,"statements":null,"arguments":null,"declarations":null,"members":null,"components":null,"clauses":null,"options":null,"body":null,"trueBody":null,"falseBody":null,"expression":null,"condition":null,"initializationExpression":null,"leftExpression":null,"rightExpression":null,"subExpression":null,"trueExpression":null,"falseExpression":null,"loopExpression":null,"baseExpression":null,"indexExpression":null,"startExpression":null,"endExpression":null,"value":null,"initialValue":null,"externalCall":null,"eventCall":null,"errorCall":null,"leftHandSide":null,"rightHandSide":null,"length":null},{"nodeType":"Identifier","name":"amount","src":"5441:6:0","memberName":null,"functionName":null,"AST":null,"nodes":null,"statements":null,"arguments":null,"declarations":null,"members":null,"components":null,"clauses":null,"options":null,"body":null,"trueBody":null,"falseBody":null,"expression":null,"condition":null,"initializationExpression":null,"leftExpression":null,"rightExpression":null,"subExpression":null,"trueExpression":null,"falseExpression":null,"loopExpression":null,"baseExpression":null,"indexExpression":null,"startExpression":null,"endExpression":null,"value":null,"initialValue":null,"externalCall":null,"eventCall":null,"errorCall":null,"leftHandSide":null,"rightHandSide":null,"length":null}],"declarations":null,"members":null,"components":null,"clauses":null,"options":null,"body":null,"trueBody":null,"falseBody":null,"expression":{"nodeType":"Identifier","name":"_transfer","src":"5421:9:0","memberName":null,"functionName":null,"AST":null,"nodes":null,"statements":null,"arguments":null,"declarations":null,"members":null,"components":null,"clauses":null,"options":null,"body":null,"trueBody":null,"falseBody":null,"expression":null,"condition":null,"initializationExpression":null,"leftExpression":null,"rightExpression":null,"subExpression":null,"trueExpression":null,"falseExpression":null,"loopExpression":null,"baseExpression":null,"indexExpression":null,"startExpression":null,"endExpression":null,"value":null,"initialValue":null,"externalCall":null,"eventCall":null,"errorCall":null,"leftHandSide":null,"rightHandSide":null,"length":null},"condition":null,"initializationExpression":null,"leftExpression":null,"rightExpression":null,"subExpression":null,"trueExpression":null,"falseExpression":null,"loopExpression":null,"baseExpression":null,"indexExpression":null,"startExpression":null,"endExpression":null,"value":null,"initialValue":null,"externalCall":null,"eventCall":null,"errorCall":null,"leftHandSide":null,"rightHandSide":null,"length":null},"condition":null,"initializationExpression":null,"leftExpression":null,"rightExpression":null,"subExpression":null,"trueExpression":null,"falseExpression":null,"loopExpression":null,"baseExpression":null,"indexExpression":null,"startExpression":null,"endExpression":null,"value":null,"initialValue":null,"externalCall":null,"eventCall":null,"errorCall":null,"leftHandSide":null,"rightHandSide":null,"length":null},{"nodeType":"Return","name":null,"src":"5458:11:0","memberName":null,"functionName":null,"AST":null,"nodes":null,"statements":null,"arguments":null,"declarations":null,"members":null,"components":null,"clauses":null,"options":null,"body":null,"trueBody":null,"falseBody":null,"expression":{"nodeType":"Literal","name":null,"src":"5465:4:0","memberName":null,"functionName":null,"AST":null,"nodes":null,"statements":null,"arguments":null,"declarations":null,"members":null,"components":null,"clauses":null,"options":null,"body":null,"trueBody":null,"falseBody":null,"expression":null,"condition":null,"initializationExpression":null,"leftExpression":null,"rightExpression":null,"subExpression":null,"trueExpression":null,"falseExpression":null,"loopExpression":null,"baseExpression":null,"indexExpression":null,"startExpression":null,"endExpression":null,"value":"true","initialValue":null,"externalCall":null,"eventCall":null,"errorCall":null,"leftHandSide":null,"rightHandSide":null,"length":null},"condition":null,"initializationExpression":null,"leftExpression":null,"rightExpression":null,"subExpression":null,"trueExpression":null,"falseExpression":null,"loopExpression":null,"baseExpression":null,"indexExpression":null,"startExpression":null,"endExpression":null,"value":null,"initialValue":null,"externalCall":null,"eventCall":null,"errorCall":null,"leftHandSide":null,"rightHandSide":null,"length":null}],"arguments":null,"declarations":null,"members":null,"components":null,"clauses":null,"options":null,"body":null,"trueBody":null,"falseBody":null,"expression":null,"condition":null,"initializationExpression":null,"leftExpression":null,"rightExpression":null,"subExpression":null,"trueExpression":null,"falseExpression":null,"loopExpression":null,"baseExpression":null,"indexExpression":null,"startExpression":null,"endExpression":null,"value":null,"initialValue":null,"externalCall":null,"eventCall":null,"errorCall":null,"leftHandSide":null,"rightHandSide":null,"length":null},"trueBody":null,"falseBody":null,"expression":null,"condition":null,"initializationExpression":null,"leftExpression":null,"rightExpression":null,"subExpression":null,"trueExpression":null,"falseExpression":null,"loopExpression":null,"baseExpression":null,"indexExpression":null,"startExpression":null,"endExpression":null,"value":null,"initialValue":null,"externalCall":null,"eventCall":null,"errorCall":null,"leftHandSide":null,"rightHandSide":null,"length":null},{"nodeType":"FunctionDefinition","name":"increaseAllowance","src":"5871:234:0","memberName":null,"functionName":null,"AST":null,"nodes":null,"statements":null,"arguments":null,"declarations":null,"members":null,"components":null,"clauses":null,"options":null,"body":{"nodeType":"Block","name":null,"src":"5965:140:0","memberName":null,"functionName":null,"AST":null,"nodes":null,"statements":[{"nodeType":"VariableDeclarationStatement","name":null,"src":"5975:28:0","memberName":null,"functionName":null,"AST":null,"nodes":null,"statements":null,"arguments":null,"declarations":[{"nodeType":"VariableDeclaration","name":"owner","src":"5975:13:0","memberName":null,"functionName":null,"AST":null,"nodes":null,"statements":null,"arguments":null,"declarations":null,"members":null,"components":null,"clauses":null,"options":null,"body":null,"trueBody":null,"falseBody":null,"expression":null,"condition":null,"initializationExpression":null,"leftExpression":null,"rightExpression":null,"subExpression":null,"trueExpression":null,"falseExpression":null,"loopExpression":null,"baseExpression":null,"indexExpression":null,"startExpression":null,"endExpression":null,"value":null,"initialValue":null,"externalCall":null,"eventCall":null,"errorCall":null,"leftHandSide":null,"rightHandSide":null,"length":null}],"members":null,"components":null,"clauses":null,"options":null,"body":null,"trueBody":null,"falseBody":null,"expression":null,"condition":null,"initializationExpression":null,"leftExpression":null,"rightExpression":null,"subExpression":null,"trueExpression":null,"falseExpression":null,"loopExpression":null,"baseExpression":null,"indexExpression":null,"startExpression":null,"endExpression":null,"value":null,"initialValue":{"nodeType":"FunctionCall","name":null,"src":"5991:12:0","memberName":null,"functionName":null,"AST":null,"nodes":null,"statements":null,"arguments":[],"declarations":null,"members":null,"components":null,"clauses":null,"options":null,"body":null,"trueBody":null,"falseBody":null,"expression":{"nodeType":"Identifier","name":"_msgSender","src":"5991:10:0","memberName":null,"functionName":null,"AST":null,"nodes":null,"statements":null,"arguments":null,"declarations":null,"members":null,"components":null,"clauses":null,"options":null,"body":null,"trueBody":null,"falseBody":null,"expression":null,"condition":null,"initializationExpression":null,"leftExpression":null,"rightExpression":null,"subExpression":null,"trueExpression":null,"falseExpression":null,"loopExpression":null,"baseExpression":null,"indexExpression":null,"startExpression":null,"endExpression":null,"value":null,"initialValue":null,"externalCall":null,"eventCall":null,"errorCall":null,"leftHandSide":null,"rightHandSide":null,"length":null},"condition":null,"initializationExpression":null,"leftExpression":null,"rightExpression":null,"subExpression":null,"trueExpression":null,"falseExpression":null,"loopExpression":null,"baseExpression":null,"indexExpression":null,"startExpression":null,"endExpression":null,"value":null,"initialValue":null,"externalCall":null,"eventCall":null,"errorCall":null,"leftHandSide":null,"rightHandSide":null,"length":null},"externalCall":null,"eventCall":null,"errorCall":null,"leftHandSide":null,"rightHandSide":null,"length":null},{"nodeType":"ExpressionStatement","name":null,"src":"6013:64:0","memberName":null,"functionName":null,"AST":null,"nodes":null,"statements":null,"arguments":null,"declarations":null,"members":null,"components":null,"clauses":null,"options":null,"body":null,"trueBody":null,"falseBody":null,"expression":{"nodeType":"FunctionCall","name":null,"src":"6013:64:0","memberName":null,"functionName":null,"AST":null,"nodes":null,"statements":null,"arguments":[{"nodeType":"Identifier","name":"owner","src":"6022:5:0","memberName":null,"functionName":null,"AST":null,"nodes":null,"statements":null,"arguments":null,"declarations":null,"members":null,"components":null,"clauses":null,"options":null,"body":null,"trueBody":null,"falseBody":null,"expression":null,"condition":null,"initializationExpression":null,"leftExpression":null,"rightExpression":null,"subExpression":null,"trueExpression":null,"falseExpression":null,"loopExpression":null,"baseExpression":null,"indexExpression":null,"startExpression":null,"endExpression":null,"value":null,"initialValue":null,"externalCall":null,"eventCall":null,"errorCall":null,"leftHandSide":null,"rightHandSide":null,"length":null},{"nodeType":"Identifier","name":"spender","src":"6029:7:0","memberName":null,"functionName":null,"AST":null,"nodes":null,"statements":null,"arguments":null,"declarations":null,"members":null,"components":null,"clauses":null,"options":null,"body":null,"trueBody":null,"falseBody":null,"expression":null,"condition":null,"initializationExpression":null,"leftExpression":null,"rightExpression":null,"subExpression":null,"trueExpression":null,"falseExpression":null,"loopExpression":null,"baseExpression":null,"indexExpression":null,"startExpression":null,"endExpression":null,"value":null,"initialValue":null,"externalCall":null,"eventCall":null,"errorCall":null,"leftHandSide":null,"rightHandSide":null,"length":null},{"nodeType":"BinaryOperation","name":null,"src":"6038:38:0","memberName":null,"functionName":null,"AST":null,"nodes":null,"statements":null,"arguments":null,"declarations":null,"members":null,"components":null,"clauses":null,"options":null,"body":null,"trueBody":null,"falseBody":null,"expression":null,"condition":null,"initializationExpression":null,"leftExpression":{"nodeType":"FunctionCall","name":null,"src":"6038:25:0","memberName":null,"functionName":null,"AST":null,"nodes":null,"statements":null,"arguments":[{"nodeType":"Identifier","name":"owner","src":"6048:5:0","memberName":null,"functionName":null,"AST":null,"nodes":null,"statements":null,"arguments":null,"declarations":null,"members":null,"components":null,"clauses":null,"options":null,"body":null,"trueBody":null,"falseBody":null,"expression":null,"condition":null,"initializationExpression":null,"leftExpression":null,"rightExpression":null,"subExpression":null,"trueExpression":null,"falseExpression":null,"loopExpression":null,"baseExpression":null,"indexExpression":null,"startExpression":null,"endExpression":null,"value":null,"initialValue":null,"externalCall":null,"eventCall":null,"errorCall":null,"leftHandSide":null,"rightHandSide":null,"length":null},{"nodeType":"Identifier","name":"spender","src":"6055:7:0","memberName":null,"functionName":null,"AST":null,"nodes":null,"statements":null,"arguments":null,"declarations":null,"members":null,"components":null,"clauses":null,"options":null,"body":null,"trueBody":null,"falseBody":null,"expression":null,"condition":null,"initializationExpression":null,"leftExpression":null,"rightExpression":null,"subExpression":null,"trueExpression":null,"falseExpression":null,"loopExpression":null,"baseExpression":null,"indexExpression":null,"startExpression":null,"endExpression":null,"value":null,"initialValue":null,"externalCall":null,"eventCall":null,"errorCall":null,"leftHandSide":null,"rightHandSide":null,"length":null}],"declarations":null,"members":null,"components":null,"clauses":null,"options":null,"body":null,"trueBody":null,"falseBody":null,"expression":{"nodeType":"Identifier","name":"allowance","src":"6038:9:0","memberName":null,"functionName":null,"AST":null,"nodes":null,"statements":null,"arguments":null,"declarations":null,"members":null,"components":null,"clauses":null,"options":null,"body":null,"trueBody":null,"falseBody":null,"expression":null,"condition":null,"initializationExpression":null,"leftExpression":null,"rightExpression":null,"subExpression":null,"trueExpression":null,"falseExpression":null,"loopExpression":null,"baseExpression":null,"indexExpression":null,"startExpression":null,"endExpression":null,"value":null,"initialValue":null,"externalCall":null,"eventCall":null,"errorCall":null,"leftHandSide":null,"rightHandSide":null,"length":null},"condition":null,"initializationExpression":null,"leftExpression":null,"rightExpression":null,"subExpression":null,"trueExpression":null,"falseExpression":null,"loopExpression":null,"baseExpression":null,"indexExpression":null,"startExpression":null,"endExpression":null,"value":null,"initialValue":null,"externalCall":null,"eventCall":null,"errorCall":null,"leftHandSide":null,"rightHandSide":null,"length":null},"rightExpression":{"nodeType":"Identifier","name":"addedValue","src":"6066:10:0","memberName":null,"functionName":null,"AST":null,"nodes":null,"statements":null,"arguments":null,"declarations":null,"members":null,"components":null,"clauses":null,"options":null,"body":null,"trueBody":null,"falseBody":null,"expression":null,"condition":null,"initializationExpression":null,"leftExpression":null,"rightExpression":null,"subExpression":null,"trueExpression":null,"falseExpression":null,"loopExpression":null,"baseExpression":null,"indexExpression":null,"startExpression":null,"endExpression":null,"value":null,"initialValue":null,"externalCall":null,"eventCall":null,"errorCall":null,"leftHandSide":null,"rightHandSide":null,"length":null},"subExpression":null,"trueExpression":null,"falseExpression":null,"loopExpression":null,"baseExpression":null,"indexExpression":null,"startExpression":null,"endExpression":null,"value":null,"initialValue":null,"externalCall":null,"eventCall":null,"errorCall":null,"leftHandSide":null,"rightHandSide":null,"length":null}],"declarations":null,"members":null,"components":null,"clauses":null,"options":null,"body":null,"trueBody":null,"falseBody":null,"expression":{"nodeType":"Identifier","name":"_approve","src":"6013:8:0","memberName":null,"functionName":null,"AST":null,"nodes":null,"statements":null,"arguments":null,"declarations":null,"members":null,"components":null,"clauses":null,"options":null,"body":null,"trueBody":null,"falseBody":null,"expression":null,"condition":null,"initializationExpression":null,"leftExpression":null,"rightExpression":null,"subExpression":null,"trueExpression":null,"falseExpression":null,"loopExpression":null,"baseExpression":null,"indexExpression":null,"startExpression":null,"endExpression":null,"value":null,"initialValue":null,"externalCall":null,"eventCall":null,"errorCall":null,"leftHandSide":null,"rightHandSide":null,"length":null},"condition":null,"initializationExpression":null,"leftExpression":null,"rightExpression":null,"subExpression":null,"trueExpression":null,"falseExpression":null,"loopExpression":null,"baseExpression":null,"indexExpression":null,"startExpression":null,"endExpression":null,"value":null,"initialValue":null,"externalCall":null,"eventCall":null,"errorCall":null,"leftHandSide":null,"rightHandSide":null,"length":null},"condition":null,"initializationExpression":null,"leftExpression":null,"rightExpression":null,"subExpression":null,"trueExpression":null,"falseExpression":null,"loopExpression":null,"baseExpression":null,"indexExpression":null,"startExpression":null,"endExpression":null,"value":null,"initialValue":null,"externalCall":null,"eventCall":null,"errorCall":null,"leftHandSide":null,"rightHandSide":null,"length":null},{"nodeType":"Return","name":null,"src":"6087:11:0","memberName":null,"functionName":null,"AST":null,"nodes":null,"statements":null,"arguments":null,"declarations":null,"members":null,"components":null,"clauses":null,"options":null,"body":null,"trueBody":null,"falseBody":null,"expression":{"nodeType":"Literal","name":null,"src":"6094:4:0","memberName":null,"functionName":null,"AST":null,"nodes":null,"statements":null,"arguments":null,"declarations":null,"members":null,"components":null,"clauses":null,"options":null,"body":null,"trueBody":null,"falseBody":null,"expression":null,"condition":null,"initializationExpression":null,"leftExpression":null,"rightExpression":null,"subExpression":null,"trueExpression":null,"falseExpression":null,"loopExpression":null,"baseExpression":null,"indexExpression":null,"startExpression":null,"endExpression":null,"value":"true","initialValue":null,"externalCall":null,"eventCall":null,"errorCall":null,"leftHandSide":null,"rightHandSide":null,"length":null},"condition":null,"initializationExpression":null,"leftExpression":null,"rightExpression":null,"subExpression":null,"trueExpression":null,"falseExpression":null,"loopExpression":null,"baseExpression":null,"indexExpression":null,"startExpression":null,"endExpression":null,"value":null,"initialValue":null,"externalCall":null,"eventCall":null,"errorCall":null,"leftHandSide":null,"rightHandSide":null,"length":null}],"arguments":null,"declarations":null,"members":null,"components":null,"clauses":null,"options":null,"body":null,"trueBody":null,"falseBody":null,"expression":null,"condition":null,"initializationExpression":null,"leftExpression":null,"rightExpression":null,"subExpression":null,"trueExpression":null,"falseExpression":null,"loopExpression":null,"baseExpression":null,"indexExpression":null,"startExpression":null,"endExpression":null,"value":null,"initialValue":null,"externalCall":null,"eventCall":null,"errorCall":null,"leftHandSide":null,"rightHandSide":null,"length":null},"trueBody":null,"falseBody":null,"expression":null,"condition":null,"initializationExpression":null,"leftExpression":null,"rightExpression":null,"subExpression":null,"trueExpression":null,"falseExpression":null,"loopExpression":null,"baseExpression":null,"indexExpression":null,"startExpression":null,"endExpression":null,"value":null,"initialValue":null,"externalCall":null,"eventCall":null,"errorCall":null,"leftHandSide":null,"rightHandSide":null,"length":null},{"nodeType":"FunctionDefinition","name":"decreaseAllowance","src":"6592:427:0","memberName":null,"functionName":null,"AST":null,"nodes":null,"statements":null,"arguments":null,"declarations":null,"members":null,"components":null,"clauses":null,"options":null,"body":{"nodeType":"Block","name":null,"src":"6691:328:0","memberName":null,"functionName":null,"AST":null,"nodes":null,"statements":[{"nodeType":"VariableDeclarationStatement","name":null,"src":"6701:28:0","memberName":null,"functionName":null,"AST":null,"nodes":null,"statements":null,"arguments":null,"declarations":[{"nodeType":"VariableDeclaration","name":"owner","src":"6701:13:0","memberName":null,"functionName":null,"AST":null,"nodes":null,"statements":null,"arguments":null,"declarations":null,"members":null,"components":null,"clauses":null,"options":null,"body":null,"trueBody":null,"falseBody":null,"expression":null,"condition":null,"initializationExpression":null,"leftExpression":null,"rightExpression":null,"subExpression":null,"trueExpression":null,"falseExpression":null,"loopExpression":null,"baseExpression":null,"indexExpression":null,"startExpression":null,"endExpression":null,"value":null,"initialValue":null,"externalCall":null,"eventCall":null,"errorCall":null,"leftHandSide":null,"rightHandSide":null,"length":null}],"members":null,"components":null,"clauses":null,"options":null,"body":null,"trueBody":null,"falseBody":null,"expression":null,"condition":null,"initializationExpression":null,"leftExpression":null,"rightExpression":null,"subExpression":null,"trueExpression":null,"falseExpression":null,"loopExpression":null,"baseExpression":null,"indexExpression":null,"startExpression":null,"endExpression":null,"value":null,"initialValue":{"nodeType":"FunctionCall","name":null,"src":"6717:12:0","memberName":null,"functionName":null,"AST":null,"nodes":null,"statements":null,"arguments":[],"declarations":null,"members":null,"components":null,"clauses":null,"options":null,"body":null,"trueBody":null,"falseBody":null,"expression":{"nodeType":"Identifier","name":"_msgSender","src":"6717:10:0","memberName":null,"functionName":null,"AST":null,"nodes":null,"statements":null,"arguments":null,"declarations":null,"members":null,"components":null,"clauses":null,"options":null,"body":null,"trueBody":null,"falseBody":null,"expression":null,"condition":null,"initializationExpression":null,"leftExpression":null,"rightExpression":null,"subExpression":null,"trueExpression":null,"falseExpression":null,"loopExpression":null,"baseExpression":null,"indexExpression":null,"startExpression":null,"endExpression":null,"value":null,"initialValue":null,"externalCall":null,"eventCall":null,"errorCall":null,"leftHandSide":null,"rightHandSide":null,"length":null},"condition":null,"initializationExpression":null,"leftExpression":null,"rightExpression":null,"subExpression":null,"trueExpression":null,"falseExpression":null,"loopExpression":null,"baseExpression":null,"indexExpression":null,"startExpression":null,"endExpression":null,"value":null,"initialValue":null,"externalCall":null,"eventCall":null,"errorCall":null,"leftHandSide":null,"rightHandSide":null,"length":null},"externalCall":null,"eventCall":null,"errorCall":null,"leftHandSide":null,"rightHandSide":null,"length":null},{"nodeType":"VariableDeclarationStatement","name":null,"src":"6739:52:0","memberName":null,"functionName":null,"AST":null,"nodes":null,"statements":null,"arguments":null,"declarations":[{"nodeType":"VariableDeclaration","name":"currentAllowance","src":"6739:24:0","memberName":null,"functionName":null,"AST":null,"nodes":null,"statements":null,"arguments":null,"declarations":null,"members":null,"components":null,"clauses":null,"options":null,"body":null,"trueBody":null,"falseBody":null,"expression":null,"condition":null,"initializationExpression":null,"leftExpression":null,"rightExpression":null,"subExpression":null,"trueExpression":null,"falseExpression":null,"loopExpression":null,"baseExpression":null,"indexExpression":null,"startExpression":null,"endExpression":null,"value":null,"initialValue":null,"externalCall":null,"eventCall":null,"errorCall":null,"leftHandSide":null,"rightHandSide":null,"length":null}],"members":null,"components":null,"clauses":null,"options":null,"body":null,"trueBody":null,"falseBody":null,"expression":null,"condition":null,"initializationExpression":null,"leftExpression":null,"rightExpression":null,"subExpression":null,"trueExpression":null,"falseExpression":null,"loopExpression":null,"baseExpression":null,"indexExpression":null,"startExpression":null,"endExpression":null,"value":null,"initialValue":{"nodeType":"FunctionCall","name":null,"src":"6766:25:0","memberName":null,"functionName":null,"AST":null,"nodes":null,"statements":null,"arguments":[{"nodeType":"Identifier","name":"owner","src":"6776:5:0","memberName":null,"functionName":null,"AST":null,"nodes":null,"statements":null,"arguments":null,"declarations":null,"members":null,"components":null,"clauses":null,"options":null,"body":null,"trueBody":null,"falseBody":null,"expression":null,"condition":null,"initializationExpression":null,"leftExpression":null,"rightExpression":null,"subExpression":null,"trueExpression":null,"falseExpression":null,"loopExpression":null,"baseExpression":null,"indexExpression":null,"startExpression":null,"endExpression":null,"value":null,"initialValue":null,"externalCall":null,"eventCall":null,"errorCall":null,"leftHandSide":null,"rightHandSide":null,"length":null},{"nodeType":"Identifier","name":"spender","src":"6783:7:0","memberName":null,"functionName":null,"AST":null,"nodes":null,"statements":null,"arguments":null,"declarations":null,"members":null,"components":null,"clauses":null,"options":null,"body":null,"trueBody":null,"falseBody":null,"expression":null,"condition":null,"initializationExpression":null,"leftExpression":null,"rightExpression":null,"subExpression":null,"trueExpression":null,"falseExpression":null,"loopExpression":null,"baseExpression":null,"indexExpression":null,"startExpression":null,"endExpression":null,"value":null,"initialValue":null,"externalCall":null,"eventCall":null,"errorCall":null,"leftHandSide":null,"rightHandSide":null,"length":null}],"declarations":null,"members":null,"components":null,"clauses":null,"options":null,"body":null,"trueBody":null,"falseBody":null,"expression":{"nodeType":"Identifier","name":"allowance","src":"6766:9:0","memberName":null,"functionName":null,"AST":null,"nodes":null,"statements":null,"arguments":null,"declarations":null,"members":null,"components":null,"clauses":null,"options":null,"body":null,"trueBody":null,"falseBody":null,"expression":null,"condition":null,"initializationExpression":null,"leftExpression":null,"rightExpression":null,"subExpression":null,"trueExpression":null,"falseExpression":null,"loopExpression":null,"baseExpression":null,"indexExpression":null,"startExpression":null,"endExpression":null,"value":null,"initialValue":null,"externalCall":null,"eventCall":null,"errorCall":null,"leftHandSide":null,"rightHandSide":null,"length":null},"condition":null,"initializationExpression":null,"leftExpression":null,"rightExpression":null,"subExpression":null,"trueExpression":null,"falseExpression":null,"loopExpression":null,"baseExpression":null,"indexExpression":null,"startExpression":null,"endExpression":null,"value":null,"initialValue":null,"externalCall":null,"eventCall":null,"errorCall":null,"leftHandSide":null,"rightHandSide":null,"length":null},"externalCall":null,"eventCall":null,"errorCall":null,"leftHandSide":null,"rightHandSide":null,"length":null},{"nodeType":"ExpressionStatement","name":null,"src":"6801:85:0","memberName":null,"functionName":null,"AST":null,"nodes":null,"statements":null,"arguments":null,"declarations":null,"members":null,"components":null,"clauses":null,"options":null,"body":null,"trueBody":null,"falseBody":null,"expression":{"nodeType":"FunctionCall","name":null,"src":"6801:85:0","memberName":null,"functionName":null,"AST":null,"nodes":null,"statements":null,"arguments":[{"nodeType":"BinaryOperation","name":null,"src":"6809:35:0","memberName":null,"functionName":null,"AST":null,"nodes":null,"statements":null,"arguments":null,"declarations":null,"members":null,"components":null,"clauses":null,"options":null,"body":null,"trueBody":null,"falseBody":null,"expression":null,"condition":null,"initializationExpression":null,"leftExpression":{"nodeType":"Identifier","name":"currentAllowance","src":"6809:16:0","memberName":null,"functionName":null,"AST":null,"nodes":null,"statements":null,"arguments":null,"declarations":null,"members":null,"components":null,"clauses":null,"options":null,"body":null,"trueBody":null,"falseBody":null,"expression":null,"condition":null,"initializationExpression":null,"leftExpression":null,"rightExpression":null,"subExpression":null,"trueExpression":null,"falseExpression":null,"loopExpression":null,"baseExpression":null,"indexExpression":null,"startExpression":null,"endExpression":null,"value":null,"initialValue":null,"externalCall":null,"eventCall":null,"errorCall":null,"leftHandSide":null,"rightHandSide":null,"length":null},"rightExpression":{"nodeType":"Identifier","name":"subtractedValue","src":"6829:15:0","memberName":null,"functionName":null,"AST":null,"nodes":null,"statements":null,"arguments":null,"declarations":null,"members":null,"components":null,"clauses":null,"options":null,"body":null,"trueBody":null,"falseBody":null,"expression":null,"condition":null,"initializationExpression":null,"leftExpression":null,"rightExpression":null,"subExpression":null,"trueExpression":null,"falseExpression":null,"loopExpression":null,"baseExpression":null,"indexExpression":null,"startExpression":null,"endExpression":null,"value":null,"initialValue":null,"externalCall":null,"eventCall":null,"errorCall":null,"leftHandSide":null,"rightHandSide":null,"length":null},"subExpression":null,"trueExpression":null,"falseExpression":null,"loopExpression":null,"baseExpression":null,"indexExpression":null,"startExpression":null,"endExpression":null,"value":null,"initialValue":null,"externalCall":null,"eventCall":null,"errorCall":null,"leftHandSide":null,"rightHandSide":null,"length":null},{"nodeType":"Literal","name":null,"src":"6846:39:0","memberName":null,"functionName":null,"AST":null,"nodes":null,"statements":null,"arguments":null,"declarations":null,"members":null,"components":null,"clauses":null,"options":null,"body":null,"trueBody":null,"falseBody":null,"expression":null,"condition":null,"initializationExpression":null,"leftExpression":null,"rightExpression":null,"subExpression":null,"trueExpression":null,"falseExpression":null,"loopExpression":null,"baseExpression":null,"indexExpression":null,"startExpression":null,"endExpression":null,"value":"ERC20: decreased allowance below zero","initialValue":null,"externalCall":null,"eventCall":null,"errorCall":null,"leftHandSide":null,"rightHandSide":null,"length":null}],"declarations":null,"members":null,"components":null,"clauses":null,"options":null,"body":null,"trueBody":null,"falseBody":null,"expression":{"nodeType":"Identifier","name":"require","src":"6801:7:0","memberName":null,"functionName":null,"AST":null,"nodes":null,"statements":null,"arguments":null,"declarations":null,"members":null,"components":null,"clauses":null,"options":null,"body":null,"trueBody":null,"falseBody":null,"expression":null,"condition":null,"initializationExpression":null,"leftExpression":null,"rightExpression":null,"subExpression":null,"trueExpression":null,"falseExpression":null,"loopExpression":null,"baseExpression":null,"indexExpression":null,"startExpression":null,"endExpression":null,"value":null,"initialValue":null,"externalCall":null,"eventCall":null,"errorCall":null,"leftHandSide":null,"rightHandSide":null,"length":null},"condition":null,"initializationExpression":null,"leftExpression":null,"rightExpression":null,"subExpression":null,"trueExpression":null,"falseExpression":null,"loopExpression":null,"baseExpression":null,"indexExpression":null,"startExpression":null,"endExpression":null,"value":null,"initialValue":null,"externalCall":null,"eventCall":null,"errorCall":null,"leftHandSide":null,"rightHandSide":null,"length":null},"condition":null,"initializationExpression":null,"leftExpression":null,"rightExpression":null,"subExpression":null,"trueExpression":null,"falseExpression":null,"loopExpression":null,"baseExpression":null,"indexExpression":null,"startExpression":null,"endExpression":null,"value":null,"initialValue":null,"externalCall":null,"eventCall":null,"errorCall":null,"leftHandSide":null,"rightHandSide":null,"length":null},{"nodeType":"UncheckedBlock","name":null,"src":"6896:95:0","memberName":null,"functionName":null,"AST":null,"nodes":null,"statements":[{"nodeType":"ExpressionStatement","name":null,"src":"6920:60:0","memberName":null,"functionName":null,"AST":null,"nodes":null,"statements":null,"arguments":null,"declarations":null,"members":null,"components":null,"clauses":null,"options":null,"body":null,"trueBody":null,"falseBody":null,"expression":{"nodeType":"FunctionCall","name":null,"src":"6920:60:0","memberName":null,"functionName":null,"AST":null,"nodes":null,"statements":null,"arguments":[{"nodeType":"Identifier","name":"owner","src":"6929:5:0","memberName":null,"functionName":null,"AST":null,"nodes":null,"statements":null,"arguments":null,"declarations":null,"members":null,"components":null,"clauses":null,"options":null,"body":null,"trueBody":null,"falseBody":null,"expression":null,"condition":null,"initializationExpression":null,"leftExpression":null,"rightExpression":null,"subExpression":null,"trueExpression":null,"falseExpression":null,"loopExpression":null,"baseExpression":null,"indexExpression":null,"startExpression":null,"endExpression":null,"value":null,"initialValue":null,"externalCall":null,"eventCall":null,"errorCall":null,"leftHandSide":null,"rightHandSide":null,"length":null},{"nodeType":"Identifier","name":"spender","src":"6936:7:0","memberName":null,"functionName":null,"AST":null,"nodes":null,"statements":null,"arguments":null,"declarations":null,"members":null,"components":null,"clauses":null,"options":null,"body":null,"trueBody":null,"falseBody":null,"expression":null,"condition":null,"initializationExpression":null,"leftExpression":null,"rightExpression":null,"subExpression":null,"trueExpression":null,"falseExpression":null,"loopExpression":null,"baseExpression":null,"indexExpression":null,"startExpression":null,"endExpression":null,"value":null,"initialValue":null,"externalCall":null,"eventCall":null,"errorCall":null,"leftHandSide":null,"rightHandSide":null,"length":null},{"nodeType":"BinaryOperation","name":null,"src":"6945:34:0","memberName":null,"functionName":null,"AST":null,"nodes":null,"statements":null,"arguments":null,"declarations":null,"members":null,"components":null,"clauses":null,"options":null,"body":null,"trueBody":null,"falseBody":null,"expression":null,"condition":null,"initializationExpression":null,"leftExpression":{"nodeType":"Identifier","name":"currentAllowance","src":"6945:16:0","memberName":null,"functionName":null,"AST":null,"nodes":null,"statements":null,"arguments":null,"declarations":null,"members":null,"components":null,"clauses":null,"options":null,"body":null,"trueBody":null,"falseBody":null,"expression":null,"condition":null,"initializationExpression":null,"leftExpression":null,"rightExpression":null,"subExpression":null,"trueExpression":null,"falseExpression":null,"loopExpression":null,"baseExpression":null,"indexExpression":null,"startExpression":null,"endExpression":null,"value":null,"initialValue":null,"externalCall":null,"eventCall":null,"errorCall":null,"leftHandSide":null,"rightHandSide":null,"length":null},"rightExpression":{"nodeType":"Identifier","name":"subtractedValue","src":"6964:15:0","memberName":null,"functionName":null,"AST":null,"nodes":null,"statements":null,"arguments":null,"declarations":null,"members":null,"components":null,"clauses":null,"options":null,"body":null,"trueBody":null,"falseBody":null,"expression":null,"condition":null,"initializationExpression":null,"leftExpression":null,"rightExpression":null,"subExpression":null,"trueExpression":null,"falseExpression":null,"loopExpression":null,"baseExpression":null,"indexExpression":null,"startExpression":null,"endExpression":null,"value":null,"initialValue":null,"externalCall":null,"eventCall":null,"errorCall":null,"leftHandSide":null,"rightHandSide":null,"length":null},"subExpression":null,"trueExpression":null,"falseExpression":null,"loopExpression":null,"baseExpression":null,"indexExpression":null,"startExpression":null,"endExpression":null,"value":null,"initialValue":null,"externalCall":null,"eventCall":null,"errorCall":null,"leftHandSide":null,"rightHandSide":null,"length":null}],"declarations":null,"members":null,"components":null,"clauses":null,"options":null,"body":null,"trueBody":null,"falseBody":null,"expression":{"nodeType":"Identifier","name":"_approve","src":"6920:8:0","memberName":null,"functionName":null,"AST":null,"nodes":null,"statements":null,"arguments":null,"declarations":null,"members":null,"components":null,"clauses":null,"options":null,"body":null,"trueBody":null,"falseBody":null,"expression":null,"condition":null,"initializationExpression":null,"leftExpression":null,"rightExpression":null,"subExpression":null,"trueExpression":null,"falseExpression":null,"loopExpression":null,"baseExpression":null,"indexExpression":null,"startExpression":null,"endExpression":null,"value":null,"initialValue":null,"externalCall":null,"eventCall":null,"errorCall":null,"leftHandSide":null,"rightHandSide":null,"length":null},"condition":null,"initializationExpression":null,"leftExpression":null,"rightExpression":null,"subExpression":null,"trueExpression":null,"falseExpression":null,"loopExpression":null,"baseExpression":null,"indexExpression":null,"startExpression":null,"endExpression":null,"value":null,"initialValue":null,"externalCall":null,"eventCall":null,"errorCall":null,"leftHandSide":null,"rightHandSide":null,"length":null},"condition":null,"initializationExpression":null,"leftExpression":null,"rightExpression":null,"subExpression":null,"trueExpression":null,"falseExpression":null,"loopExpression":null,"baseExpression":null,"indexExpression":null,"startExpression":null,"endExpression":null,"value":null,"initialValue":null,"externalCall":null,"eventCall":null,"errorCall":null,"leftHandSide":null,"rightHandSide":null,"length":null}],"arguments":null,"declarations":null,"members":null,"components":null,"clauses":null,"options":null,"body":null,"trueBody":null,"falseBody":null,"expression":null,"condition":null,"initializationExpression":null,"leftExpression":null,"rightExpression":null,"subExpression":null,"trueExpression":null,"falseExpression":null,"loopExpression":null,"baseExpression":null,"indexExpression":null,"startExpression":null,"endExpression":null,"value":null,"initialValue":null,"externalCall":null,"eventCall":null,"errorCall":null,"leftHandSide":null,"rightHandSide":null,"length":null},{"nodeType":"Return","name":null,"src":"7001:11:0","memberName":null,"functionName":null,"AST":null,"nodes":null,"statements":null,"arguments":null,"declarations":null,"members":null,"components":null,"clauses":null,"options":null,"body":null,"trueBody":null,"falseBody":null,"expression":{"nodeType":"Literal","name":null,"src":"7008:4:0","memberName":null,"functionName":null,"AST":null,"nodes":null,"statements":null,"arguments":null,"declarations":null,"members":null,"components":null,"clauses":null,"options":null,"body":null,"trueBody":null,"falseBody":null,"expression":null,"condition":null,"initializationExpression":null,"leftExpression":null,"rightExpression":null,"subExpression":null,"trueExpression":null,"falseExpression":null,"loopExpression":null,"baseExpression":null,"indexExpression":null,"startExpression":null,"endExpression":null,"value":"true","initialValue":null,"externalCall":null,"eventCall":null,"errorCall":null,"leftHandSide":null,"rightHandSide":null,"length":null},"condition":null,"initializationExpression":null,"leftExpression":null,"rightExpression":null,"subExpression":null,"trueExpression":null,"falseExpression":null,"loopExpression":null,"baseExpression":null,"indexExpression":null,"startExpression":null,"endExpression":null,"value":null,"initialValue":null,"externalCall":null,"eventCall":null,"errorCall":null,"leftHandSide":null,"rightHandSide":null,"length":null}],"arguments":null,"declarations":null,"members":null,"components":null,"clauses":null,"options":null,"body":null,"trueBody":null,"falseBody":null,"expression":null,"condition":null,"initializationExpression":null,"leftExpression":null,"rightExpression":null,"subExpression":null,"trueExpression":null,"falseExpression":null,"loopExpression":null,"baseExpression":null,"indexExpression":null,"startExpression":null,"endExpression":null,"value":null,"initialValue":null,"externalCall":null,"eventCall":null,"errorCall":null,"leftHandSide":null,"rightHandSide":null,"length":null},"trueBody":null,"falseBody":null,"expression":null,"condition":null,"initializationExpression":null,"leftExpression":null,"rightExpression":null,"subExpression":null,"trueExpression":null,"falseExpression":null,"loopExpression":null,"baseExpression":null,"indexExpression":null,"startExpression":null,"endExpression":null,"value":null,"initialValue":null,"externalCall":null,"eventCall":null,"errorCall":null,"leftHandSide":null,"rightHandSide":null,"length":null},{"nodeType":"FunctionDefinition","name":"_transfer","src":"7473:818:0","memberName":null,"functionName":null,"AST":null,"nodes":null,"statements":null,"arguments":null,"declarations":null,"members":null,"components":null,"clauses":null,"options":null,"body":{"nodeType":"Block","name":null,"src":"7581:710:0","memberName":null,"functionName":null,"AST":null,"nodes":null,"statements":[{"nodeType":"ExpressionStatement","name":null,"src":"7591:68:0","memberName":null,"functionName":null,"AST":null,"nodes":null,"statements":null,"arguments":null,"declarations":null,"members":null,"components":null,"clauses":null,"options":null,"body":null,"trueBody":null,"falseBody":null,"expression":{"nodeType":"FunctionCall","name":null,"src":"7591:68:0","memberName":null,"functionName":null,"AST":null,"nodes":null,"statements":null,"arguments":[{"nodeType":"BinaryOperation","name":null,"src":"7599:18:0","memberName":null,"functionName":null,"AST":null,"nodes":null,"statements":null,"arguments":null,"declarations":null,"members":null,"components":null,"clauses":null,"options":null,"body":null,"trueBody":null,"falseBody":null,"expression":null,"condition":null,"initializationExpression":null,"leftExpression":{"nodeType":"Identifier","name":"from","src":"7599:4:0","memberName":null,"functionName":null,"AST":null,"nodes":null,"statements":null,"arguments":null,"declarations":null,"members":null,"components":null,"clauses":null,"options":null,"body":null,"trueBody":null,"falseBody":null,"expression":null,"condition":null,"initializationExpression":null,"leftExpression":null,"rightExpression":null,"subExpression":null,"trueExpression":null,"falseExpression":null,"loopExpression":null,"baseExpression":null,"indexExpression":null,"startExpression":null,"endExpression":null,"value":null,"initialValue":null,"externalCall":null,"eventCall":null,"errorCall":null,"leftHandSide":null,"rightHandSide":null,"length":null},"rightExpression":{"nodeType":"FunctionCall","name":null,"src":"7607:10:0","memberName":null,"functionName":null,"AST":null,"nodes":null,"statements":null,"arguments":[{"nodeType":"Literal","name":null,"src":"7615:1:0","memberName":null,"functionName":null,"AST":null,"nodes":null,"statements":null,"arguments":null,"declarations":null,"members":null,"components":null,"clauses":null,"options":null,"body":null,"trueBody":null,"falseBody":null,"expression":null,"condition":null,"initializationExpression":null,"leftExpression":null,"rightExpression":null,"subExpression":null,"trueExpression":null,"falseExpression":null,"loopExpression":null,"baseExpression":null,"indexExpression":null,"startExpression":null,"endExpression":null,"value":"0","initialValue":null,"externalCall":null,"eventCall":null,"errorCall":null,"leftHandSide":null,"rightHandSide":null,"length":null}],"declarations":null,"members":null,"components":null,"clauses":null,"options":null,"body":null,"trueBody":null,"falseBody":null,"expression":{"nodeType":"ElementaryTypeNameExpression","name":null,"src":"7607:7:0","memberName":null,"functionName":null,"AST":null,"nodes":null,"statements":null,"arguments":null,"declarations":null,"members":null,"components":null,"clauses":null,"options":null,"body":null,"trueBody":null,"falseBody":null,"expression":null,"condition":null,"initializationExpression":null,"leftExpression":null,"rightExpression":null,"subExpression":null,"trueExpression":null,"falseExpression":null,"loopExpression":null,"baseExpression":null,"indexExpression":null,"startExpression":null,"endExpression":null,"value":null,"initialValue":null,"externalCall":null,"eventCall":null,"errorCall":null,"leftHandSide":null,"rightHandSide":null,"length":null},"condition":null,"initializationExpression":null,"leftExpression":null,"rightExpression":null,"subExpression":null,"trueExpression":null,"falseExpression":null,"loopExpression":null,"baseExpression":null,"indexExpression":null,"startExpression":null,"endExpression":null,"value":null,"initialValue":null,"externalCall":null,"eventCall":null,"errorCall":null,"leftHandSide":null,"rightHandSide":null,"length":null},"subExpression":null,"trueExpression":null,"falseExpression":null,"loopExpression":null,"baseExpression":null,"indexExpression":null,"startExpression":null,"endExpression":null,"value":null,"initialValue":null,"externalCall":null,"eventCall":null,"errorCall":null,"leftHandSide":null,"rightHandSide":null,"length":null},{"nodeType":"Literal","name":null,"src":"7619:39:0","memberName":null,"functionName":null,"AST":null,"nodes":null,"statements":null,"arguments":null,"declarations":null,"members":null,"components":null,"clauses":null,"options":null,"body":null,"trueBody":null,"falseBody":null,"expression":null,"condition":null,"initializationExpression":null,"leftExpression":null,"rightExpression":null,"subExpression":null,"trueExpression":null,"falseExpression":null,"loopExpression":null,"baseExpression":null,"indexExpression":null,"startExpression":null,"endExpression":null,"value":"ERC20: transfer from the zero address","initialValue":null,"externalCall":null,"eventCall":null,"errorCall":null,"leftHandSide":null,"rightHandSide":null,"length":null}],"declarations":null,"members":null,"components":null,"clauses":null,"options":null,"body":null,"trueBody":null,"falseBody":null,"expression":{"nodeType":"Identifier","name":"require","src":"7591:7:0","memberName":null,"functionName":null,"AST":null,"nodes":null,"statements":null,"arguments":null,"declarations":null,"members":null,"components":null,"clauses":null,"options":null,"body":null,"trueBody":null,"falseBody":null,"expression":null,"condition":null,"initializationExpression":null,"leftExpression":null,"rightExpression":null,"subExpression":null,"trueExpression":null,"falseExpression":null,"loopExpression":null,"baseExpression":null,"indexExpression":null,"startExpression":null,"endExpression":null,"value":null,"initialValue":null,"externalCall":null,"eventCall":null,"errorCall":null,"leftHandSide":null,"rightHandSide":null,"length":null},"condition":null,"initializationExpression":null,"leftExpression":null,"rightExpression":null,"subExpression":null,"trueExpression":null,"falseExpression":null,"loopExpression":null,"baseExpression":null,"indexExpression":null,"startExpression":null,"endExpression":null,"value":null,"initialValue":null,"externalCall":null,"eventCall":null,"errorCall":null,"leftHandSide":null,"rightHandSide":null,"length":null},"condition":null,"initializationExpression":null,"leftExpression":null,"rightExpression":null,"subExpression":null,"trueExpression":null,"falseExpression":null,"loopExpression":null,"baseExpression":null,"indexExpression":null,"startExpression":null,"endExpression":null,"value":null,"initialValue":null,"externalCall":null,"eventCall":null,"errorCall":null,"leftHandSide":null,"rightHandSide":null,"length":null},{"nodeType":"ExpressionStatement","name":null,"src":"7669:64:0","memberName":null,"functionName":null,"AST":null,"nodes":null,"statements":null,"arguments":null,"declarations":null,"members":null,"components":null,"clauses":null,"options":null,"body":null,"trueBody":null,"falseBody":null,"expression":{"nodeType":"FunctionCall","name":null,"src":"7669:64:0","memberName":null,"functionName":null,"AST":null,"nodes":null,"statements":null,"arguments":[{"nodeType":"BinaryOperation","name":null,"src":"7677:16:0","memberName":null,"functionName":null,"AST":null,"nodes":null,"statements":null,"arguments":null,"declarations":null,"members":null,"components":null,"clauses":null,"options":null,"body":null,"trueBody":null,"falseBody":null,"expression":null,"condition":null,"initializationExpression":null,"leftExpression":{"nodeType":"Identifier","name":"to","src":"7677:2:0","memberName":null,"functionName":null,"AST":null,"nodes":null,"statements":null,"arguments":null,"declarations":null,"members":null,"components":null,"clauses":null,"options":null,"body":null,"trueBody":null,"falseBody":null,"expression":null,"condition":null,"initializationExpression":null,"leftExpression":null,"rightExpression":null,"subExpression":null,"trueExpression":null,"falseExpression":null,"loopExpression":null,"baseExpression":null,"indexExpression":null,"startExpression":null,"endExpression":null,"value":null,"initialValue":null,"externalCall":null,"eventCall":null,"errorCall":null,"leftHandSide":null,"rightHandSide":null,"length":null},"rightExpression":{"nodeType":"FunctionCall","name":null,"src":"7683:10:0","memberName":null,"functionName":null,"AST":null,"nodes":null,"statements":null,"arguments":[{"nodeType":"Literal","name":null,"src":"7691:1:0","memberName":null,"functionName":null,"AST":null,"nodes":null,"statements":null,"arguments":null,"declarations":null,"members":null,"components":null,"clauses":null,"options":null,"body":null,"trueBody":null,"falseBody":null,"expression":null,"condition":null,"initializationExpression":null,"leftExpression":null,"rightExpression":null,"subExpression":null,"trueExpression":null,"falseExpression":null,"loopExpression":null,"baseExpression":null,"indexExpression":null,"startExpression":null,"endExpression":null,"value":"0","initialValue":null,"externalCall":null,"eventCall":null,"errorCall":null,"leftHandSide":null,"rightHandSide":null,"length":null}],"declarations":null,"members":null,"components":null,"clauses":null,"options":null,"body":null,"trueBody":null,"falseBody":null,"expression":{"nodeType":"ElementaryTypeNameExpression","name":null,"src":"7683:7:0","memberName":null,"functionName":null,"AST":null,"nodes":null,"statements":null,"arguments":null,"declarations":null,"members":null,"components":null,"clauses":null,"options":null,"body":null,"trueBody":null,"falseBody":null,"expression":null,"condition":null,"initializationExpression":null,"leftExpression":null,"rightExpression":null,"subExpression":null,"trueExpression":null,"falseExpression":null,"loopExpression":null,"baseExpression":null,"indexExpression":null,"startExpression":null,"endExpression":null,"value":null,"initialValue":null,"externalCall":null,"eventCall":null,"errorCall":null,"leftHandSide":null,"rightHandSide":null,"length":null},"condition":null,"initializationExpression":null,"leftExpression":null,"rightExpression":null,"subExpression":null,"trueExpression":null,"falseExpression":null,"loopExpression":null,"baseExpression":null,"indexExpression":null,"startExpression":null,"endExpression":null,"value":null,"initialValue":null,"externalCall":null,"eventCall":null,"errorCall":null,"leftHandSide":null,"rightHandSide":null,"length":null},"subExpression":null,"trueExpression":null,"falseExpression":null,"loopExpression":null,"baseExpression":null,"indexExpression":null,"startExpression":null,"endExpression":null,"value":null,"initialValue":null,"externalCall":null,"eventCall":null,"errorCall":null,"leftHandSide":null,"rightHandSide":null,"length":null},{"nodeType":"Literal","name":null,"src":"7695:37:0","memberName":null,"functionName":null,"AST":null,"nodes":null,"statements":null,"arguments":null,"declarations":null,"members":null,"components":null,"clauses":null,"options":null,"body":null,"trueBody":null,"falseBody":null,"expression":null,"condition":null,"initializationExpression":null,"leftExpression":null,"rightExpression":null,"subExpression":null,"trueExpression":null,"falseExpression":null,"loopExpression":null,"baseExpression":null,"indexExpression":null,"startExpression":null,"endExpression":null,"value":"ERC20: transfer to the zero address","initialValue":null,"externalCall":null,"eventCall":null,"errorCall":null,"leftHandSide":null,"rightHandSide":null,"length":null}],"declarations":null,"members":null,"components":null,"clauses":null,"options":null,"body":null,"trueBody":null,"falseBody":null,"expression":{"nodeType":"Identifier","name":"require","src":"7669:7:0","memberName":null,"functionName":null,"AST":null,"nodes":null,"statements":null,"arguments":null,"declarations":null,"members":null,"components":null,"clauses":null,"options":null,"body":null,"trueBody":null,"falseBody":null,"expression":null,"condition":null,"initializationExpression":null,"leftExpression":null,"rightExpression":null,"subExpression":null,"trueExpression":null,"falseExpression":null,"loopExpression":null,"baseExpression":null,"indexExpression":null,"startExpression":null,"endExpression":null,"value":null,"initialValue":null,"externalCall":null,"eventCall":null,"errorCall":null,"leftHandSide":null,"rightHandSide":null,"length":null},"condition":null,"initializationExpression":null,"leftExpression":null,"rightExpression":null,"subExpression":null,"trueExpression":null,"falseExpression":null,"loopExpression":null,"baseExpression":null,"indexExpression":null,"startExpression":null,"endExpression":null,"value":null,"initialValue":null,"externalCall":null,"eventCall":null,"errorCall":null,"leftHandSide":null,"rightHandSide":null,"length":null},"condition":null,"initializationExpression":null,"leftExpression":null,"rightExpression":null,"subExpression":null,"trueExpression":null,"falseExpression":null,"loopExpression":null,"baseExpression":null,"indexExpression":null,"startExpression":null,"endExpression":null,"value":null,"initialValue":null,"externalCall":null,"eventCall":null,"errorCall":null,"leftHandSide":null,"rightHandSide":null,"length":null},{"nodeType":"ExpressionStatement","name":null,"src":"7744:38:0","memberName":null,"functionName":null,"AST":null,"nodes":null,"statements":null,"arguments":null,"declarations":null,"members":null,"components":null,"clauses":null,"options":null,"body":null,"trueBody":null,"falseBody":null,"expression":{"nodeType":"FunctionCall","name":null,"src":"7744:38:0","memberName":null,"functionName":null,"AST":null,"nodes":null,"statements":null,"arguments":[{"nodeType":"Identifier","name":"from","src":"7765:4:0","memberName":null,"functionName":null,"AST":null,"nodes":null,"statements":null,"arguments":null,"declarations":null,"members":null,"components":null,"clauses":null,"options":null,"body":null,"trueBody":null,"falseBody":null,"expression":null,"condition":null,"initializationExpression":null,"leftExpression":null,"rightExpression":null,"subExpression":null,"trueExpression":null,"falseExpression":null,"loopExpression":null,"baseExpression":null,"indexExpression":null,"startExpression":null,"endExpression":null,"value":null,"initialValue":null,"externalCall":null,"eventCall":null,"errorCall":null,"leftHandSide":null,"rightHandSide":null,"length":null},{"nodeType":"Identifier","name":"to","src":"7771:2:0","memberName":null,"functionName":null,"AST":null,"nodes":null,"statements":null,"arguments":null,"declarations":null,"members":null,"components":null,"clauses":null,"options":null,"body":null,"trueBody":null,"falseBody":null,"expression":null,"condition":null,"initializationExpression":null,"leftExpression":null,"rightExpression":null,"subExpression":null,"trueExpression":null,"falseExpression":null,"loopExpression":null,"baseExpression":null,"indexExpression":null,"startExpression":null,"endExpression":null,"value":null,"initialValue":null,"externalCall":null,"eventCall":null,"errorCall":null,"leftHandSide":null,"rightHandSide":null,"length":null},{"nodeType":"Identifier","name":"amount","src":"7775:6:0","memberName":null,"functionName":null,"AST":null,"nodes":null,"statements":null,"arguments":null,"declarations":null,"members":null,"components":null,"clauses":null,"options":null,"body":null,"trueBody":null,"falseBody":null,"expression":null,"condition":null,"initializationExpression":null,"leftExpression":null,"rightExpression":null,"subExpression":null,"trueExpression":null,"falseExpression":null,"loopExpression":null,"baseExpression":null,"indexExpression":null,"startExpression":null,"endExpression":null,"value":null,"initialValue":null,"externalCall":null,"eventCall":null,"errorCall":null,"leftHandSide":null,"rightHandSide":null,"length":null}],"declarations":null,"members":null,"components":null,"clauses":null,"options":null,"body":null,"trueBody":null,"falseBody":null,"expression":{"nodeType":"Identifier","name":"_beforeTokenTransfer","src":"7744:20:0","memberName":null,"functionName":null,"AST":null,"nodes":null,"statements":null,"arguments":null,"declarations":null,"members":null,"components":null,"clauses":null,"options":null,"body":null,"trueBody":null,"falseBody":null,"expression":null,"condition":null,"initializationExpression":null,"leftExpression":null,"rightExpression":null,"subExpression":null,"trueExpression":null,"falseExpression":null,"loopExpression":null,"baseExpression":null,"indexExpression":null,"startExpression":null,"endExpression":null,"value":null,"initialValue":null,"externalCall":null,"eventCall":null,"errorCall":null,"leftHandSide":null,"rightHandSide":null,"length":null},"condition":null,"initializationExpression":null,"leftExpression":null,"rightExpression":null,"subExpression":null,"trueExpression":null,"falseExpression":null,"loopExpression":null,"baseExpression":null,"indexExpression":null,"startExpression":null,"endExpression":null,"value":null,"initialValue":null,"externalCall":null,"eventCall":null,"errorCall":null,"leftHandSide":null,"rightHandSide":null,"length":null},"condition":null,"initializationExpression":null,"leftExpression":null,"rightExpression":null,"subExpression":null,"trueExpression":null,"falseExpression":null,"loopExpression":null,"baseExpression":null,"indexExpression":null,"startExpression":null,"endExpression":null,"value":null,"initialValue":null,"externalCall":null,"eventCall":null,"errorCall":null,"leftHandSide":null,"rightHandSide":null,"length":null},{"nodeType":"VariableDeclarationStatement","name":null,"src":"7793:37:0","memberName":null,"functionName":null,"AST":null,"nodes":null,"statements":null,"arguments":null,"declarations":[{"nodeType":"VariableDeclaration","name":"fromBalance","src":"7793:19:0","memberName":null,"functionName":null,"AST":null,"nodes":null,"statements":null,"arguments":null,"declarations":null,"members":null,"components":null,"clauses":null,"options":null,"body":null,"trueBody":null,"falseBody":null,"expression":null,"condition":null,"initializationExpression":null,"leftExpression":null,"rightExpression":null,"subExpression":null,"trueExpression":null,"falseExpression":null,"loopExpression":null,"baseExpression":null,"indexExpression":null,"startExpression":null,"endExpression":null,"value":null,"initialValue":null,"externalCall":null,"eventCall":null,"errorCall":null,"leftHandSide":null,"rightHandSide":null,"length":null}],"members":null,"components":null,"clauses":null,"options":null,"body":null,"trueBody":null,"falseBody":null,"expression":null,"condition":null,"initializationExpression":null,"leftExpression":null,"rightExpression":null,"subExpression":null,"trueExpression":null,"falseExpression":null,"loopExpression":null,"baseExpression":null,"indexExpression":null,"startExpression":null,"endExpression":null,"value":null,"initialValue":{"nodeType":"IndexAccess","name":null,"src":"7815:15:0","memberName":null,"functionName":null,"AST":null,"nodes":null,"statements":null,"arguments":null,"declarations":null,"members":null,"components":null,"clauses":null,"options":null,"body":null,"trueBody":null,"falseBody":null,"expression":null,"condition":null,"initializationExpression":null,"leftExpression":null,"rightExpression":null,"subExpression":null,"trueExpression":null,"falseExpression":null,"loopExpression":null,"baseExpression":{"nodeType":"Identifier","name":"_balances","src":"7815:9:0","memberName":null,"functionName":null,"AST":null,"nodes":null,"statements":null,"arguments":null,"declarations":null,"members":null,"components":null,"clauses":null,"options":null,"body":null,"trueBody":null,"falseBody":null,"expression":null,"condition":null,"initializationExpression":null,"leftExpression":null,"rightExpression":null,"subExpression":null,"trueExpression":null,"falseExpression":null,"loopExpression":null,"baseExpression":null,"indexExpression":null,"startExpression":null,"endExpression":null,"value":null,"initialValue":null,"externalCall":null,"eventCall":null,"errorCall":null,"leftHandSide":null,"rightHandSide":null,"length":null},"indexExpression":{"nodeType":"Identifier","name":"from","src":"7825:4:0","memberName":null,"functionName":null,"AST":null,"nodes":null,"statements":null,"arguments":null,"declarations":null,"members":null,"components":null,"clauses":null,"options":null,"body":null,"trueBody":null,"falseBody":null,"expression":null,"condition":null,"initializationExpression":null,"leftExpression":null,"rightExpression":null,"subExpression":null,"trueExpression":null,"falseExpression":null,"loopExpression":null,"baseExpression":null,"indexExpression":null,"startExpression":null,"endExpression":null,"value":null,"initialValue":null,"externalCall":null,"eventCall":null,"errorCall":null,"leftHandSide":null,"rightHandSide":null,"length":null},"startExpression":null,"endExpression":null,"value":null,"initialValue":null,"externalCall":null,"eventCall":null,"errorCall":null,"leftHandSide":null,"rightHandSide":null,"length":null},"externalCall":null,"eventCall":null,"errorCall":null,"leftHandSide":null,"rightHandSide":null,"length":null},{"nodeType":"ExpressionStatement","name":null,"src":"7840:72:0","memberName":null,"functionName":null,"AST":null,"nodes":null,"statements":null,"arguments":null,"declarations":null,"members":null,"components":null,"clauses":null,"options":null,"body":null,"trueBody":null,"falseBody":null,"expression":{"nodeType":"FunctionCall","name":null,"src":"7840:72:0","memberName":null,"functionName":null,"AST":null,"nodes":null,"statements":null,"arguments":[{"nodeType":"BinaryOperation","name":null,"src":"7848:21:0","memberName":null,"functionName":null,"AST":null,"nodes":null,"statements":null,"arguments":null,"declarations":null,"members":null,"components":null,"clauses":null,"options":null,"body":null,"trueBody":null,"falseBody":null,"expression":null,"condition":null,"initializationExpression":null,"leftExpression":{"nodeType":"Identifier","name":"fromBalance","src":"7848:11:0","memberName":null,"functionName":null,"AST":null,"nodes":null,"statements":null,"arguments":null,"declarations":null,"members":null,"components":null,"clauses":null,"options":null,"body":null,"trueBody":null,"falseBody":null,"expression":null,"condition":null,"initializationExpression":null,"leftExpression":null,"rightExpression":null,"subExpression":null,"trueExpression":null,"falseExpression":null,"loopExpression":null,"baseExpression":null,"indexExpression":null,"startExpression":null,"endExpression":null,"value":null,"initialValue":null,"externalCall":null,"eventCall":null,"errorCall":null,"leftHandSide":null,"rightHandSide":null,"length":null},"rightExpression":{"nodeType":"Identifier","name":"amount","src":"7863:6:0","memberName":null,"functionName":null,"AST":null,"nodes":null,"statements":null,"arguments":null,"declarations":null,"members":null,"components":null,"clauses":null,"options":null,"body":null,"trueBody":null,"falseBody":null,"expression":null,"condition":null,"initializationExpression":null,"leftExpression":null,"rightExpression":null,"subExpression":null,"trueExpression":null,"falseExpression":null,"loopExpression":null,"baseExpression":null,"indexExpression":null,"startExpression":null,"endExpression":null,"value":null,"initialValue":null,"externalCall":null,"eventCall":null,"errorCall":null,"leftHandSide":null,"rightHandSide":null,"length":null},"subExpression":null,"trueExpression":null,"falseExpression":null,"loopExpression":null,"baseExpression":null,"indexExpression":null,"startExpression":null,"endExpression":null,"value":null,"initialValue":null,"externalCall":null,"eventCall":null,"errorCall":null,"leftHandSide":null,"rightHandSide":null,"length":null},{"nodeType":"Literal","name":null,"src":"7871:40:0","memberName":null,"functionName":null,"AST":null,"nodes":null,"statements":null,"arguments":null,"declarations":null,"members":null,"components":null,"clauses":null,"options":null,"body":null,"trueBody":null,"falseBody":null,"expression":null,"condition":null,"initializationExpression":null,"leftExpression":null,"rightExpression":null,"subExpression":null,"trueExpression":null,"falseExpression":null,"loopExpression":null,"baseExpression":null,"indexExpression":null,"startExpression":null,"endExpression":null,"value":"ERC20: transfer amount exceeds balance","initialValue":null,"externalCall":null,"eventCall":null,"errorCall":null,"leftHandSide":null,"rightHandSide":null,"length":null}],"declarations":null,"members":null,"components":null,"clauses":null,"options":null,"body":null,"trueBody":null,"falseBody":null,"expression":{"nodeType":"Identifier","name":"require","src":"7840:7:0","memberName":null,"functionName":null,"AST":null,"nodes":null,"statements":null,"arguments":null,"declarations":null,"members":null,"components":null,"clauses":null,"options":null,"body":null,"trueBody":null,"falseBody":null,"expression":null,"condition":null,"initializationExpression":null,"leftExpression":null,"rightExpression":null,"subExpression":null,"trueExpression":null,"falseExpression":null,"loopExpression":null,"baseExpression":null,"indexExpression":null,"startExpression":null,"endExpression":null,"value":null,"initialValue":null,"externalCall":null,"eventCall":null,"errorCall":null,"leftHandSide":null,"rightHandSide":null,"length":null},"condition":null,"initializationExpression":null,"leftExpression":null,"rightExpression":null,"subExpression":null,"trueExpression":null,"falseExpression":null,"loopExpression":null,"baseExpression":null,"indexExpression":null,"startExpression":null,"endExpression":null,"value":null,"initialValue":null,"externalCall":null,"eventCall":null,"errorCall":null,"leftHandSide":null,"rightHandSide":null,"length":null},"condition":null,"initializationExpression":null,"leftExpression":null,"rightExpression":null,"subExpression":null,"trueExpression":null,"falseExpression":null,"loopExpression":null,"baseExpression":null,"indexExpression":null,"startExpression":null,"endExpression":null,"value":null,"initialValue":null,"externalCall":null,"eventCall":null,"errorCall":null,"leftHandSide":null,"rightHandSide":null,"length":null},{"nodeType":"UncheckedBlock","name":null,"src":"7922:273:0","memberName":null,"functionName":null,"AST":null,"nodes":null,"statements":[{"nodeType":"ExpressionStatement","name":null,"src":"7946:38:0","memberName":null,"functionName":null,"AST":null,"nodes":null,"statements":null,"arguments":null,"declarations":null,"members":null,"components":null,"clauses":null,"options":null,"body":null,"trueBody":null,"falseBody":null,"expression":{"nodeType":"Assignment","name":null,"src":"7946:38:0","memberName":null,"functionName":null,"AST":null,"nodes":null,"statements":null,"arguments":null,"declarations":null,"members":null,"components":null,"clauses":null,"options":null,"body":null,"trueBody":null,"falseBody":null,"expression":null,"condition":null,"initializationExpression":null,"leftExpression":null,"rightExpression":null,"subExpression":null,"trueExpression":null,"falseExpression":null,"loopExpression":null,"baseExpression":null,"indexExpression":null,"startExpression":null,"endExpression":null,"value":null,"initialValue":null,"externalCall":null,"eventCall":null,"errorCall":null,"leftHandSide":{"nodeType":"IndexAccess","name":null,"src":"7946:15:0","memberName":null,"functionName":null,"AST":null,"nodes":null,"statements":null,"arguments":null,"declarations":null,"members":null,"components":null,"clauses":null,"options":null,"body":null,"trueBody":null,"falseBody":null,"expression":null,"condition":null,"initializationExpression":null,"leftExpression":null,"rightExpression":null,"subExpression":null,"trueExpression":null,"falseExpression":null,"loopExpression":null,"baseExpression":{"nodeType":"Identifier","name":"_balances","src":"7946:9:0","memberName":null,"functionName":null,"AST":null,"nodes":null,"statements":null,"arguments":null,"declarations":null,"members":null,"components":null,"clauses":null,"options":null,"body":null,"trueBody":null,"falseBody":null,"expression":null,"condition":null,"initializationExpression":null,"leftExpression":null,"rightExpression":null,"subExpression":null,"trueExpression":null,"falseExpression":null,"loopExpression":null,"baseExpression":null,"indexExpression":null,"startExpression":null,"endExpression":null,"value":null,"initialValue":null,"externalCall":null,"eventCall":null,"errorCall":null,"leftHandSide":null,"rightHandSide":null,"length":null},"indexExpression":{"nodeType":"Identifier","name":"from","src":"7956:4:0","memberName":null,"functionName":null,"AST":null,"nodes":null,"statements":null,"arguments":null,"declarations":null,"members":null,"components":null,"clauses":null,"options":null,"body":null,"trueBody":null,"falseBody":null,"expression":null,"condition":null,"initializationExpression":null,"leftExpression":null,"rightExpression":null,"subExpression":null,"trueExpression":null,"falseExpression":null,"loopExpression":null,"baseExpression":null,"indexExpression":null,"startExpression":null,"endExpression":null,"value":null,"initialValue":null,"externalCall":null,"eventCall":null,"errorCall":null,"leftHandSide":null,"rightHandSide":null,"length":null},"startExpression":null,"endExpression":null,"value":null,"initialValue":null,"externalCall":null,"eventCall":null,"errorCall":null,"leftHandSide":null,"rightHandSide":null,"length":null},"rightHandSide":{"nodeType":"BinaryOperation","name":null,"src":"7964:20:0","memberName":null,"functionName":null,"AST":null,"nodes":null,"statements":null,"arguments":null,"declarations":null,"members":null,"components":null,"clauses":null,"options":null,"body":null,"trueBody":null,"falseBody":null,"expression":null,"condition":null,"initializationExpression":null,"leftExpression":{"nodeType":"Identifier","name":"fromBalance","src":"7964:11:0","memberName":null,"functionName":null,"AST":null,"nodes":null,"statements":null,"arguments":null,"declarations":null,"members":null,"components":null,"clauses":null,"options":null,"body":null,"trueBody":null,"falseBody":null,"expression":null,"condition":null,"initializationExpression":null,"leftExpression":null,"rightExpression":null,"subExpression":null,"trueExpression":null,"falseExpression":null,"loopExpression":null,"baseExpression":null,"indexExpression":null,"startExpression":null,"endExpression":null,"value":null,"initialValue":null,"externalCall":null,"eventCall":null,"errorCall":null,"leftHandSide":null,"rightHandSide":null,"length":null},"rightExpression":{"nodeType":"Identifier","name":"amount","src":"7978:6:0","memberName":null,"functionName":null,"AST":null,"nodes":null,"statements":null,"arguments":null,"declarations":null,"members":null,"components":null,"clauses":null,"options":null,"body":null,"trueBody":null,"falseBody":null,"expression":null,"condition":null,"initializationExpression":null,"leftExpression":null,"rightExpression":null,"subExpression":null,"trueExpression":null,"falseExpression":null,"loopExpression":null,"baseExpression":null,"indexExpression":null,"startExpression":null,"endExpression":null,"value":null,"initialValue":null,"externalCall":null,"eventCall":null,"errorCall":null,"leftHandSide":null,"rightHandSide":null,"length":null},"subExpression":null,"trueExpression":null,"falseExpression":null,"loopExpression":null,"baseExpression":null,"indexExpression":null,"startExpression":null,"endExpression":null,"value":null,"initialValue":null,"externalCall":null,"eventCall":null,"errorCall":null,"leftHandSide":null,"rightHandSide":null,"length":null},"length":null},"condition":null,"initializationExpression":null,"leftExpression":null,"rightExpression":null,"subExpression":null,"trueExpression":null,"falseExpression":null,"loopExpression":null,"baseExpression":null,"indexExpression":null,"startExpression":null,"endExpression":null,"value":null,"initialValue":null,"externalCall":null,"eventCall":null,"errorCall":null,"leftHandSide":null,"rightHandSide":null,"length":null},{"nodeType":"ExpressionStatement","name":null,"src":"8161:23:0","memberName":null,"functionName":null,"AST":null,"nodes":null,"statements":null,"arguments":null,"declarations":null,"members":null,"components":null,"clauses":null,"options":null,"body":null,"trueBody":null,"falseBody":null,"expression":{"nodeType":"Assignment","name":null,"src":"8161:23:0","memberName":null,"functionName":null,"AST":null,"nodes":null,"statements":null,"arguments":null,"declarations":null,"members":null,"components":null,"clauses":null,"options":null,"body":null,"trueBody":null,"falseBody":null,"expression":null,"condition":null,"initializationExpression":null,"leftExpression":null,"rightExpression":null,"subExpression":null,"trueExpression":null,"falseExpression":null,"loopExpression":null,"baseExpression":null,"indexExpression":null,"startExpression":null,"endExpression":null,"value":null,"initialValue":null,"externalCall":null,"eventCall":null,"errorCall":null,"leftHandSide":{"nodeType":"IndexAccess","name":null,"src":"8161:13:0","memberName":null,"functionName":null,"AST":null,"nodes":null,"statements":null,"arguments":null,"declarations":null,"members":null,"components":null,"clauses":null,"options":null,"body":null,"trueBody":null,"falseBody":null,"expression":null,"condition":null,"initializationExpression":null,"leftExpression":null,"rightExpression":null,"subExpression":null,"trueExpression":null,"falseExpression":null,"loopExpression":null,"baseExpression":{"nodeType":"Identifier","name":"_balances","src":"8161:9:0","memberName":null,"functionName":null,"AST":null,"nodes":null,"statements":null,"arguments":null,"declarations":null,"members":null,"components":null,"clauses":null,"options":null,"body":null,"trueBody":null,"falseBody":null,"expression":null,"condition":null,"initializationExpression":null,"leftExpression":null,"rightExpression":null,"subExpression":null,"trueExpression":null,"falseExpression":null,"loopExpression":null,"baseExpression":null,"indexExpression":null,"startExpression":null,"endExpression":null,"value":null,"initialValue":null,"externalCall":null,"eventCall":null,"errorCall":null,"leftHandSide":null,"rightHandSide":null,"length":null},"indexExpression":{"nodeType":"Identifier","name":"to","src":"8171:2:0","memberName":null,"functionName":null,"AST":null,"nodes":null,"statements":null,"arguments":null,"declarations":null,"members":null,"components":null,"clauses":null,"options":null,"body":null,"trueBody":null,"falseBody":null,"expression":null,"condition":null,"initializationExpression":null,"leftExpression":null,"rightExpression":null,"subExpression":null,"trueExpression":null,"falseExpression":null,"loopExpression":null,"baseExpression":null,"indexExpression":null,"startExpression":null,"endExpression":null,"value":null,"initialValue":null,"externalCall":null,"eventCall":null,"errorCall":null,"leftHandSide":null,"rightHandSide":null,"length":null},"startExpression":null,"endExpression":null,"value":null,"initialValue":null,"externalCall":null,"eventCall":null,"errorCall":null,"leftHandSide":null,"rightHandSide":null,"length":null},"rightHandSide":{"nodeType":"Identifier","name":"amount","src":"8178:6:0","memberName":null,"functionName":null,"AST":null,"nodes":null,"statements":null,"arguments":null,"declarations":null,"members":null,"components":null,"clauses":null,"options":null,"body":null,"trueBody":null,"falseBody":null,"expression":null,"condition":null,"initializationExpression":null,"leftExpression":null,"rightExpression":null,"subExpression":null,"trueExpression":null,"falseExpression":null,"loopExpression":null,"baseExpression":null,"indexExpression":null,"startExpression":null,"endExpression":null,"value":null,"initialValue":null,"externalCall":null,"eventCall":null,"errorCall":null,"leftHandSide":null,"rightHandSide":null,"length":null},"length":null},"condition":null,"initializationExpression":null,"leftExpression":null,"rightExpression":null,"subExpression":null,"trueExpression":null,"falseExpression":null,"loopExpression":null,"baseExpression":null,"indexExpression":null,"startExpression":null,"endExpression":null,"value":null,"initialValue":null,"externalCall":null,"eventCall":null,"errorCall":null,"leftHandSide":null,"rightHandSide":null,"length":null}],"arguments":null,"declarations":null,"members":null,"components":null,"clauses":null,"options":null,"body":null,"trueBody":null,"falseBody":null,"expression":null,"condition":null,"initializationExpression":null,"leftExpression":null,"rightExpression":null,"subExpression":null,"trueExpression":null,"falseExpression":null,"loopExpression":null,"baseExpression":null,"indexExpression":null,"startExpression":null,"endExpression":null,"value":null,"initialValue":null,"externalCall":null,"eventCall":null,"errorCall":null,"leftHandSide":null,"rightHandSide":null,"length":null},{"nodeType":"EmitStatement","name":null,"src":"8205:31:0","memberName":null,"functionName":null,"AST":null,"nodes":null,"statements":null,"arguments":null,"declarations":null,"members":null,"components":null,"clauses":null,"options":null,"body":null,"trueBody":null,"falseBody":null,"expression":null,"condition":null,"initializationExpression":null,"leftExpression":null,"rightExpression":null,"subExpression":null,"trueExpression":null,"falseExpression":null,"loopExpression":null,"baseExpression":null,"indexExpression":null,"startExpression":null,"endExpression":null,"value":null,"initialValue":null,"externalCall":null,"eventCall":{"nodeType":"FunctionCall","name":null,"src":"8210:26:0","memberName":null,"functionName":null,"AST":null,"nodes":null,"statements":null,"arguments":[{"nodeType":"Identifier","name":"from","src":"8219:4:0","memberName":null,"functionName":null,"AST":null,"nodes":null,"statements":null,"arguments":null,"declarations":null,"members":null,"components":null,"clauses":null,"options":null,"body":null,"trueBody":null,"falseBody":null,"expression":null,"condition":null,"initializationExpression":null,"leftExpression":null,"rightExpression":null,"subExpression":null,"trueExpression":null,"falseExpression":null,"loopExpression":null,"baseExpression":null,"indexExpression":null,"startExpression":null,"endExpression":null,"value":null,"initialValue":null,"externalCall":null,"eventCall":null,"errorCall":null,"leftHandSide":null,"rightHandSide":null,"length":null},{"nodeType":"Identifier","name":"to","src":"8225:2:0","memberName":null,"functionName":null,"AST":null,"nodes":null,"statements":null,"arguments":null,"declarations":null,"members":null,"components":null,"clauses":null,"options":null,"body":null,"trueBody":null,"falseBody":null,"expression":null,"condition":null,"initializationExpression":null,"leftExpression":null,"rightExpression":null,"subExpression":null,"trueExpression":null,"falseExpression":null,"loopExpression":null,"baseExpression":null,"indexExpression":null,"startExpression":null,"endExpression":null,"value":null,"initialValue":null,"externalCall":null,"eventCall":null,"errorCall":null,"leftHandSide":null,"rightHandSide":null,"length":null},{"nodeType":"Identifier","name":"amount","src":"8229:6:0","memberName":null,"functionName":null,"AST":null,"nodes":null,"statements":null,"arguments":null,"declarations":null,"members":null,"components":null,"clauses":null,"options":null,"body":null,"trueBody":null,"falseBody":null,"expression":null,"condition":null,"initializationExpression":null,"leftExpression":null,"rightExpression":null,"subExpression":null,"trueExpression":null,"falseExpression":null,"loopExpression":null,"baseExpression":null,"indexExpression":null,"startExpression":null,"endExpression":null,"value":null,"initialValue":null,"externalCall":null,"eventCall":null,"errorCall":null,"leftHandSide":null,"rightHandSide":null,"length":null}],"declarations":null,"members":null,"components":null,"clauses":null,"options":null,"body":null,"trueBody":null,"falseBody":null,"expression":{"nodeType":"Identifier","name":"Transfer","src":"8210:8:0","memberName":null,"functionName":null,"AST":null,"nodes":null,"statements":null,"arguments":null,"declarations":null,"members":null,"components":null,"clauses":null,"options":null,"body":null,"trueBody":null,"falseBody":null,"expression":null,"condition":null,"initializationExpression":null,"leftExpression":null,"rightExpression":null,"subExpression":null,"trueExpression":null,"falseExpression":null,"loopExpression":null,"baseExpression":null,"indexExpression":null,"startExpression":null,"endExpression":null,"value":null,"initialValue":null,"externalCall":null,"eventCall":null,"errorCall":null,"leftHandSide":null,"rightHandSide":null,"length":null},"condition":null,"initializationExpression":null,"leftExpression":null,"rightExpression":null,"subExpression":null,"trueExpression":null,"falseExpression":null,"loopExpression":null,"baseExpression":null,"indexExpression":null,"startExpression":null,"endExpression":null,"value":null,"initialValue":null,"externalCall":null,"eventCall":null,"errorCall":null,"leftHandSide":null,"rightHandSide":null,"length":null},"errorCall":null,"leftHandSide":null,"rightHandSide":null,"length":null},{"nodeType":"ExpressionStatement","name":null,"src":"8247:37:0","memberName":null,"functionName":null,"AST":null,"nodes":null,"statements":null,"arguments":null,"declarations":null,"members":null,"components":null,"clauses":null,"options":null,"body":null,"trueBody":null,"falseBody":null,"expression":{"nodeType":"FunctionCall","name":null,"src":"8247:37:0","memberName":null,"functionName":null,"AST":null,"nodes":null,"statements":null,"arguments":[{"nodeType":"Identifier","name":"from","src":"8267:4:0","memberName":null,"functionName":null,"AST":null,"nodes":null,"statements":null,"arguments":null,"declarations":null,"members":null,"components":null,"clauses":null,"options":null,"body":null,"trueBody":null,"falseBody":null,"expression":null,"condition":null,"initializationExpression":null,"leftExpression":null,"rightExpression":null,"subExpression":null,"trueExpression":null,"falseExpression":null,"loopExpression":null,"baseExpression":null,"indexExpression":null,"startExpression":null,"endExpression":null,"value":null,"initialValue":null,"externalCall":null,"eventCall":null,"errorCall":null,"leftHandSide":null,"rightHandSide":null,"length":null},{"nodeType":"Identifier","name":"to","src":"8273:2:0","memberName":null,"functionName":null,"AST":null,"nodes":null,"statements":null,"arguments":null,"declarations":null,"members":null,"components":null,"clauses":null,"options":null,"body":null,"trueBody":null,"falseBody":null,"expression":null,"condition":null,"initializationExpression":null,"leftExpression":null,"rightExpression":null,"subExpression":null,"trueExpression":null,"falseExpression":null,"loopExpression":null,"baseExpression":null,"indexExpression":null,"startExpression":null,"endExpression":null,"value":null,"initialValue":null,"externalCall":null,"eventCall":null,"errorCall":null,"leftHandSide":null,"rightHandSide":null,"length":null},{"nodeType":"Identifier","name":"amount","src":"8277:6:0","memberName":null,"functionName":null,"AST":null,"nodes":null,"statements":null,"arguments":null,"declarations":null,"members":null,"components":null,"clauses":null,"options":null,"body":null,"trueBody":null,"falseBody":null,"expression":null,"condition":null,"initializationExpression":null,"leftExpression":null,"rightExpression":null,"subExpression":null,"trueExpression":null,"falseExpression":null,"loopExpression":null,"baseExpression":null,"indexExpression":null,"startExpression":null,"endExpression":null,"value":null,"initialValue":null,"externalCall":null,"eventCall":null,"errorCall":null,"leftHandSide":null,"rightHandSide":null,"length":null}],"declarations":null,"members":null,"components":null,"clauses":null,"options":null,"body":null,"trueBody":null,"falseBody":null,"expression":{"nodeType":"Identifier","name":"_afterTokenTransfer","src":"8247:19:0","memberName":null,"functionName":null,"AST":null,"nodes":null,"statements":null,"arguments":null,"declarations":null,"members":null,"components":null,"clauses":null,"options":null,"body":null,"trueBody":null,"falseBody":null,"expression":null,"condition":null,"initializationExpression":null,"leftExpression":null,"rightExpression":null,"subExpression":null,"trueExpression":null,"falseExpression":null,"loopExpression":null,"baseExpression":null,"indexExpression":null,"startExpression":null,"endExpression":null,"value":null,"initialValue":null,"externalCall":null,"eventCall":null,"errorCall":null,"leftHandSide":null,"rightHandSide":null,"length":null},"condition":null,"initializationExpression":null,"leftExpression":null,"rightExpression":null,"subExpression":null,"trueExpression":null,"falseExpression":null,"loopExpression":null,"baseExpression":null,"indexExpression":null,"startExpression":null,"endExpression":null,"value":null,"initialValue":null,"externalCall":null,"eventCall":null,"errorCall":null,"leftHandSide":null,"rightHandSide":null,"length":null},"condition":null,"initializationExpression":null,"leftExpression":null,"rightExpression":null,"subExpression":null,"trueExpression":null,"falseExpression":null,"loopExpression":null,"baseExpression":null,"indexExpression":null,"startExpression":null,"endExpression":null,"value":null,"initialValue":null,"externalCall":null,"eventCall":null,"errorCall":null,"leftHandSide":null,"rightHandSide":null,"length":null}],"arguments":null,"declarations":null,"members":null,"components":null,"clauses":null,"options":null,"body":null,"trueBody":null,"falseBody":null,"expression":null,"condition":null,"initializationExpression":null,"leftExpression":null,"rightExpression":null,"subExpression":null,"trueExpression":null,"falseExpression":null,"loopExpression":null,"baseExpression":null,"indexExpression":null,"startExpression":null,"endExpression":null,"value":null,"initialValue":null,"externalCall":null,"eventCall":null,"errorCall":null,"leftHandSide":null,"rightHandSide":null,"length":null},"trueBody":null,"falseBody":null,"expression":null,"condition":null,"initializationExpression":null,"leftExpression":null,"rightExpression":null,"subExpression":null,"trueExpression":null,"falseExpression":null,"loopExpression":null,"baseExpression":null,"indexExpression":null,"startExpression":null,"endExpression":null,"value":null,"initialValue":null,"externalCall":null,"eventCall":null,"errorCall":null,"leftHandSide":null,"rightHandSide":null,"length":null},{"nodeType":"FunctionDefinition","name":"_mint","src":"8567:535:0","memberName":null,"functionName":null,"AST":null,"nodes":null,"statements":null,"arguments":null,"declarations":null,"members":null,"components":null,"clauses":null,"options":null,"body":{"nodeType":"Block","name":null,"src":"8632:470:0","memberName":null,"functionName":null,"AST":null,"nodes":null,"statements":[{"nodeType":"ExpressionStatement","name":null,"src":"8642:65:0","memberName":null,"functionName":null,"AST":null,"nodes":null,"statements":null,"arguments":null,"declarations":null,"members":null,"components":null,"clauses":null,"options":null,"body":null,"trueBody":null,"falseBody":null,"expression":{"nodeType":"FunctionCall","name":null,"src":"8642:65:0","memberName":null,"functionName":null,"AST":null,"nodes":null,"statements":null,"arguments":[{"nodeType":"BinaryOperation","name":null,"src":"8650:21:0","memberName":null,"functionName":null,"AST":null,"nodes":null,"statements":null,"arguments":null,"declarations":null,"members":null,"components":null,"clauses":null,"options":null,"body":null,"trueBody":null,"falseBody":null,"expression":null,"condition":null,"initializationExpression":null,"leftExpression":{"nodeType":"Identifier","name":"account","src":"8650:7:0","memberName":null,"functionName":null,"AST":null,"nodes":null,"statements":null,"arguments":null,"declarations":null,"members":null,"components":null,"clauses":null,"options":null,"body":null,"trueBody":null,"falseBody":null,"expression":null,"condition":null,"initializationExpression":null,"leftExpression":null,"rightExpression":null,"subExpression":null,"trueExpression":null,"falseExpression":null,"loopExpression":null,"baseExpression":null,"indexExpression":null,"startExpression":null,"endExpression":null,"value":null,"initialValue":null,"externalCall":null,"eventCall":null,"errorCall":null,"leftHandSide":null,"rightHandSide":null,"length":null},"rightExpression":{"nodeType":"FunctionCall","name":null,"src":"8661:10:0","memberName":null,"functionName":null,"AST":null,"nodes":null,"statements":null,"arguments":[{"nodeType":"Literal","name":null,"src":"8669:1:0","memberName":null,"functionName":null,"AST":null,"nodes":null,"statements":null,"arguments":null,"declarations":null,"members":null,"components":null,"clauses":null,"options":null,"body":null,"trueBody":null,"falseBody":null,"expression":null,"condition":null,"initializationExpression":null,"leftExpression":null,"rightExpression":null,"subExpression":null,"trueExpression":null,"falseExpression":null,"loopExpression":null,"baseExpression":null,"indexExpression":null,"startExpression":null,"endExpression":null,"value":"0","initialValue":null,"externalCall":null,"eventCall":null,"errorCall":null,"leftHandSide":null,"rightHandSide":null,"length":null}],"declarations":null,"members":null,"components":null,"clauses":null,"options":null,"body":null,"trueBody":null,"falseBody":null,"expression":{"nodeType":"ElementaryTypeNameExpression","name":null,"src":"8661:7:0","memberName":null,"functionName":null,"AST":null,"nodes":null,"statements":null,"arguments":null,"declarations":null,"members":null,"components":null,"clauses":null,"options":null,"body":null,"trueBody":null,"falseBody":null,"expression":null,"condition":null,"initializationExpression":null,"leftExpression":null,"rightExpression":null,"subExpression":null,"trueExpression":null,"falseExpression":null,"loopExpression":null,"baseExpression":null,"indexExpression":null,"startExpression":null,"endExpression":null,"value":null,"initialValue":null,"externalCall":null,"eventCall":null,"errorCall":null,"leftHandSide":null,"rightHandSide":null,"length":null},"condition":null,"initializationExpression":null,"leftExpression":null,"rightExpression":null,"subExpression":null,"trueExpression":null,"falseExpression":null,"loopExpression":null,"baseExpression":null,"indexExpression":null,"startExpression":null,"endExpression":null,"value":null,"initialValue":null,"externalCall":null,"eventCall":null,"errorCall":null,"leftHandSide":null,"rightHandSide":null,"length":null},"subExpression":null,"trueExpression":null,"falseExpression":null,"loopExpression":null,"baseExpression":null,"indexExpression":null,"startExpression":null,"endExpression":null,"value":null,"initialValue":null,"externalCall":null,"eventCall":null,"errorCall":null,"leftHandSide":null,"rightHandSide":null,"length":null},{"nodeType":"Literal","name":null,"src":"8673:33:0","memberName":null,"functionName":null,"AST":null,"nodes":null,"statements":null,"arguments":null,"declarations":null,"members":null,"components":null,"clauses":null,"options":null,"body":null,"trueBody":null,"falseBody":null,"expression":null,"condition":null,"initializationExpression":null,"leftExpression":null,"rightExpression":null,"subExpression":null,"trueExpression":null,"falseExpression":null,"loopExpression":null,"baseExpression":null,"indexExpression":null,"startExpression":null,"endExpression":null,"value":"ERC20: mint to the zero address","initialValue":null,"externalCall":null,"eventCall":null,"errorCall":null,"leftHandSide":null,"rightHandSide":null,"length":null}],"declarations":null,"members":null,"components":null,"clauses":null,"options":null,"body":null,"trueBody":null,"falseBody":null,"expression":{"nodeType":"Identifier","name":"require","src":"8642:7:0","memberName":null,"functionName":null,"AST":null,"nodes":null,"statements":null,"arguments":null,"declarations":null,"members":null,"components":null,"clauses":null,"options":null,"body":null,"trueBody":null,"falseBody":null,"expression":null,"condition":null,"initializationExpression":null,"leftExpression":null,"rightExpression":null,"subExpression":null,"trueExpression":null,"falseExpression":null,"loopExpression":null,"baseExpression":null,"indexExpression":null,"startExpression":null,"endExpression":null,"value":null,"initialValue":null,"externalCall":null,"eventCall":null,"errorCall":null,"leftHandSide":null,"rightHandSide":null,"length":null},"condition":null,"initializationExpression":null,"leftExpression":null,"rightExpression":null,"subExpression":null,"trueExpression":null,"falseExpression":null,"loopExpression":null,"baseExpression":null,"indexExpression":null,"startExpression":null,"endExpression":null,"value":null,"initialValue":null,"externalCall":null,"eventCall":null,"errorCall":null,"leftHandSide":null,"rightHandSide":null,"length":null},"condition":null,"initializationExpression":null,"leftExpression":null,"rightExpression":null,"subExpression":null,"trueExpression":null,"falseExpression":null,"loopExpression":null,"baseExpression":null,"indexExpression":null,"startExpression":null,"endExpression":null,"value":null,"initialValue":null,"externalCall":null,"eventCall":null,"errorCall":null,"leftHandSide":null,"rightHandSide":null,"length":null},{"nodeType":"ExpressionStatement","name":null,"src":"8718:49:0","memberName":null,"functionName":null,"AST":null,"nodes":null,"statements":null,"arguments":null,"declarations":null,"members":null,"components":null,"clauses":null,"options":null,"body":null,"trueBody":null,"falseBody":null,"expression":{"nodeType":"FunctionCall","name":null,"src":"8718:49:0","memberName":null,"functionName":null,"AST":null,"nodes":null,"statements":null,"arguments":[{"nodeType":"FunctionCall","name":null,"src":"8739:10:0","memberName":null,"functionName":null,"AST":null,"nodes":null,"statements":null,"arguments":[{"nodeType":"Literal","name":null,"src":"8747:1:0","memberName":null,"functionName":null,"AST":null,"nodes":null,"statements":null,"arguments":null,"declarations":null,"members":null,"components":null,"clauses":null,"options":null,"body":null,"trueBody":null,"falseBody":null,"expression":null,"condition":null,"initializationExpression":null,"leftExpression":null,"rightExpression":null,"subExpression":null,"trueExpression":null,"falseExpression":null,"loopExpression":null,"baseExpression":null,"indexExpression":null,"startExpression":null,"endExpression":null,"value":"0","initialValue":null,"externalCall":null,"eventCall":null,"errorCall":null,"leftHandSide":null,"rightHandSide":null,"length":null}],"declarations":null,"members":null,"components":null,"clauses":null,"options":null,"body":null,"trueBody":null,"falseBody":null,"expression":{"nodeType":"ElementaryTypeNameExpression","name":null,"src":"8739:7:0","memberName":null,"functionName":null,"AST":null,"nodes":null,"statements":null,"arguments":null,"declarations":null,"members":null,"components":null,"clauses":null,"options":null,"body":null,"trueBody":null,"falseBody":null,"expression":null,"condition":null,"initializationExpression":null,"leftExpression":null,"rightExpression":null,"subExpression":null,"trueExpression":null,"falseExpression":null,"loopExpression":null,"baseExpression":null,"indexExpression":null,"startExpression":null,"endExpression":null,"value":null,"initialValue":null,"externalCall":null,"eventCall":null,"errorCall":null,"leftHandSide":null,"rightHandSide":null,"length":null},"condition":null,"initializationExpression":null,"leftExpression":null,"rightExpression":null,"subExpression":null,"trueExpression":null,"falseExpression":null,"loopExpression":null,"baseExpression":null,"indexExpression":null,"startExpression":null,"endExpression":null,"value":null,"initialValue":null,"externalCall":null,"eventCall":null,"errorCall":null,"leftHandSide":null,"rightHandSide":null,"length":null},{"nodeType":"Identifier","name":"account","src":"8751:7:0","memberName":null,"functionName":null,"AST":null,"nodes":null,"statements":null,"arguments":null,"declarations":null,"members":null,"components":null,"clauses":null,"options":null,"body":null,"trueBody":null,"falseBody":null,"expression":null,"condition":null,"initializationExpression":null,"leftExpression":null,"rightExpression":null,"subExpression":null,"trueExpression":null,"falseExpression":null,"loopExpression":null,"baseExpression":null,"indexExpression":null,"startExpression":null,"endExpression":null,"value":null,"initialValue":null,"externalCall":null,"eventCall":null,"errorCall":null,"leftHandSide":null,"rightHandSide":null,"length":null},{"nodeType":"Identifier","name":"amount","src":"8760:6:0","memberName":null,"functionName":null,"AST":null,"nodes":null,"statements":null,"arguments":null,"declarations":null,"members":null,"components":null,"clauses":null,"options":null,"body":null,"trueBody":null,"falseBody":null,"expression":null,"condition":null,"initializationExpression":null,"leftExpression":null,"rightExpression":null,"subExpression":null,"trueExpression":null,"falseExpression":null,"loopExpression":null,"baseExpression":null,"indexExpression":null,"startExpression":null,"endExpression":null,"value":null,"initialValue":null,"externalCall":null,"eventCall":null,"errorCall":null,"leftHandSide":null,"rightHandSide":null,"length":null}],"declarations":null,"members":null,"components":null,"clauses":null,"options":null,"body":null,"trueBody":null,"falseBody":null,"expression":{"nodeType":"Identifier","name":"_beforeTokenTransfer","src":"8718:20:0","memberName":null,"functionName":null,"AST":null,"nodes":null,"statements":null,"arguments":null,"declarations":null,"members":null,"components":null,"clauses":null,"options":null,"body":null,"trueBody":null,"falseBody":null,"expression":null,"condition":null,"initializationExpression":null,"leftExpression":null,"rightExpression":null,"subExpression":null,"trueExpression":null,"falseExpression":null,"loopExpression":null,"baseExpression":null,"indexExpression":null,"startExpression":null,"endExpression":null,"value":null,"initialValue":null,"externalCall":null,"eventCall":null,"errorCall":null,"leftHandSide":null,"rightHandSide":null,"length":null},"condition":null,"initializationExpression":null,"leftExpression":null,"rightExpression":null,"subExpression":null,"trueExpression":null,"falseExpression":null,"loopExpression":null,"baseExpression":null,"indexExpression":null,"startExpression":null,"endExpression":null,"value":null,"initialValue":null,"externalCall":null,"eventCall":null,"errorCall":null,"leftHandSide":null,"rightHandSide":null,"length":null},"condition":null,"initializationExpression":null,"leftExpression":null,"rightExpression":null,"subExpression":null,"trueExpression":null,"falseExpression":null,"loopExpression":null,"baseExpression":null,"indexExpression":null,"startExpression":null,"endExpression":null,"value":null,"initialValue":null,"externalCall":null,"eventCall":null,"errorCall":null,"leftHandSide":null,"rightHandSide":null,"length":null},{"nodeType":"ExpressionStatement","name":null,"src":"8778:22:0","memberName":null,"functionName":null,"AST":null,"nodes":null,"statements":null,"arguments":null,"declarations":null,"members":null,"components":null,"clauses":null,"options":null,"body":null,"trueBody":null,"falseBody":null,"expression":{"nodeType":"Assignment","name":null,"src":"8778:22:0","memberName":null,"functionName":null,"AST":null,"nodes":null,"statements":null,"arguments":null,"declarations":null,"members":null,"components":null,"clauses":null,"options":null,"body":null,"trueBody":null,"falseBody":null,"expression":null,"condition":null,"initializationExpression":null,"leftExpression":null,"rightExpression":null,"subExpression":null,"trueExpression":null,"falseExpression":null,"loopExpression":null,"baseExpression":null,"indexExpression":null,"startExpression":null,"endExpression":null,"value":null,"initialValue":null,"externalCall":null,"eventCall":null,"errorCall":null,"leftHandSide":{"nodeType":"Identifier","name":"_totalSupply","src":"8778:12:0","memberName":null,"functionName":null,"AST":null,"nodes":null,"statements":null,"arguments":null,"declarations":null,"members":null,"components":null,"clauses":null,"options":null,"body":null,"trueBody":null,"falseBody":null,"expression":null,"condition":null,"initializationExpression":null,"leftExpression":null,"rightExpression":null,"subExpression":null,"trueExpression":null,"falseExpression":null,"loopExpression":null,"baseExpression":null,"indexExpression":null,"startExpression":null,"endExpression":null,"value":null,"initialValue":null,"externalCall":null,"eventCall":null,"errorCall":null,"leftHandSide":null,"rightHandSide":null,"length":null},"rightHandSide":{"nodeType":"Identifier","name":"amount","src":"8794:6:0","memberName":null,"functionName":null,"AST":null,"nodes":null,"statements":null,"arguments":null,"declarations":null,"members":null,"components":null,"clauses":null,"options":null,"body":null,"trueBody":null,"falseBody":null,"expression":null,"condition":null,"initializationExpression":null,"leftExpression":null,"rightExpression":null,"subExpression":null,"trueExpression":null,"falseExpression":null,"loopExpression":null,"baseExpression":null,"indexExpression":null,"startExpression":null,"endExpression":null,"value":null,"initialValue":null,"externalCall":null,"eventCall":null,"errorCall":null,"leftHandSide":null,"rightHandSide":null,"length":null},"length":null},"condition":null,"initializationExpression":null,"leftExpression":null,"rightExpression":null,"subExpression":null,"trueExpression":null,"falseExpression":null,"loopExpression":null,"baseExpression":null,"indexExpression":null,"startExpression":null,"endExpression":null,"value":null,"initialValue":null,"externalCall":null,"eventCall":null,"errorCall":null,"leftHandSide":null,"rightHandSide":null,"length":null},{"nodeType":"UncheckedBlock","name":null,"src":"8810:175:0","memberName":null,"functionName":null,"AST":null,"nodes":null,"statements":[{"nodeType":"ExpressionStatement","name":null,"src":"8946:28:0","memberName":null,"functionName":null,"AST":null,"nodes":null,"statements":null,"arguments":null,"declarations":null,"members":null,"components":null,"clauses":null,"options":null,"body":null,"trueBody":null,"falseBody":null,"expression":{"nodeType":"Assignment","name":null,"src":"8946:28:0","memberName":null,"functionName":null,"AST":null,"nodes":null,"statements":null,"arguments":null,"declarations":null,"members":null,"components":null,"clauses":null,"options":null,"body":null,"trueBody":null,"falseBody":null,"expression":null,"condition":null,"initializationExpression":null,"leftExpression":null,"rightExpression":null,"subExpression":null,"trueExpression":null,"falseExpression":null,"loopExpression":null,"baseExpression":null,"indexExpression":null,"startExpression":null,"endExpression":null,"value":null,"initialValue":null,"externalCall":null,"eventCall":null,"errorCall":null,"leftHandSide":{"nodeType":"IndexAccess","name":null,"src":"8946:18:0","memberName":null,"functionName":null,"AST":null,"nodes":null,"statements":null,"arguments":null,"declarations":null,"members":null,"components":null,"clauses":null,"options":null,"body":null,"trueBody":null,"falseBody":null,"expression":null,"condition":null,"initializationExpression":null,"leftExpression":null,"rightExpression":null,"subExpression":null,"trueExpression":null,"falseExpression":null,"loopExpression":null,"baseExpression":{"nodeType":"Identifier","name":"_balances","src":"8946:9:0","memberName":null,"functionName":null,"AST":null,"nodes":null,"statements":null,"arguments":null,"declarations":null,"members":null,"components":null,"clauses":null,"options":null,"body":null,"trueBody":null,"falseBody":null,"expression":null,"condition":null,"initializationExpression":null,"leftExpression":null,"rightExpression":null,"subExpression":null,"trueExpression":null,"falseExpression":null,"loopExpression":null,"baseExpression":null,"indexExpression":null,"startExpression":null,"endExpression":null,"value":null,"initialValue":null,"externalCall":null,"eventCall":null,"errorCall":null,"leftHandSide":null,"rightHandSide":null,"length":null},"indexExpression":{"nodeType":"Identifier","name":"account","src":"8956:7:0","memberName":null,"functionName":null,"AST":null,"nodes":null,"statements":null,"arguments":null,"declarations":null,"members":null,"components":null,"clauses":null,"options":null,"body":null,"trueBody":null,"falseBody":null,"expression":null,"condition":null,"initializationExpression":null,"leftExpression":null,"rightExpression":null,"subExpression":null,"trueExpression":null,"falseExpression":null,"loopExpression":null,"baseExpression":null,"indexExpression":null,"startExpression":null,"endExpression":null,"value":null,"initialValue":null,"externalCall":null,"eventCall":null,"errorCall":null,"leftHandSide":null,"rightHandSide":null,"length":null},"startExpression":null,"endExpression":null,"value":null,"initialValue":null,"externalCall":null,"eventCall":null,"errorCall":null,"leftHandSide":null,"rightHandSide":null,"length":null},"rightHandSide":{"nodeType":"Identifier","name":"amount","src":"8968:6:0","memberName":null,"functionName":null,"AST":null,"nodes":null,"statements":null,"arguments":null,"declarations":null,"members":null,"components":null,"clauses":null,"options":null,"body":null,"trueBody":null,"falseBody":null,"expression":null,"condition":null,"initializationExpression":null,"leftExpression":null,"rightExpression":null,"subExpression":null,"trueExpression":null,"falseExpression":null,"loopExpression":null,"baseExpression":null,"indexExpression":null,"startExpression":null,"endExpression":null,"value":null,"initialValue":null,"externalCall":null,"eventCall":null,"errorCall":null,"leftHandSide":null,"rightHandSide":null,"length":null},"length":null},"condition":null,"initializationExpression":null,"leftExpression":null,"rightExpression":null,"subExpression":null,"trueExpression":null,"falseExpression":null,"loopExpression":null,"baseExpression":null,"indexExpression":null,"startExpression":null,"endExpression":null,"value":null,"initialValue":null,"externalCall":null,"eventCall":null,"errorCall":null,"leftHandSide":null,"rightHandSide":null,"length":null}],"arguments":null,"declarations":null,"members":null,"components":null,"clauses":null,"options":null,"body":null,"trueBody":null,"falseBody":null,"expression":null,"condition":null,"initializationExpression":null,"leftExpression":null,"rightExpression":null,"subExpression":null,"trueExpression":null,"falseExpression":null,"loopExpression":null,"baseExpression":null,"indexExpression":null,"startExpression":null,"endExpression":null,"value":null,"initialValue":null,"externalCall":null,"eventCall":null,"errorCall":null,"leftHandSide":null,"rightHandSide":null,"length":null},{"nodeType":"EmitStatement","name":null,"src":"8994:42:0","memberName":null,"functionName":null,"AST":null,"nodes":null,"statements":null,"arguments":null,"declarations":null,"members":null,"components":null,"clauses":null,"options":null,"body":null,"trueBody":null,"falseBody":null,"expression":null,"condition":null,"initializationExpression":null,"leftExpression":null,"rightExpression":null,"subExpression":null,"trueExpression":null,"falseExpression":null,"loopExpression":null,"baseExpression":null,"indexExpression":null,"startExpression":null,"endExpression":null,"value":null,"initialValue":null,"externalCall":null,"eventCall":{"nodeType":"FunctionCall","name":null,"src":"8999:37:0","memberName":null,"functionName":null,"AST":null,"nodes":null,"statements":null,"arguments":[{"nodeType":"FunctionCall","name":null,"src":"9008:10:0","memberName":null,"functionName":null,"AST":null,"nodes":null,"statements":null,"arguments":[{"nodeType":"Literal","name":null,"src":"9016:1:0","memberName":null,"functionName":null,"AST":null,"nodes":null,"statements":null,"arguments":null,"declarations":null,"members":null,"components":null,"clauses":null,"options":null,"body":null,"trueBody":null,"falseBody":null,"expression":null,"condition":null,"initializationExpression":null,"leftExpression":null,"rightExpression":null,"subExpression":null,"trueExpression":null,"falseExpression":null,"loopExpression":null,"baseExpression":null,"indexExpression":null,"startExpression":null,"endExpression":null,"value":"0","initialValue":null,"externalCall":null,"eventCall":null,"errorCall":null,"leftHandSide":null,"rightHandSide":null,"length":null}],"declarations":null,"members":null,"components":null,"clauses":null,"options":null,"body":null,"trueBody":null,"falseBody":null,"expression":{"nodeType":"ElementaryTypeNameExpression","name":null,"src":"9008:7:0","memberName":null,"functionName":null,"AST":null,"nodes":null,"statements":null,"arguments":null,"declarations":null,"members":null,"components":null,"clauses":null,"options":null,"body":null,"trueBody":null,"falseBody":null,"expression":null,"condition":null,"initializationExpression":null,"leftExpression":null,"rightExpression":null,"subExpression":null,"trueExpression":null,"falseExpression":null,"loopExpression":null,"baseExpression":null,"indexExpression":null,"startExpression":null,"endExpression":null,"value":null,"initialValue":null,"externalCall":null,"eventCall":null,"errorCall":null,"leftHandSide":null,"rightHandSide":null,"length":null},"condition":null,"initializationExpression":null,"leftExpression":null,"rightExpression":null,"subExpression":null,"trueExpression":null,"falseExpression":null,"loopExpression":null,"baseExpression":null,"indexExpression":null,"startExpression":null,"endExpression":null,"value":null,"initialValue":null,"externalCall":null,"eventCall":null,"errorCall":null,"leftHandSide":null,"rightHandSide":null,"length":null},{"nodeType":"Identifier","name":"account","src":"9020:7:0","memberName":null,"functionName":null,"AST":null,"nodes":null,"statements":null,"arguments":null,"declarations":null,"members":null,"components":null,"clauses":null,"options":null,"body":null,"trueBody":null,"falseBody":null,"expression":null,"condition":null,"initializationExpression":null,"leftExpression":null,"rightExpression":null,"subExpression":null,"trueExpression":null,"falseExpression":null,"loopExpression":null,"baseExpression":null,"indexExpression":null,"startExpression":null,"endExpression":null,"value":null,"initialValue":null,"externalCall":null,"eventCall":null,"errorCall":null,"leftHandSide":null,"rightHandSide":null,"length":null},{"nodeType":"Identifier","name":"amount","src":"9029:6:0","memberName":null,"functionName":null,"AST":null,"nodes":null,"statements":null,"arguments":null,"declarations":null,"members":null,"components":null,"clauses":null,"options":null,"body":null,"trueBody":null,"falseBody":null,"expression":null,"condition":null,"initializationExpression":null,"leftExpression":null,"rightExpression":null,"subExpression":null,"trueExpression":null,"falseExpression":null,"loopExpression":null,"baseExpression":null,"indexExpression":null,"startExpression":null,"endExpression":null,"value":null,"initialValue":null,"externalCall":null,"eventCall":null,"errorCall":null,"leftHandSide":null,"rightHandSide":null,"length":null}],"declarations":null,"members":null,"components":null,"clauses":null,"options":null,"body":null,"trueBody":null,"falseBody":null,"expression":{"nodeType":"Identifier","name":"Transfer","src":"8999:8:0","memberName":null,"functionName":null,"AST":null,"nodes":null,"statements":null,"arguments":null,"declarations":null,"members":null,"components":null,"clauses":null,"options":null,"body":null,"trueBody":null,"falseBody":null,"expression":null,"condition":null,"initializationExpression":null,"leftExpression":null,"rightExpression":null,"subExpression":null,"trueExpression":null,"falseExpression":null,"loopExpression":null,"baseExpression":null,"indexExpression":null,"startExpression":null,"endExpression":null,"value":null,"initialValue":null,"externalCall":null,"eventCall":null,"errorCall":null,"leftHandSide":null,"rightHandSide":null,"length":null},"condition":null,"initializationExpression":null,"leftExpression":null,"rightExpression":null,"subExpression":null,"trueExpression":null,"falseExpression":null,"loopExpression":null,"baseExpression":null,"indexExpression":null,"startExpression":null,"endExpression":null,"value":null,"initialValue":null,"externalCall":null,"eventCall":null,"errorCall":null,"leftHandSide":null,"rightHandSide":null,"length":null},"errorCall":null,"leftHandSide":null,"rightHandSide":null,"length":null},{"nodeType":"ExpressionStatement","name":null,"src":"9047:48:0","memberName":null,"functionName":null,"AST":null,"nodes":null,"statements":null,"arguments":null,"declarations":null,"members":null,"components":null,"clauses":null,"options":null,"body":null,"trueBody":null,"falseBody":null,"expression":{"nodeType":"FunctionCall","name":null,"src":"9047:48:0","memberName":null,"functionName":null,"AST":null,"nodes":null,"statements":null,"arguments":[{"nodeType":"FunctionCall","name":null,"src":"9067:10:0","memberName":null,"functionName":null,"AST":null,"nodes":null,"statements":null,"arguments":[{"nodeType":"Literal","name":null,"src":"9075:1:0","memberName":null,"functionName":null,"AST":null,"nodes":null,"statements":null,"arguments":null,"declarations":null,"members":null,"components":null,"clauses":null,"options":null,"body":null,"trueBody":null,"falseBody":null,"expression":null,"condition":null,"initializationExpression":null,"leftExpression":null,"rightExpression":null,"subExpression":null,"trueExpression":null,"falseExpression":null,"loopExpression":null,"baseExpression":null,"indexExpression":null,"startExpression":null,"endExpression":null,"value":"0","initialValue":null,"externalCall":null,"eventCall":null,"errorCall":null,"leftHandSide":null,"rightHandSide":null,"length":null}],"declarations":null,"members":null,"components":null,"clauses":null,"options":null,"body":null,"trueBody":null,"falseBody":null,"expression":{"nodeType":"ElementaryTypeNameExpression","name":null,"src":"9067:7:0","memberName":null,"functionName":null,"AST":null,"nodes":null,"statements":null,"arguments":null,"declarations":null,"members":null,"components":null,"clauses":null,"options":null,"body":null,"trueBody":null,"falseBody":null,"expression":null,"condition":null,"initializationExpression":null,"leftExpression":null,"rightExpression":null,"subExpression":null,"trueExpression":null,"falseExpression":null,"loopExpression":null,"baseExpression":null,"indexExpression":null,"startExpression":null,"endExpression":null,"value":null,"initialValue":null,"externalCall":null,"eventCall":null,"errorCall":null,"leftHandSide":null,"rightHandSide":null,"length":null},"condition":null,"initializationExpression":null,"leftExpression":null,"rightExpression":null,"subExpression":null,"trueExpression":null,"falseExpression":null,"loopExpression":null,"baseExpression":null,"indexExpression":null,"startExpression":null,"endExpression":null,"value":null,"initialValue":null,"externalCall":null,"eventCall":null,"errorCall":null,"leftHandSide":null,"rightHandSide":null,"length":null},{"nodeType":"Identifier","name":"account","src":"9079:7:0","memberName":null,"functionName":null,"AST":null,"nodes":null,"statements":null,"arguments":null,"declarations":null,"members":null,"components":null,"clauses":null,"options":null,"body":null,"trueBody":null,"falseBody":null,"expression":null,"condition":null,"initializationExpression":null,"leftExpression":null,"rightExpression":null,"subExpression":null,"trueExpression":null,"falseExpression":null,"loopExpression":null,"baseExpression":null,"indexExpression":null,"startExpression":null,"endExpression":null,"value":null,"initialValue":null,"externalCall":null,"eventCall":null,"errorCall":null,"leftHandSide":null,"rightHandSide":null,"length":null},{"nodeType":"Identifier","name":"amount","src":"9088:6:0","memberName":null,"functionName":null,"AST":null,"nodes":null,"statements":null,"arguments":null,"declarations":null,"members":null,"components":null,"clauses":null,"options":null,"body":null,"trueBody":null,"falseBody":null,"expression":null,"condition":null,"initializationExpression":null,"leftExpression":null,"rightExpression":null,"subExpression":null,"trueExpression":null,"falseExpression":null,"loopExpression":null,"baseExpression":null,"indexExpression":null,"startExpression":null,"endExpression":null,"value":null,"initialValue":null,"externalCall":null,"eventCall":null,"errorCall":null,"leftHandSide":null,"rightHandSide":null,"length":null}],"declarations":null,"members":null,"components":null,"clauses":null,"options":null,"body":null,"trueBody":null,"falseBody":null,"expression":{"nodeType":"Identifier","name":"_afterTokenTransfer","src":"9047:19:0","memberName":null,"functionName":null,"AST":null,"nodes":null,"statements":null,"arguments":null,"declarations":null,"members":null,"components":null,"clauses":null,"options":null,"body":null,"trueBody":null,"falseBody":null,"expression":null,"condition":null,"initializationExpression":null,"leftExpression":null,"rightExpression":null,"subExpression":null,"trueExpression":null,"falseExpression":null,"loopExpression":null,"baseExpression":null,"indexExpression":null,"startExpression":null,"endExpression":null,"value":null,"initialValue":null,"externalCall":null,"eventCall":null,"errorCall":null,"leftHandSide":null,"rightHandSide":null,"length":null},"condition":null,"initializationExpression":null,"leftExpression":null,"rightExpression":null,"subExpression":null,"trueExpression":null,"falseExpression":null,"loopExpression":null,"baseExpression":null,"indexExpression":null,"startExpression":null,"endExpression":null,"value":null,"initialValue":null,"externalCall":null,"eventCall":null,"errorCall":null,"leftHandSide":null,"rightHandSide":null,"length":null},"condition":null,"initializationExpression":null,"leftExpression":null,"rightExpression":null,"subExpression":null,"trueExpression":null,"falseExpression":null,"loopExpression":null,"baseExpression":null,"indexExpression":null,"startExpression":null,"endExpression":null,"value":null,"initialValue":null,"externalCall":null,"eventCall":null,"errorCall":null,"leftHandSide":null,"rightHandSide":null,"length":null}],"arguments":null,"declarations":null,"members":null,"components":null,"clauses":null,"options":null,"body":null,"trueBody":null,"falseBody":null,"expression":null,"condition":null,"initializationExpression":null,"leftExpression":null,"rightExpression":null,"subExpression":null,"trueExpression":null,"falseExpression":null,"loopExpression":null,"baseExpression":null,"indexExpression":null,"startExpression":null,"endExpression":null,"value":null,"initialValue":null,"externalCall":null,"eventCall":null,"errorCall":null,"leftHandSide":null,"rightHandSide":null,"length":null},"trueBody":null,"falseBody":null,"expression":null,"condition":null,"initializationExpression":null,"leftExpression":null,"rightExpression":null,"subExpression":null,"trueExpression":null,"falseExpression":null,"loopExpression":null,"baseExpression":null,"indexExpression":null,"startExpression":null,"endExpression":null,"value":null,"initialValue":null,"externalCall":null,"eventCall":null,"errorCall":null,"leftHandSide":null,"rightHandSide":null,"length":null},{"nodeType":"FunctionDefinition","name":"_burn","src":"9422:659:0","memberName":null,"functionName":null,"AST":null,"nodes":null,"statements":null,"arguments":null,"declarations":null,"members":null,"components":null,"clauses":null,"options":null,"body":{"nodeType":"Block","name":null,"src":"9487:594:0","memberName":null,"functionName":null,"AST":null,"nodes":null,"statements":[{"nodeType":"ExpressionStatement","name":null,"src":"9497:67:0","memberName":null,"functionName":null,"AST":null,"nodes":null,"statements":null,"arguments":null,"declarations":null,"members":null,"components":null,"clauses":null,"options":null,"body":null,"trueBody":null,"falseBody":null,"expression":{"nodeType":"FunctionCall","name":null,"src":"9497:67:0","memberName":null,"functionName":null,"AST":null,"nodes":null,"statements":null,"arguments":[{"nodeType":"BinaryOperation","name":null,"src":"9505:21:0","memberName":null,"functionName":null,"AST":null,"nodes":null,"statements":null,"arguments":null,"declarations":null,"members":null,"components":null,"clauses":null,"options":null,"body":null,"trueBody":null,"falseBody":null,"expression":null,"condition":null,"initializationExpression":null,"leftExpression":{"nodeType":"Identifier","name":"account","src":"9505:7:0","memberName":null,"functionName":null,"AST":null,"nodes":null,"statements":null,"arguments":null,"declarations":null,"members":null,"components":null,"clauses":null,"options":null,"body":null,"trueBody":null,"falseBody":null,"expression":null,"condition":null,"initializationExpression":null,"leftExpression":null,"rightExpression":null,"subExpression":null,"trueExpression":null,"falseExpression":null,"loopExpression":null,"baseExpression":null,"indexExpression":null,"startExpression":null,"endExpression":null,"value":null,"initialValue":null,"externalCall":null,"eventCall":null,"errorCall":null,"leftHandSide":null,"rightHandSide":null,"length":null},"rightExpression":{"nodeType":"FunctionCall","name":null,"src":"9516:10:0","memberName":null,"functionName":null,"AST":null,"nodes":null,"statements":null,"arguments":[{"nodeType":"Literal","name":null,"src":"9524:1:0","memberName":null,"functionName":null,"AST":null,"nodes":null,"statements":null,"arguments":null,"declarations":null,"members":null,"components":null,"clauses":null,"options":null,"body":null,"trueBody":null,"falseBody":null,"expression":null,"condition":null,"initializationExpression":null,"leftExpression":null,"rightExpression":null,"subExpression":null,"trueExpression":null,"falseExpression":null,"loopExpression":null,"baseExpression":null,"indexExpression":null,"startExpression":null,"endExpression":null,"value":"0","initialValue":null,"externalCall":null,"eventCall":null,"errorCall":null,"leftHandSide":null,"rightHandSide":null,"length":null}],"declarations":null,"members":null,"components":null,"clauses":null,"options":null,"body":null,"trueBody":null,"falseBody":null,"expression":{"nodeType":"ElementaryTypeNameExpression","name":null,"src":"9516:7:0","memberName":null,"functionName":null,"AST":null,"nodes":null,"statements":null,"arguments":null,"declarations":null,"members":null,"components":null,"clauses":null,"options":null,"body":null,"trueBody":null,"falseBody":null,"expression":null,"condition":null,"initializationExpression":null,"leftExpression":null,"rightExpression":null,"subExpression":null,"trueExpression":null,"falseExpression":null,"loopExpression":null,"baseExpression":null,"indexExpression":null,"startExpression":null,"endExpression":null,"value":null,"initialValue":null,"externalCall":null,"eventCall":null,"errorCall":null,"leftHandSide":null,"rightHandSide":null,"length":null},"condition":null,"initializationExpression":null,"leftExpression":null,"rightExpression":null,"subExpression":null,"trueExpression":null,"falseExpression":null,"loopExpression":null,"baseExpression":null,"indexExpression":null,"startExpression":null,"endExpression":null,"value":null,"initialValue":null,"externalCall":null,"eventCall":null,"errorCall":null,"leftHandSide":null,"rightHandSide":null,"length":null},"subExpression":null,"trueExpression":null,"falseExpression":null,"loopExpression":null,"baseExpression":null,"indexExpression":null,"startExpression":null,"endExpression":null,"value":null,"initialValue":null,"externalCall":null,"eventCall":null,"errorCall":null,"leftHandSide":null,"rightHandSide":null,"length":null},{"nodeType":"Literal","name":null,"src":"9528:35:0","memberName":null,"functionName":null,"AST":null,"nodes":null,"statements":null,"arguments":null,"declarations":null,"members":null,"components":null,"clauses":null,"options":null,"body":null,"trueBody":null,"falseBody":null,"expression":null,"condition":null,"initializationExpression":null,"leftExpression":null,"rightExpression":null,"subExpression":null,"trueExpression":null,"falseExpression":null,"loopExpression":null,"baseExpression":null,"indexExpression":null,"startExpression":null,"endExpression":null,"value":"ERC20: burn from the zero address","initialValue":null,"externalCall":null,"eventCall":null,"errorCall":null,"leftHandSide":null,"rightHandSide":null,"length":null}],"declarations":null,"members":null,"components":null,"clauses":null,"options":null,"body":null,"trueBody":null,"falseBody":null,"expression":{"nodeType":"Identifier","name":"require","src":"9497:7:0","memberName":null,"functionName":null,"AST":null,"nodes":null,"statements":null,"arguments":null,"declarations":null,"members":null,"components":null,"clauses":null,"options":null,"body":null,"trueBody":null,"falseBody":null,"expression":null,"condition":null,"initializationExpression":null,"leftExpression":null,"rightExpression":null,"subExpression":null,"trueExpression":null,"falseExpression":null,"loopExpression":null,"baseExpression":null,"indexExpression":null,"startExpression":null,"endExpression":null,"value":null,"initialValue":null,"externalCall":null,"eventCall":null,"errorCall":null,"leftHandSide":null,"rightHandSide":null,"length":null},"condition":null,"initializationExpression":null,"leftExpression":null,"rightExpression":null,"subExpression":null,"trueExpression":null,"falseExpression":null,"loopExpression":null,"baseExpression":null,"indexExpression":null,"startExpression":null,"endExpression":null,"value":null,"initialValue":null,"externalCall":null,"eventCall":null,"errorCall":null,"leftHandSide":null,"rightHandSide":null,"length":null},"condition":null,"initializationExpression":null,"leftExpression":null,"rightExpression":null,"subExpression":null,"trueExpression":null,"falseExpression":null,"loopExpression":null,"baseExpression":null,"indexExpression":null,"startExpression":null,"endExpression":null,"value":null,"initialValue":null,"externalCall":null,"eventCall":null,"errorCall":null,"leftHandSide":null,"rightHandSide":null,"length":null},{"nodeType":"ExpressionStatement","name":null,"src":"9575:49:0","memberName":null,"functionName":null,"AST":null,"nodes":null,"statements":null,"arguments":null,"declarations":null,"members":null,"components":null,"clauses":null,"options":null,"body":null,"trueBody":null,"falseBody":null,"expression":{"nodeType":"FunctionCall","name":null,"src":"9575:49:0","memberName":null,"functionName":null,"AST":null,"nodes":null,"statements":null,"arguments":[{"nodeType":"Identifier","name":"account","src":"9596:7:0","memberName":null,"functionName":null,"AST":null,"nodes":null,"statements":null,"arguments":null,"declarations":null,"members":null,"components":null,"clauses":null,"options":null,"body":null,"trueBody":null,"falseBody":null,"expression":null,"condition":null,"initializationExpression":null,"leftExpression":null,"rightExpression":null,"subExpression":null,"trueExpression":null,"falseExpression":null,"loopExpression":null,"baseExpression":null,"indexExpression":null,"startExpression":null,"endExpression":null,"value":null,"initialValue":null,"externalCall":null,"eventCall":null,"errorCall":null,"leftHandSide":null,"rightHandSide":null,"length":null},{"nodeType":"FunctionCall","name":null,"src":"9605:10:0","memberName":null,"functionName":null,"AST":null,"nodes":null,"statements":null,"arguments":[{"nodeType":"Literal","name":null,"src":"9613:1:0","memberName":null,"functionName":null,"AST":null,"nodes":null,"statements":null,"arguments":null,"declarations":null,"members":null,"components":null,"clauses":null,"options":null,"body":null,"trueBody":null,"falseBody":null,"expression":null,"condition":null,"initializationExpression":null,"leftExpression":null,"rightExpression":null,"subExpression":null,"trueExpression":null,"falseExpression":null,"loopExpression":null,"baseExpression":null,"indexExpression":null,"startExpression":null,"endExpression":null,"value":"0","initialValue":null,"externalCall":null,"eventCall":null,"errorCall":null,"leftHandSide":null,"rightHandSide":null,"length":null}],"declarations":null,"members":null,"components":null,"clauses":null,"options":null,"body":null,"trueBody":null,"falseBody":null,"expression":{"nodeType":"ElementaryTypeNameExpression","name":null,"src":"9605:7:0","memberName":null,"functionName":null,"AST":null,"nodes":null,"statements":null,"arguments":null,"declarations":null,"members":null,"components":null,"clauses":null,"options":null,"body":null,"trueBody":null,"falseBody":null,"expression":null,"condition":null,"initializationExpression":null,"leftExpression":null,"rightExpression":null,"subExpression":null,"trueExpression":null,"falseExpression":null,"loopExpression":null,"baseExpression":null,"indexExpression":null,"startExpression":null,"endExpression":null,"value":null,"initialValue":null,"externalCall":null,"eventCall":null,"errorCall":null,"leftHandSide":null,"rightHandSide":null,"length":null},"condition":null,"initializationExpression":null,"leftExpression":null,"rightExpression":null,"subExpression":null,"trueExpression":null,"falseExpression":null,"loopExpression":null,"baseExpression":null,"indexExpression":null,"startExpression":null,"endExpression":null,"value":null,"initialValue":null,"externalCall":null,"eventCall":null,"errorCall":null,"leftHandSide":null,"rightHandSide":null,"length":null},{"nodeType":"Identifier","name":"amount","src":"9617:6:0","memberName":null,"functionName":null,"AST":null,"nodes":null,"statements":null,"arguments":null,"declarations":null,"members":null,"components":null,"clauses":null,"options":null,"body":null,"trueBody":null,"falseBody":null,"expression":null,"condition":null,"initializationExpression":null,"leftExpression":null,"rightExpression":null,"subExpression":null,"trueExpression":null,"falseExpression":null,"loopExpression":null,"baseExpression":null,"indexExpression":null,"startExpression":null,"endExpression":null,"value":null,"initialValue":null,"externalCall":null,"eventCall":null,"errorCall":null,"leftHandSide":null,"rightHandSide":null,"length":null}],"declarations":null,"members":null,"components":null,"clauses":null,"options":null,"body":null,"trueBody":null,"falseBody":null,"expression":{"nodeType":"Identifier","name":"_beforeTokenTransfer","src":"9575:20:0","memberName":null,"functionName":null,"AST":null,"nodes":null,"statements":null,"arguments":null,"declarations":null,"members":null,"components":null,"clauses":null,"options":null,"body":null,"trueBody":null,"falseBody":null,"expression":null,"condition":null,"initializationExpression":null,"leftExpression":null,"rightExpression":null,"subExpression":null,"trueExpression":null,"falseExpression":null,"loopExpression":null,"baseExpression":null,"indexExpression":null,"startExpression":null,"endExpression":null,"value":null,"initialValue":null,"externalCall":null,"eventCall":null,"errorCall":null,"leftHandSide":null,"rightHandSide":null,"length":null},"condition":null,"initializationExpression":null,"leftExpression":null,"rightExpression":null,"subExpression":null,"trueExpression":null,"falseExpression":null,"loopExpression":null,"baseExpression":null,"indexExpression":null,"startExpression":null,"endExpression":null,"value":null,"initialValue":null,"externalCall":null,"eventCall":null,"errorCall":null,"leftHandSide":null,"rightHandSide":null,"length":null},"condition":null,"initializationExpression":null,"leftExpression":null,"rightExpression":null,"subExpression":null,"trueExpression":null,"falseExpression":null,"loopExpression":null,"baseExpression":null,"indexExpression":null,"startExpression":null,"endExpression":null,"value":null,"initialValue":null,"externalCall":null,"eventCall":null,"errorCall":null,"leftHandSide":null,"rightHandSide":null,"length":null},{"nodeType":"VariableDeclarationStatement","name":null,"src":"9635:43:0","memberName":null,"functionName":null,"AST":null,"nodes":null,"statements":null,"arguments":null,"declarations":[{"nodeType":"VariableDeclaration","name":"accountBalance","src":"9635:22:0","memberName":null,"functionName":null,"AST":null,"nodes":null,"statements":null,"arguments":null,"declarations":null,"members":null,"components":null,"clauses":null,"options":null,"body":null,"trueBody":null,"falseBody":null,"expression":null,"condition":null,"initializationExpression":null,"leftExpression":null,"rightExpression":null,"subExpression":null,"trueExpression":null,"falseExpression":null,"loopExpression":null,"baseExpression":null,"indexExpression":null,"startExpression":null,"endExpression":null,"value":null,"initialValue":null,"externalCall":null,"eventCall":null,"errorCall":null,"leftHandSide":null,"rightHandSide":null,"length":null}],"members":null,"components":null,"clauses":null,"options":null,"body":null,"trueBody":null,"falseBody":null,"expression":null,"condition":null,"initializationExpression":null,"leftExpression":null,"rightExpression":null,"subExpression":null,"trueExpression":null,"falseExpression":null,"loopExpression":null,"baseExpression":null,"indexExpression":null,"startExpression":null,"endExpression":null,"value":null,"initialValue":{"nodeType":"IndexAccess","name":null,"src":"9660:18:0","memberName":null,"functionName":null,"AST":null,"nodes":null,"statements":null,"arguments":null,"declarations":null,"members":null,"components":null,"clauses":null,"options":null,"body":null,"trueBody":null,"falseBody":null,"expression":null,"condition":null,"initializationExpression":null,"leftExpression":null,"rightExpression":null,"subExpression":null,"trueExpression":null,"falseExpression":null,"loopExpression":null,"baseExpression":{"nodeType":"Identifier","name":"_balances","src":"9660:9:0","memberName":null,"functionName":null,"AST":null,"nodes":null,"statements":null,"arguments":null,"declarations":null,"members":null,"components":null,"clauses":null,"options":null,"body":null,"trueBody":null,"falseBody":null,"expression":null,"condition":null,"initializationExpression":null,"leftExpression":null,"rightExpression":null,"subExpression":null,"trueExpression":null,"falseExpression":null,"loopExpression":null,"baseExpression":null,"indexExpression":null,"startExpression":null,"endExpression":null,"value":null,"initialValue":null,"externalCall":null,"eventCall":null,"errorCall":null,"leftHandSide":null,"rightHandSide":null,"length":null},"indexExpression":{"nodeType":"Identifier","name":"account","src":"9670:7:0","memberName":null,"functionName":null,"AST":null,"nodes":null,"statements":null,"arguments":null,"declarations":null,"members":null,"components":null,"clauses":null,"options":null,"body":null,"trueBody":null,"falseBody":null,"expression":null,"condition":null,"initializationExpression":null,"leftExpression":null,"rightExpression":null,"subExpression":null,"trueExpression":null,"falseExpression":null,"loopExpression":null,"baseExpression":null,"indexExpression":null,"startExpression":null,"endExpression":null,"value":null,"initialValue":null,"externalCall":null,"eventCall":null,"errorCall":null,"leftHandSide":null,"rightHandSide":null,"length":null},"startExpression":null,"endExpression":null,"value":null,"initialValue":null,"externalCall":null,"eventCall":null,"errorCall":null,"leftHandSide":null,"rightHandSide":null,"length":null},"externalCall":null,"eventCall":null,"errorCall":null,"leftHandSide":null,"rightHandSide":null,"length":null},{"nodeType":"ExpressionStatement","name":null,"src":"9688:71:0","memberName":null,"functionName":null,"AST":null,"nodes":null,"statements":null,"arguments":null,"declarations":null,"members":null,"components":null,"clauses":null,"options":null,"body":null,"trueBody":null,"falseBody":null,"expression":{"nodeType":"FunctionCall","name":null,"src":"9688:71:0","memberName":null,"functionName":null,"AST":null,"nodes":null,"statements":null,"arguments":[{"nodeType":"BinaryOperation","name":null,"src":"9696:24:0","memberName":null,"functionName":null,"AST":null,"nodes":null,"statements":null,"arguments":null,"declarations":null,"members":null,"components":null,"clauses":null,"options":null,"body":null,"trueBody":null,"falseBody":null,"expression":null,"condition":null,"initializationExpression":null,"leftExpression":{"nodeType":"Identifier","name":"accountBalance","src":"9696:14:0","memberName":null,"functionName":null,"AST":null,"nodes":null,"statements":null,"arguments":null,"declarations":null,"members":null,"components":null,"clauses":null,"options":null,"body":null,"trueBody":null,"falseBody":null,"expression":null,"condition":null,"initializationExpression":null,"leftExpression":null,"rightExpression":null,"subExpression":null,"trueExpression":null,"falseExpression":null,"loopExpression":null,"baseExpression":null,"indexExpression":null,"startExpression":null,"endExpression":null,"value":null,"initialValue":null,"externalCall":null,"eventCall":null,"errorCall":null,"leftHandSide":null,"rightHandSide":null,"length":null},"rightExpression":{"nodeType":"Identifier","name":"amount","src":"9714:6:0","memberName":null,"functionName":null,"AST":null,"nodes":null,"statements":null,"arguments":null,"declarations":null,"members":null,"components":null,"clauses":null,"options":null,"body":null,"trueBody":null,"falseBody":null,"expression":null,"condition":null,"initializationExpression":null,"leftExpression":null,"rightExpression":null,"subExpression":null,"trueExpression":null,"falseExpression":null,"loopExpression":null,"baseExpression":null,"indexExpression":null,"startExpression":null,"endExpression":null,"value":null,"initialValue":null,"externalCall":null,"eventCall":null,"errorCall":null,"leftHandSide":null,"rightHandSide":null,"length":null},"subExpression":null,"trueExpression":null,"falseExpression":null,"loopExpression":null,"baseExpression":null,"indexExpression":null,"startExpression":null,"endExpression":null,"value":null,"initialValue":null,"externalCall":null,"eventCall":null,"errorCall":null,"leftHandSide":null,"rightHandSide":null,"length":null},{"nodeType":"Literal","name":null,"src":"9722:36:0","memberName":null,"functionName":null,"AST":null,"nodes":null,"statements":null,"arguments":null,"declarations":null,"members":null,"components":null,"clauses":null,"options":null,"body":null,"trueBody":null,"falseBody":null,"expression":null,"condition":null,"initializationExpression":null,"leftExpression":null,"rightExpression":null,"subExpression":null,"trueExpression":null,"falseExpression":null,"loopExpression":null,"baseExpression":null,"indexExpression":null,"startExpression":null,"endExpression":null,"value":"ERC20: burn amount exceeds balance","initialValue":null,"externalCall":null,"eventCall":null,"errorCall":null,"leftHandSide":null,"rightHandSide":null,"length":null}],"declarations":null,"members":null,"components":null,"clauses":null,"options":null,"body":null,"trueBody":null,"falseBody":null,"expression":{"nodeType":"Identifier","name":"require","src":"9688:7:0","memberName":null,"functionName":null,"AST":null,"nodes":null,"statements":null,"arguments":null,"declarations":null,"members":null,"components":null,"clauses":null,"options":null,"body":null,"trueBody":null,"falseBody":null,"expression":null,"condition":null,"initializationExpression":null,"leftExpression":null,"rightExpression":null,"subExpression":null,"trueExpression":null,"falseExpression":null,"loopExpression":null,"baseExpression":null,"indexExpression":null,"startExpression":null,"endExpression":null,"value":null,"initialValue":null,"externalCall":null,"eventCall":null,"errorCall":null,"leftHandSide":null,"rightHandSide":null,"length":null},"condition":null,"initializationExpression":null,"leftExpression":null,"rightExpression":null,"subExpression":null,"trueExpression":null,"falseExpression":null,"loopExpression":null,"baseExpression":null,"indexExpression":null,"startExpression":null,"endExpression":null,"value":null,"initialValue":null,"externalCall":null,"eventCall":null,"errorCall":null,"leftHandSide":null,"rightHandSide":null,"length":null},"condition":null,"initializationExpression":null,"leftExpression":null,"rightExpression":null,"subExpression":null,"trueExpression":null,"falseExpression":null,"loopExpression":null,"baseExpression":null,"indexExpression":null,"startExpression":null,"endExpression":null,"value":null,"initialValue":null,"externalCall":null,"eventCall":null,"errorCall":null,"leftHandSide":null,"rightHandSide":null,"length":null},{"nodeType":"UncheckedBlock","name":null,"src":"9769:194:0","memberName":null,"functionName":null,"AST":null,"nodes":null,"statements":[{"nodeType":"ExpressionStatement","name":null,"src":"9793:44:0","memberName":null,"functionName":null,"AST":null,"nodes":null,"statements":null,"arguments":null,"declarations":null,"members":null,"components":null,"clauses":null,"options":null,"body":null,"trueBody":null,"falseBody":null,"expression":{"nodeType":"Assignment","name":null,"src":"9793:44:0","memberName":null,"functionName":null,"AST":null,"nodes":null,"statements":null,"arguments":null,"declarations":null,"members":null,"components":null,"clauses":null,"options":null,"body":null,"trueBody":null,"falseBody":null,"expression":null,"condition":null,"initializationExpression":null,"leftExpression":null,"rightExpression":null,"subExpression":null,"trueExpression":null,"falseExpression":null,"loopExpression":null,"baseExpression":null,"indexExpression":null,"startExpression":null,"endExpression":null,"value":null,"initialValue":null,"externalCall":null,"eventCall":null,"errorCall":null,"leftHandSide":{"nodeType":"IndexAccess","name":null,"src":"9793:18:0","memberName":null,"functionName":null,"AST":null,"nodes":null,"statements":null,"arguments":null,"declarations":null,"members":null,"components":null,"clauses":null,"options":null,"body":null,"trueBody":null,"falseBody":null,"expression":null,"condition":null,"initializationExpression":null,"leftExpression":null,"rightExpression":null,"subExpression":null,"trueExpression":null,"falseExpression":null,"loopExpression":null,"baseExpression":{"nodeType":"Identifier","name":"_balances","src":"9793:9:0","memberName":null,"functionName":null,"AST":null,"nodes":null,"statements":null,"arguments":null,"declarations":null,"members":null,"components":null,"clauses":null,"options":null,"body":null,"trueBody":null,"falseBody":null,"expression":null,"condition":null,"initializationExpression":null,"leftExpression":null,"rightExpression":null,"subExpression":null,"trueExpression":null,"falseExpression":null,"loopExpression":null,"baseExpression":null,"indexExpression":null,"startExpression":null,"endExpression":null,"value":null,"initialValue":null,"externalCall":null,"eventCall":null,"errorCall":null,"leftHandSide":null,"rightHandSide":null,"length":null},"indexExpression":{"nodeType":"Identifier","name":"account","src":"9803:7:0","memberName":null,"functionName":null,"AST":null,"nodes":null,"statements":null,"arguments":null,"declarations":null,"members":null,"components":null,"clauses":null,"options":null,"body":null,"trueBody":null,"falseBody":null,"expression":null,"condition":null,"initializationExpression":null,"leftExpression":null,"rightExpression":null,"subExpression":null,"trueExpression":null,"falseExpression":null,"loopExpression":null,"baseExpression":null,"indexExpression":null,"startExpression":null,"endExpression":null,"value":null,"initialValue":null,"externalCall":null,"eventCall":null,"errorCall":null,"leftHandSide":null,"rightHandSide":null,"length":null},"startExpression":null,"endExpression":null,"value":null,"initialValue":null,"externalCall":null,"eventCall":null,"errorCall":null,"leftHandSide":null,"rightHandSide":null,"length":null},"rightHandSide":{"nodeType":"BinaryOperation","name":null,"src":"9814:23:0","memberName":null,"functionName":null,"AST":null,"nodes":null,"statements":null,"arguments":null,"declarations":null,"members":null,"components":null,"clauses":null,"options":null,"body":null,"trueBody":null,"falseBody":null,"expression":null,"condition":null,"initializationExpression":null,"leftExpression":{"nodeType":"Identifier","name":"accountBalance","src":"9814:14:0","memberName":null,"functionName":null,"AST":null,"nodes":null,"statements":null,"arguments":null,"declarations":null,"members":null,"components":null,"clauses":null,"options":null,"body":null,"trueBody":null,"falseBody":null,"expression":null,"condition":null,"initializationExpression":null,"leftExpression":null,"rightExpression":null,"subExpression":null,"trueExpression":null,"falseExpression":null,"loopExpression":null,"baseExpression":null,"indexExpression":null,"startExpression":null,"endExpression":null,"value":null,"initialValue":null,"externalCall":null,"eventCall":null,"errorCall":null,"leftHandSide":null,"rightHandSide":null,"length":null},"rightExpression":{"nodeType":"Identifier","name":"amount","src":"9831:6:0","memberName":null,"functionName":null,"AST":null,"nodes":null,"statements":null,"arguments":null,"declarations":null,"members":null,"components":null,"clauses":null,"options":null,"body":null,"trueBody":null,"falseBody":null,"expression":null,"condition":null,"initializationExpression":null,"leftExpression":null,"rightExpression":null,"subExpression":null,"trueExpression":null,"falseExpression":null,"loopExpression":null,"baseExpression":null,"indexExpression":null,"startExpression":null,"endExpression":null,"value":null,"initialValue":null,"externalCall":null,"eventCall":null,"errorCall":null,"leftHandSide":null,"rightHandSide":null,"length":null},"subExpression":null,"trueExpression":null,"falseExpression":null,"loopExpression":null,"baseExpression":null,"indexExpression":null,"startExpression":null,"endExpression":null,"value":null,"initialValue":null,"externalCall":null,"eventCall":null,"errorCall":null,"leftHandSide":null,"rightHandSide":null,"length":null},"length":null},"condition":null,"initializationExpression":null,"leftExpression":null,"rightExpression":null,"subExpression":null,"trueExpression":null,"falseExpression":null,"loopExpression":null,"baseExpression":null,"indexExpression":null,"startExpression":null,"endExpression":null,"value":null,"initialValue":null,"externalCall":null,"eventCall":null,"errorCall":null,"leftHandSide":null,"rightHandSide":null,"length":null},{"nodeType":"ExpressionStatement","name":null,"src":"9930:22:0","memberName":null,"functionName":null,"AST":null,"nodes":null,"statements":null,"arguments":null,"declarations":null,"members":null,"components":null,"clauses":null,"options":null,"body":null,"trueBody":null,"falseBody":null,"expression":{"nodeType":"Assignment","name":null,"src":"9930:22:0","memberName":null,"functionName":null,"AST":null,"nodes":null,"statements":null,"arguments":null,"declarations":null,"members":null,"components":null,"clauses":null,"options":null,"body":null,"trueBody":null,"falseBody":null,"expression":null,"condition":null,"initializationExpression":null,"leftExpression":null,"rightExpression":null,"subExpression":null,"trueExpression":null,"falseExpression":null,"loopExpression":null,"baseExpression":null,"indexExpression":null,"startExpression":null,"endExpression":null,"value":null,"initialValue":null,"externalCall":null,"eventCall":null,"errorCall":null,"leftHandSide":{"nodeType":"Identifier","name":"_totalSupply","src":"9930:12:0","memberName":null,"functionName":null,"AST":null,"nodes":null,"statements":null,"arguments":null,"declarations":null,"members":null,"components":null,"clauses":null,"options":null,"body":null,"trueBody":null,"falseBody":null,"expression":null,"condition":null,"initializationExpression":null,"leftExpression":null,"rightExpression":null,"subExpression":null,"trueExpression":null,"falseExpression":null,"loopExpression":null,"baseExpression":null,"indexExpression":null,"startExpression":null,"endExpression":null,"value":null,"initialValue":null,"externalCall":null,"eventCall":null,"errorCall":null,"leftHandSide":null,"rightHandSide":null,"length":null},"rightHandSide":{"nodeType":"Identifier","name":"amount","src":"9946:6:0","memberName":null,"functionName":null,"AST":null,"nodes":null,"statements":null,"arguments":null,"declarations":null,"members":null,"components":null,"clauses":null,"options":null,"body":null,"trueBody":null,"falseBody":null,"expression":null,"condition":null,"initializationExpression":null,"leftExpression":null,"rightExpression":null,"subExpression":null,"trueExpression":null,"falseExpression":null,"loopExpression":null,"baseExpression":null,"indexExpression":null,"startExpression":null,"endExpression":null,"value":null,"initialValue":null,"externalCall":null,"eventCall":null,"errorCall":null,"leftHandSide":null,"rightHandSide":null,"length":null},"length":null},"condition":null,"initializationExpression":null,"leftExpression":null,"rightExpression":null,"subExpression":null,"trueExpression":null,"falseExpression":null,"loopExpression":null,"baseExpression":null,"indexExpression":null,"startExpression":null,"endExpression":null,"value":null,"initialValue":null,"externalCall":null,"eventCall":null,"errorCall":null,"leftHandSide":null,"rightHandSide":null,"length":null}],"arguments":null,"declarations":null,"members":null,"components":null,"clauses":null,"options":null,"body":null,"trueBody":null,"falseBody":null,"expression":null,"condition":null,"initializationExpression":null,"leftExpression":null,"rightExpression":null,"subExpression":null,"trueExpression":null,"falseExpression":null,"loopExpression":null,"baseExpression":null,"indexExpression":null,"startExpression":null,"endExpression":null,"value":null,"initialValue":null,"externalCall":null,"eventCall":null,"errorCall":null,"leftHandSide":null,"rightHandSide":null,"length":null},{"nodeType":"EmitStatement","name":null,"src":"9973:42:0","memberName":null,"functionName":null,"AST":null,"nodes":null,"statements":null,"arguments":null,"declarations":null,"members":null,"components":null,"clauses":null,"options":null,"body":null,"trueBody":null,"falseBody":null,"expression":null,"condition":null,"initializationExpression":null,"leftExpression":null,"rightExpression":null,"subExpression":null,"trueExpression":null,"falseExpression":null,"loopExpression":null,"baseExpression":null,"indexExpression":null,"startExpression":null,"endExpression":null,"value":null,"initialValue":null,"externalCall":null,"eventCall":{"nodeType":"FunctionCall","name":null,"src":"9978:37:0","memberName":null,"functionName":null,"AST":null,"nodes":null,"statements":null,"arguments":[{"nodeType":"Identifier","name":"account","src":"9987:7:0","memberName":null,"functionName":null,"AST":null,"nodes":null,"statements":null,"arguments":null,"declarations":null,"members":null,"components":null,"clauses":null,"options":null,"body":null,"trueBody":null,"falseBody":null,"expression":null,"condition":null,"initializationExpression":null,"leftExpression":null,"rightExpression":null,"subExpression":null,"trueExpression":null,"falseExpression":null,"loopExpression":null,"baseExpression":null,"indexExpression":null,"startExpression":null,"endExpression":null,"value":null,"initialValue":null,"externalCall":null,"eventCall":null,"errorCall":null,"leftHandSide":null,"rightHandSide":null,"length":null},{"nodeType":"FunctionCall","name":null,"src":"9996:10:0","memberName":null,"functionName":null,"AST":null,"nodes":null,"statements":null,"arguments":[{"nodeType":"Literal","name":null,"src":"10004:1:0","memberName":null,"functionName":null,"AST":null,"nodes":null,"statements":null,"arguments":null,"declarations":null,"members":null,"components":null,"clauses":null,"options":null,"body":null,"trueBody":null,"falseBody":null,"expression":null,"condition":null,"initializationExpression":null,"leftExpression":null,"rightExpression":null,"subExpression":null,"trueExpression":null,"falseExpression":null,"loopExpression":null,"baseExpression":null,"indexExpression":null,"startExpression":null,"endExpression":null,"value":"0","initialValue":null,"externalCall":null,"eventCall":null,"errorCall":null,"leftHandSide":null,"rightHandSide":null,"length":null}],"declarations":null,"members":null,"components":null,"clauses":null,"options":null,"body":null,"trueBody":null,"falseBody":null,"expression":{"nodeType":"ElementaryTypeNameExpression","name":null,"src":"9996:7:0","memberName":null,"functionName":null,"AST":null,"nodes":null,"statements":null,"arguments":null,"declarations":null,"members":null,"components":null,"clauses":null,"options":null,"body":null,"trueBody":null,"falseBody":null,"expression":null,"condition":null,"initializationExpression":null,"leftExpression":null,"rightExpression":null,"subExpression":null,"trueExpression":null,"falseExpression":null,"loopExpression":null,"baseExpression":null,"indexExpression":null,"startExpression":null,"endExpression":null,"value":null,"initialValue":null,"externalCall":null,"eventCall":null,"errorCall":null,"leftHandSide":null,"rightHandSide":null,"length":null},"condition":null,"initializationExpression":null,"leftExpression":null,"rightExpression":null,"subExpression":null,"trueExpression":null,"falseExpression":null,"loopExpression":null,"baseExpression":null,"indexExpression":null,"startExpression":null,"endExpression":null,"value":null,"initialValue":null,"externalCall":null,"eventCall":null,"errorCall":null,"leftHandSide":null,"rightHandSide":null,"length":null},{"nodeType":"Identifier","name":"amount","src":"10008:6:0","memberName":null,"functionName":null,"AST":null,"nodes":null,"statements":null,"arguments":null,"declarations":null,"members":null,"components":null,"clauses":null,"options":null,"body":null,"trueBody":null,"falseBody":null,"expression":null,"condition":null,"initializationExpression":null,"leftExpression":null,"rightExpression":null,"subExpression":null,"trueExpression":null,"falseExpression":null,"loopExpression":null,"baseExpression":null,"indexExpression":null,"startExpression":null,"endExpression":null,"value":null,"initialValue":null,"externalCall":null,"eventCall":null,"errorCall":null,"leftHandSide":null,"rightHandSide":null,"length":null}],"declarations":null,"members":null,"components":null,"clauses":null,"options":null,"body":null,"trueBody":null,"falseBody":null,"expression":{"nodeType":"Identifier","name":"Transfer","src":"9978:8:0","memberName":null,"functionName":null,"AST":null,"nodes":null,"statements":null,"arguments":null,"declarations":null,"members":null,"components":null,"clauses":null,"options":null,"body":null,"trueBody":null,"falseBody":null,"expression":null,"condition":null,"initializationExpression":null,"leftExpression":null,"rightExpression":null,"subExpression":null,"trueExpression":null,"falseExpression":null,"loopExpression":null,"baseExpression":null,"indexExpression":null,"startExpression":null,"endExpression":null,"value":null,"initialValue":null,"externalCall":null,"eventCall":null,"errorCall":null,"leftHandSide":null,"rightHandSide":null,"length":null},"condition":null,"initializationExpression":null,"leftExpression":null,"rightExpression":null,"subExpression":null,"trueExpression":null,"falseExpression":null,"loopExpression":null,"baseExpression":null,"indexExpression":null,"startExpression":null,"endExpression":null,"value":null,"initialValue":null,"externalCall":null,"eventCall":null,"errorCall":null,"leftHandSide":null,"rightHandSide":null,"length":null},"errorCall":null,"leftHandSide":null,"rightHandSide":null,"length":null},{"nodeType":"ExpressionStatement","name":null,"src":"10026:48:0","memberName":null,"functionName":null,"AST":null,"nodes":null,"statements":null,"arguments":null,"declarations":null,"members":null,"components":null,"clauses":null,"options":null,"body":null,"trueBody":null,"falseBody":null,"expression":{"nodeType":"FunctionCall","name":null,"src":"10026:48:0","memberName":null,"functionName":null,"AST":null,"nodes":null,"statements":null,"arguments":[{"nodeType":"Identifier","name":"account","src":"10046:7:0","memberName":null,"functionName":null,"AST":null,"nodes":null,"statements":null,"arguments":null,"declarations":null,"members":null,"components":null,"clauses":null,"options":null,"body":null,"trueBody":null,"falseBody":null,"expression":null,"condition":null,"initializationExpression":null,"leftExpression":null,"rightExpression":null,"subExpression":null,"trueExpression":null,"falseExpression":null,"loopExpression":null,"baseExpression":null,"indexExpression":null,"startExpression":null,"endExpression":null,"value":null,"initialValue":null,"externalCall":null,"eventCall":null,"errorCall":null,"leftHandSide":null,"rightHandSide":null,"length":null},{"nodeType":"FunctionCall","name":null,"src":"10055:10:0","memberName":null,"functionName":null,"AST":null,"nodes":null,"statements":null,"arguments":[{"nodeType":"Literal","name":null,"src":"10063:1:0","memberName":null,"functionName":null,"AST":null,"nodes":null,"statements":null,"arguments":null,"declarations":null,"members":null,"components":null,"clauses":null,"options":null,"body":null,"trueBody":null,"falseBody":null,"expression":null,"condition":null,"initializationExpression":null,"leftExpression":null,"rightExpression":null,"subExpression":null,"trueExpression":null,"falseExpression":null,"loopExpression":null,"baseExpression":null,"indexExpression":null,"startExpression":null,"endExpression":null,"value":"0","initialValue":null,"externalCall":null,"eventCall":null,"errorCall":null,"leftHandSide":null,"rightHandSide":null,"length":null}],"declarations":null,"members":null,"components":null,"clauses":null,"options":null,"body":null,"trueBody":null,"falseBody":null,"expression":{"nodeType":"ElementaryTypeNameExpression","name":null,"src":"10055:7:0","memberName":null,"functionName":null,"AST":null,"nodes":null,"statements":null,"arguments":null,"declarations":null,"members":null,"components":null,"clauses":null,"options":null,"body":null,"trueBody":null,"falseBody":null,"expression":null,"condition":null,"initializationExpression":null,"leftExpression":null,"rightExpression":null,"subExpression":null,"trueExpression":null,"falseExpression":null,"loopExpression":null,"baseExpression":null,"indexExpression":null,"startExpression":null,"endExpression":null,"value":null,"initialValue":null,"externalCall":null,"eventCall":null,"errorCall":null,"leftHandSide":null,"rightHandSide":null,"length":null},"condition":null,"initializationExpression":null,"leftExpression":null,"rightExpression":null,"subExpression":null,"trueExpression":null,"falseExpression":null,"loopExpression":null,"baseExpression":null,"indexExpression":null,"startExpression":null,"endExpression":null,"value":null,"initialValue":null,"externalCall":null,"eventCall":null,"errorCall":null,"leftHandSide":null,"rightHandSide":null,"length":null},{"nodeType":"Identifier","name":"amount","src":"10067:6:0","memberName":null,"functionName":null,"AST":null,"nodes":null,"statements":null,"arguments":null,"declarations":null,"members":null,"components":null,"clauses":null,"options":null,"body":null,"trueBody":null,"falseBody":null,"expression":null,"condition":null,"initializationExpression":null,"leftExpression":null,"rightExpression":null,"subExpression":null,"trueExpression":null,"falseExpression":null,"loopExpression":null,"baseExpression":null,"indexExpression":null,"startExpression":null,"endExpression":null,"value":null,"initialValue":null,"externalCall":null,"eventCall":null,"errorCall":null,"leftHandSide":null,"rightHandSide":null,"length":null}],"declarations":null,"members":null,"components":null,"clauses":null,"options":null,"body":null,"trueBody":null,"falseBody":null,"expression":{"nodeType":"Identifier","name":"_afterTokenTransfer","src":"10026:19:0","memberName":null,"functionName":null,"AST":null,"nodes":null,"statements":null,"arguments":null,"declarations":null,"members":null,"components":null,"clauses":null,"options":null,"body":null,"trueBody":null,"falseBody":null,"expression":null,"condition":null,"initializationExpression":null,"leftExpression":null,"rightExpression":null,"subExpression":null,"trueExpression":null,"falseExpression":null,"loopExpression":null,"baseExpression":null,"indexExpression":null,"startExpression":null,"endExpression":null,"value":null,"initialValue":null,"externalCall":null,"eventCall":null,"errorCall":null,"leftHandSide":null,"rightHandSide":null,"length":null},"condition":null,"initializationExpression":null,"leftExpression":null,"rightExpression":null,"subExpression":null,"trueExpression":null,"falseExpression":null,"loopExpression":null,"baseExpression":null,"indexExpression":null,"startExpression":null,"endExpression":null,"value":null,"initialValue":null,"externalCall":null,"eventCall":null,"errorCall":null,"leftHandSide":null,"rightHandSide":null,"length":null},"condition":null,"initializationExpression":null,"leftExpression":null,"rightExpression":null,"subExpression":null,"trueExpression":null,"falseExpression":null,"loopExpression":null,"baseExpression":null,"indexExpression":null,"startExpression":null,"endExpression":null,"value":null,"initialValue":null,"externalCall":null,"eventCall":null,"errorCall":null,"leftHandSide":null,"rightHandSide":null,"length":null}],"arguments":null,"declarations":null,"members":null,"components":null,"clauses":null,"options":null,"body":null,"trueBody":null,"falseBody":null,"expression":null,"condition":null,"initializationExpression":null,"leftExpression":null,"rightExpression":null,"subExpression":null,"trueExpression":null,"falseExpression":null,"loopExpression":null,"baseExpression":null,"indexExpression":null,"startExpression":null,"endExpression":null,"value":null,"initialValue":null,"externalCall":null,"eventCall":null,"errorCall":null,"leftHandSide":null,"rightHandSide":null,"length":null},"trueBody":null,"falseBody":null,"expression":null,"condition":null,"initializationExpression":null,"leftExpression":null,"rightExpression":null,"subExpression":null,"trueExpression":null,"falseExpression":null,"loopExpression":null,"baseExpression":null,"indexExpression":null,"startExpression":null,"endExpression":null,"value":null,"initialValue":null,"externalCall":null,"eventCall":null,"errorCall":null,"leftHandSide":null,"rightHandSide":null,"length":null},{"nodeType":"FunctionDefinition","name":"_approve","src":"10504:370:0","memberName":null,"functionName":null,"AST":null,"nodes":null,"statements":null,"arguments":null,"declarations":null,"members":null,"components":null,"clauses":null,"options":null,"body":{"nodeType":"Block","name":null,"src":"10617:257:0","memberName":null,"functionName":null,"AST":null,"nodes":null,"statements":[{"nodeType":"ExpressionStatement","name":null,"src":"10627:68:0","memberName":null,"functionName":null,"AST":null,"nodes":null,"statements":null,"arguments":null,"declarations":null,"members":null,"components":null,"clauses":null,"options":null,"body":null,"trueBody":null,"falseBody":null,"expression":{"nodeType":"FunctionCall","name":null,"src":"10627:68:0","memberName":null,"functionName":null,"AST":null,"nodes":null,"statements":null,"arguments":[{"nodeType":"BinaryOperation","name":null,"src":"10635:19:0","memberName":null,"functionName":null,"AST":null,"nodes":null,"statements":null,"arguments":null,"declarations":null,"members":null,"components":null,"clauses":null,"options":null,"body":null,"trueBody":null,"falseBody":null,"expression":null,"condition":null,"initializationExpression":null,"leftExpression":{"nodeType":"Identifier","name":"owner","src":"10635:5:0","memberName":null,"functionName":null,"AST":null,"nodes":null,"statements":null,"arguments":null,"declarations":null,"members":null,"components":null,"clauses":null,"options":null,"body":null,"trueBody":null,"falseBody":null,"expression":null,"condition":null,"initializationExpression":null,"leftExpression":null,"rightExpression":null,"subExpression":null,"trueExpression":null,"falseExpression":null,"loopExpression":null,"baseExpression":null,"indexExpression":null,"startExpression":null,"endExpression":null,"value":null,"initialValue":null,"externalCall":null,"eventCall":null,"errorCall":null,"leftHandSide":null,"rightHandSide":null,"length":null},"rightExpression":{"nodeType":"FunctionCall","name":null,"src":"10644:10:0","memberName":null,"functionName":null,"AST":null,"nodes":null,"statements":null,"arguments":[{"nodeType":"Literal","name":null,"src":"10652:1:0","memberName":null,"functionName":null,"AST":null,"nodes":null,"statements":null,"arguments":null,"declarations":null,"members":null,"components":null,"clauses":null,"options":null,"body":null,"trueBody":null,"falseBody":null,"expression":null,"condition":null,"initializationExpression":null,"leftExpression":null,"rightExpression":null,"subExpression":null,"trueExpression":null,"falseExpression":null,"loopExpression":null,"baseExpression":null,"indexExpression":null,"startExpression":null,"endExpression":null,"value":"0","initialValue":null,"externalCall":null,"eventCall":null,"errorCall":null,"leftHandSide":null,"rightHandSide":null,"length":null}],"declarations":null,"members":null,"components":null,"clauses":null,"options":null,"body":null,"trueBody":null,"falseBody":null,"expression":{"nodeType":"ElementaryTypeNameExpression","name":null,"src":"10644:7:0","memberName":null,"functionName":null,"AST":null,"nodes":null,"statements":null,"arguments":null,"declarations":null,"members":null,"components":null,"clauses":null,"options":null,"body":null,"trueBody":null,"falseBody":null,"expression":null,"condition":null,"initializationExpression":null,"leftExpression":null,"rightExpression":null,"subExpression":null,"trueExpression":null,"falseExpression":null,"loopExpression":null,"baseExpression":null,"indexExpression":null,"startExpression":null,"endExpression":null,"value":null,"initialValue":null,"externalCall":null,"eventCall":null,"errorCall":null,"leftHandSide":null,"rightHandSide":null,"length":null},"condition":null,"initializationExpression":null,"leftExpression":null,"rightExpression":null,"subExpression":null,"trueExpression":null,"falseExpression":null,"loopExpression":null,"baseExpression":null,"indexExpression":null,"startExpression":null,"endExpression":null,"value":null,"initialValue":null,"externalCall":null,"eventCall":null,"errorCall":null,"leftHandSide":null,"rightHandSide":null,"length":null},"subExpression":null,"trueExpression":null,"falseExpression":null,"loopExpression":null,"baseExpression":null,"indexExpression":null,"startExpression":null,"endExpression":null,"value":null,"initialValue":null,"externalCall":null,"eventCall":null,"errorCall":null,"leftHandSide":null,"rightHandSide":null,"length":null},{"nodeType":"Literal","name":null,"src":"10656:38:0","memberName":null,"functionName":null,"AST":null,"nodes":null,"statements":null,"arguments":null,"declarations":null,"members":null,"components":null,"clauses":null,"options":null,"body":null,"trueBody":null,"falseBody":null,"expression":null,"condition":null,"initializationExpression":null,"leftExpression":null,"rightExpression":null,"subExpression":null,"trueExpression":null,"falseExpression":null,"loopExpression":null,"baseExpression":null,"indexExpression":null,"startExpression":null,"endExpression":null,"value":"ERC20: approve from the zero address","initialValue":null,"externalCall":null,"eventCall":null,"errorCall":null,"leftHandSide":null,"rightHandSide":null,"length":null}],"declarations":null,"members":null,"components":null,"clauses":null,"options":null,"body":null,"trueBody":null,"falseBody":null,"expression":{"nodeType":"Identifier","name":"require","src":"10627:7:0","memberName":null,"functionName":null,"AST":null,"nodes":null,"statements":null,"arguments":null,"declarations":null,"members":null,"components":null,"clauses":null,"options":null,"body":null,"trueBody":null,"falseBody":null,"expression":null,"condition":null,"initializationExpression":null,"leftExpression":null,"rightExpression":null,"subExpression":null,"trueExpression":null,"falseExpression":null,"loopExpression":null,"baseExpression":null,"indexExpression":null,"startExpression":null,"endExpression":null,"value":null,"initialValue":null,"externalCall":null,"eventCall":null,"errorCall":null,"leftHandSide":null,"rightHandSide":null,"length":null},"condition":null,"initializationExpression":null,"leftExpression":null,"rightExpression":null,"subExpression":null,"trueExpression":null,"falseExpression":null,"loopExpression":null,"baseExpression":null,"indexExpression":null,"startExpression":null,"endExpression":null,"value":null,"initialValue":null,"externalCall":null,"eventCall":null,"errorCall":null,"leftHandSide":null,"rightHandSide":null,"length":null},"condition":null,"initializationExpression":null,"leftExpression":null,"rightExpression":null,"subExpression":null,"trueExpression":null,"falseExpression":null,"loopExpression":null,"baseExpression":null,"indexExpression":null,"startExpression":null,"endExpression":null,"value":null,"initialValue":null,"externalCall":null,"eventCall":null,"errorCall":null,"leftHandSide":null,"rightHandSide":null,"length":null},{"nodeType":"ExpressionStatement","name":null,"src":"10705:68:0","memberName":null,"functionName":null,"AST":null,"nodes":null,"statements":null,"arguments":null,"declarations":null,"members":null,"components":null,"clauses":null,"options":null,"body":null,"trueBody":null,"falseBody":null,"expression":{"nodeType":"FunctionCall","name":null,"src":"10705:68:0","memberName":null,"functionName":null,"AST":null,"nodes":null,"statements":null,"arguments":[{"nodeType":"BinaryOperation","name":null,"src":"10713:21:0","memberName":null,"functionName":null,"AST":null,"nodes":null,"statements":null,"arguments":null,"declarations":null,"members":null,"components":null,"clauses":null,"options":null,"body":null,"trueBody":null,"falseBody":null,"expression":null,"condition":null,"initializationExpression":null,"leftExpression":{"nodeType":"Identifier","name":"spender","src":"10713:7:0","memberName":null,"functionName":null,"AST":null,"nodes":null,"statements":null,"arguments":null,"declarations":null,"members":null,"components":null,"clauses":null,"options":null,"body":null,"trueBody":null,"falseBody":null,"expression":null,"condition":null,"initializationExpression":null,"leftExpression":null,"rightExpression":null,"subExpression":null,"trueExpression":null,"falseExpression":null,"loopExpression":null,"baseExpression":null,"indexExpression":null,"startExpression":null,"endExpression":null,"value":null,"initialValue":null,"externalCall":null,"eventCall":null,"errorCall":null,"leftHandSide":null,"rightHandSide":null,"length":null},"rightExpression":{"nodeType":"FunctionCall","name":null,"src":"10724:10:0","memberName":null,"functionName":null,"AST":null,"nodes":null,"statements":null,"arguments":[{"nodeType":"Literal","name":null,"src":"10732:1:0","memberName":null,"functionName":null,"AST":null,"nodes":null,"statements":null,"arguments":null,"declarations":null,"members":null,"components":null,"clauses":null,"options":null,"body":null,"trueBody":null,"falseBody":null,"expression":null,"condition":null,"initializationExpression":null,"leftExpression":null,"rightExpression":null,"subExpression":null,"trueExpression":null,"falseExpression":null,"loopExpression":null,"baseExpression":null,"indexExpression":null,"startExpression":null,"endExpression":null,"value":"0","initialValue":null,"externalCall":null,"eventCall":null,"errorCall":null,"leftHandSide":null,"rightHandSide":null,"length":null}],"declarations":null,"members":null,"components":null,"clauses":null,"options":null,"body":null,"trueBody":null,"falseBody":null,"expression":{"nodeType":"ElementaryTypeNameExpression","name":null,"src":"10724:7:0","memberName":null,"functionName":null,"AST":null,"nodes":null,"statements":null,"arguments":null,"declarations":null,"members":null,"components":null,"clauses":null,"options":null,"body":null,"trueBody":null,"falseBody":null,"expression":null,"condition":null,"initializationExpression":null,"leftExpression":null,"rightExpression":null,"subExpression":null,"trueExpression":null,"falseExpression":null,"loopExpression":null,"baseExpression":null,"indexExpression":null,"startExpression":null,"endExpression":null,"value":null,"initialValue":null,"externalCall":null,"eventCall":null,"errorCall":null,"leftHandSide":null,"rightHandSide":null,"length":null},"condition":null,"initializationExpression":null,"leftExpression":null,"rightExpression":null,"subExpression":null,"trueExpression":null,"falseExpression":null,"loopExpression":null,"baseExpression":null,"indexExpression":null,"startExpression":null,"endExpression":null,"value":null,"initialValue":null,"externalCall":null,"eventCall":null,"errorCall":null,"leftHandSide":null,"rightHandSide":null,"length":null},"subExpression":null,"trueExpression":null,"falseExpression":null,"loopExpression":null,"baseExpression":null,"indexExpression":null,"startExpression":null,"endExpression":null,"value":null,"initialValue":null,"externalCall":null,"eventCall":null,"errorCall":null,"leftHandSide":null,"rightHandSide":null,"length":null},{"nodeType":"Literal","name":null,"src":"10736:36:0","memberName":null,"functionName":null,"AST":null,"nodes":null,"statements":null,"arguments":null,"declarations":null,"members":null,"components":null,"clauses":null,"options":null,"body":null,"trueBody":null,"falseBody":null,"expression":null,"condition":null,"initializationExpression":null,"leftExpression":null,"rightExpression":null,"subExpression":null,"trueExpression":null,"falseExpression":null,"loopExpression":null,"baseExpression":null,"indexExpression":null,"startExpression":null,"endExpression":null,"value":"ERC20: approve to the zero address","initialValue":null,"externalCall":null,"eventCall":null,"errorCall":null,"leftHandSide":null,"rightHandSide":null,"length":null}],"declarations":null,"members":null,"components":null,"clauses":null,"options":null,"body":null,"trueBody":null,"falseBody":null,"expression":{"nodeType":"Identifier","name":"require","src":"10705:7:0","memberName":null,"functionName":null,"AST":null,"nodes":null,"statements":null,"arguments":null,"declarations":null,"members":null,"components":null,"clauses":null,"options":null,"body":null,"trueBody":null,"falseBody":null,"expression":null,"condition":null,"initializationExpression":null,"leftExpression":null,"rightExpression":null,"subExpression":null,"trueExpression":null,"falseExpression":null,"loopExpression":null,"baseExpression":null,"indexExpression":null,"startExpression":null,"endExpression":null,"value":null,"initialValue":null,"externalCall":null,"eventCall":null,"errorCall":null,"leftHandSide":null,"rightHandSide":null,"length":null},"condition":null,"initializationExpression":null,"leftExpression":null,"rightExpression":null,"subExpression":null,"trueExpression":null,"falseExpression":null,"loopExpression":null,"baseExpression":null,"indexExpression":null,"startExpression":null,"endExpression":null,"value":null,"initialValue":null,"externalCall":null,"eventCall":null,"errorCall":null,"leftHandSide":null,"rightHandSide":null,"length":null},"condition":null,"initializationExpression":null,"leftExpression":null,"rightExpression":null,"subExpression":null,"trueExpression":null,"falseExpression":null,"loopExpression":null,"baseExpression":null,"indexExpression":null,"startExpression":null,"endExpression":null,"value":null,"initialValue":null,"externalCall":null,"eventCall":null,"errorCall":null,"leftHandSide":null,"rightHandSide":null,"length":null},{"nodeType":"ExpressionStatement","name":null,"src":"10784:36:0","memberName":null,"functionName":null,"AST":null,"nodes":null,"statements":null,"arguments":null,"declarations":null,"members":null,"components":null,"clauses":null,"options":null,"body":null,"trueBody":null,"falseBody":null,"expression":{"nodeType":"Assignment","name":null,"src":"10784:36:0","memberName":null,"functionName":null,"AST":null,"nodes":null,"statements":null,"arguments":null,"declarations":null,"members":null,"components":null,"clauses":null,"options":null,"body":null,"trueBody":null,"falseBody":null,"expression":null,"condition":null,"initializationExpression":null,"leftExpression":null,"rightExpression":null,"subExpression":null,"trueExpression":null,"falseExpression":null,"loopExpression":null,"baseExpression":null,"indexExpression":null,"startExpression":null,"endExpression":null,"value":null,"initialValue":null,"externalCall":null,"eventCall":null,"errorCall":null,"leftHandSide":{"nodeType":"IndexAccess","name":null,"src":"10784:27:0","memberName":null,"functionName":null,"AST":null,"nodes":null,"statements":null,"arguments":null,"declarations":null,"members":null,"components":null,"clauses":null,"options":null,"body":null,"trueBody":null,"falseBody":null,"expression":null,"condition":null,"initializationExpression":null,"leftExpression":null,"rightExpression":null,"subExpression":null,"trueExpression":null,"falseExpression":null,"loopExpression":null,"baseExpression":{"nodeType":"IndexAccess","name":null,"src":"10784:18:0","memberName":null,"functionName":null,"AST":null,"nodes":null,"statements":null,"arguments":null,"declarations":null,"members":null,"components":null,"clauses":null,"options":null,"body":null,"trueBody":null,"falseBody":null,"expression":null,"condition":null,"initializationExpression":null,"leftExpression":null,"rightExpression":null,"subExpression":null,"trueExpression":null,"falseExpression":null,"loopExpression":null,"baseExpression":{"nodeType":"Identifier","name":"_allowances","src":"10784:11:0","memberName":null,"functionName":null,"AST":null,"nodes":null,"statements":null,"arguments":null,"declarations":null,"members":null,"components":null,"clauses":null,"options":null,"body":null,"trueBody":null,"falseBody":null,"expression":null,"condition":null,"initializationExpression":null,"leftExpression":null,"rightExpression":null,"subExpression":null,"trueExpression":null,"falseExpression":null,"loopExpression":null,"baseExpression":null,"indexExpression":null,"startExpression":null,"endExpression":null,"value":null,"initialValue":null,"externalCall":null,"eventCall":null,"errorCall":null,"leftHandSide":null,"rightHandSide":null,"length":null},"indexExpression":{"nodeType":"Identifier","name":"owner","src":"10796:5:0","memberName":null,"functionName":null,"AST":null,"nodes":null,"statements":null,"arguments":null,"declarations":null,"members":null,"components":null,"clauses":null,"options":null,"body":null,"trueBody":null,"falseBody":null,"expression":null,"condition":null,"initializationExpression":null,"leftExpression":null,"rightExpression":null,"subExpression":null,"trueExpression":null,"falseExpression":null,"loopExpression":null,"baseExpression":null,"indexExpression":null,"startExpression":null,"endExpression":null,"value":null,"initialValue":null,"externalCall":null,"eventCall":null,"errorCall":null,"leftHandSide":null,"rightHandSide":null,"length":null},"startExpression":null,"endExpression":null,"value":null,"initialValue":null,"externalCall":null,"eventCall":null,"errorCall":null,"leftHandSide":null,"rightHandSide":null,"length":null},"indexExpression":{"nodeType":"Identifier","name":"spender","src":"10803:7:0","memberName":null,"functionName":null,"AST":null,"nodes":null,"statements":null,"arguments":null,"declarations":null,"members":null,"components":null,"clauses":null,"options":null,"body":null,"trueBody":null,"falseBody":null,"expression":null,"condition":null,"initializationExpression":null,"leftExpression":null,"rightExpression":null,"subExpression":null,"trueExpression":null,"falseExpression":null,"loopExpression":null,"baseExpression":null,"indexExpression":null,"startExpression":null,"endExpression":null,"value":null,"initialValue":null,"externalCall":null,"eventCall":null,"errorCall":null,"leftHandSide":null,"rightHandSide":null,"length":null},"startExpression":null,"endExpression":null,"value":null,"initialValue":null,"externalCall":null,"eventCall":null,"errorCall":null,"leftHandSide":null,"rightHandSide":null,"length":null},"rightHandSide":{"nodeType":"Identifier","name":"amount","src":"10814:6:0","memberName":null,"functionName":null,"AST":null,"nodes":null,"statements":null,"arguments":null,"declarations":null,"members":null,"components":null,"clauses":null,"options":null,"body":null,"trueBody":null,"falseBody":null,"expression":null,"condition":null,"initializationExpression":null,"leftExpression":null,"rightExpression":null,"subExpression":null,"trueExpression":null,"falseExpression":null,"loopExpression":null,"baseExpression":null,"indexExpression":null,"startExpression":null,"endExpression":null,"value":null,"initialValue":null,"externalCall":null,"eventCall":null,"errorCall":null,"leftHandSide":null,"rightHandSide":null,"length":null},"length":null},"condition":null,"initializationExpression":null,"leftExpression":null,"rightExpression":null,"subExpression":null,"trueExpression":null,"falseExpression":null,"loopExpression":null,"baseExpression":null,"indexExpression":null,"startExpression":null,"endExpression":null,"value":null,"initialValue":null,"externalCall":null,"eventCall":null,"errorCall":null,"leftHandSide":null,"rightHandSide":null,"length":null},{"nodeType":"EmitStatement","name":null,"src":"10830:37:0","memberName":null,"functionName":null,"AST":null,"nodes":null,"statements":null,"arguments":null,"declarations":null,"members":null,"components":null,"clauses":null,"options":null,"body":null,"trueBody":null,"falseBody":null,"expression":null,"condition":null,"initializationExpression":null,"leftExpression":null,"rightExpression":null,"subExpression":null,"trueExpression":null,"falseExpression":null,"loopExpression":null,"baseExpression":null,"indexExpression":null,"startExpression":null,"endExpression":null,"value":null,"initialValue":null,"externalCall":null,"eventCall":{"nodeType":"FunctionCall","name":null,"src":"10835:32:0","memberName":null,"functionName":null,"AST":null,"nodes":null,"statements":null,"arguments":[{"nodeType":"Identifier","name":"owner","src":"10844:5:0","memberName":null,"functionName":null,"AST":null,"nodes":null,"statements":null,"arguments":null,"declarations":null,"members":null,"components":null,"clauses":null,"options":null,"body":null,"trueBody":null,"falseBody":null,"expression":null,"condition":null,"initializationExpression":null,"leftExpression":null,"rightExpression":null,"subExpression":null,"trueExpression":null,"falseExpression":null,"loopExpression":null,"baseExpression":null,"indexExpression":null,"startExpression":null,"endExpression":null,"value":null,"initialValue":null,"externalCall":null,"eventCall":null,"errorCall":null,"leftHandSide":null,"rightHandSide":null,"length":null},{"nodeType":"Identifier","name":"spender","src":"10851:7:0","memberName":null,"functionName":null,"AST":null,"nodes":null,"statements":null,"arguments":null,"declarations":null,"members":null,"components":null,"clauses":null,"options":null,"body":null,"trueBody":null,"falseBody":null,"expression":null,"condition":null,"initializationExpression":null,"leftExpression":null,"rightExpression":null,"subExpression":null,"trueExpression":null,"falseExpression":null,"loopExpression":null,"baseExpression":null,"indexExpression":null,"startExpression":null,"endExpression":null,"value":null,"initialValue":null,"externalCall":null,"eventCall":null,"errorCall":null,"leftHandSide":null,"rightHandSide":null,"length":null},{"nodeType":"Identifier","name":"amount","src":"10860:6:0","memberName":null,"functionName":null,"AST":null,"nodes":null,"statements":null,"arguments":null,"declarations":null,"members":null,"components":null,"clauses":null,"options":null,"body":null,"trueBody":null,"falseBody":null,"expression":null,"condition":null,"initializationExpression":null,"leftExpression":null,"rightExpression":null,"subExpression":null,"trueExpression":null,"falseExpression":null,"loopExpression":null,"baseExpression":null,"indexExpression":null,"startExpression":null,"endExpression":null,"value":null,"initialValue":null,"externalCall":null,"eventCall":null,"errorCall":null,"leftHandSide":null,"rightHandSide":null,"length":null}],"declarations":null,"members":null,"components":null,"clauses":null,"options":null,"body":null,"trueBody":null,"falseBody":null,"expression":{"nodeType":"Identifier","name":"Approval","src":"10835:8:0","memberName":null,"functionName":null,"AST":null,"nodes":null,"statements":null,"arguments":null,"declarations":null,"members":null,"components":null,"clauses":null,"options":null,"body":null,"trueBody":null,"falseBody":null,"expression":null,"condition":null,"initializationExpression":null,"leftExpression":null,"rightExpression":null,"subExpression":null,"trueExpression":null,"falseExpression":null,"loopExpression":null,"baseExpression":null,"indexExpression":null,"startExpression":null,"endExpression":null,"value":null,"initialValue":null,"externalCall":null,"eventCall":null,"errorCall":null,"leftHandSide":null,"rightHandSide":null,"length":null},"condition":null,"initializationExpression":null,"leftExpression":null,"rightExpression":null,"subExpression":null,"trueExpression":null,"falseExpression":null,"loopExpression":null,"baseExpression":null,"indexExpression":null,"startExpression":null,"endExpression":null,"value":null,"initialValue":null,"externalCall":null,"eventCall":null,"errorCall":null,"leftHandSide":null,"rightHandSide":null,"length":null},"errorCall":null,"leftHandSide":null,"rightHandSide":null,"length":null}],"arguments":null,"declarations":null,"members":null,"components":null,"clauses":null,"options":null,"body":null,"trueBody":null,"falseBody":null,"expression":null,"condition":null,"initializationExpression":null,"leftExpression":null,"rightExpression":null,"subExpression":null,"trueExpression":null,"falseExpression":null,"loopExpression":null,"baseExpression":null,"indexExpression":null,"startExpression":null,"endExpression":null,"value":null,"initialValue":null,"externalCall":null,"eventCall":null,"errorCall":null,"leftHandSide":null,"rightHandSide":null,"length":null},"trueBody":null,"falseBody":null,"expression":null,"condition":null,"initializationExpression":null,"leftExpression":null,"rightExpression":null,"subExpression":null,"trueExpression":null,"falseExpression":null,"loopExpression":null,"baseExpression":null,"indexExpression":null,"startExpression":null,"endExpression":null,"value":null,"initialValue":null,"externalCall":null,"eventCall":null,"errorCall":null,"leftHandSide":null,"rightHandSide":null,"length":null},{"nodeType":"FunctionDefinition","name":"_spendAllowance","src":"11155:441:0","memberName":null,"functionName":null,"AST":null,"nodes":null,"statements":null,"arguments":null,"declarations":null,"members":null,"components":null,"clauses":null,"options":null,"body":{"nodeType":"Block","name":null,"src":"11275:321:0","memberName":null,"functionName":null,"AST":null,"nodes":null,"statements":[{"nodeType":"VariableDeclarationStatement","name":null,"src":"11285:52:0","memberName":null,"functionName":null,"AST":null,"nodes":null,"statements":null,"arguments":null,"declarations":[{"nodeType":"VariableDeclaration","name":"currentAllowance","src":"11285:24:0","memberName":null,"functionName":null,"AST":null,"nodes":null,"statements":null,"arguments":null,"declarations":null,"members":null,"components":null,"clauses":null,"options":null,"body":null,"trueBody":null,"falseBody":null,"expression":null,"condition":null,"initializationExpression":null,"leftExpression":null,"rightExpression":null,"subExpression":null,"trueExpression":null,"falseExpression":null,"loopExpression":null,"baseExpression":null,"indexExpression":null,"startExpression":null,"endExpression":null,"value":null,"initialValue":null,"externalCall":null,"eventCall":null,"errorCall":null,"leftHandSide":null,"rightHandSide":null,"length":null}],"members":null,"components":null,"clauses":null,"options":null,"body":null,"trueBody":null,"falseBody":null,"expression":null,"condition":null,"initializationExpression":null,"leftExpression":null,"rightExpression":null,"subExpression":null,"trueExpression":null,"falseExpression":null,"loopExpression":null,"baseExpression":null,"indexExpression":null,"startExpression":null,"endExpression":null,"value":null,"initialValue":{"nodeType":"FunctionCall","name":null,"src":"11312:25:0","memberName":null,"functionName":null,"AST":null,"nodes":null,"statements":null,"arguments":[{"nodeType":"Identifier","name":"owner","src":"11322:5:0","memberName":null,"functionName":null,"AST":null,"nodes":null,"statements":null,"arguments":null,"declarations":null,"members":null,"components":null,"clauses":null,"options":null,"body":null,"trueBody":null,"falseBody":null,"expression":null,"condition":null,"initializationExpression":null,"leftExpression":null,"rightExpression":null,"subExpression":null,"trueExpression":null,"falseExpression":null,"loopExpression":null,"baseExpression":null,"indexExpression":null,"startExpression":null,"endExpression":null,"value":null,"initialValue":null,"externalCall":null,"eventCall":null,"errorCall":null,"leftHandSide":null,"rightHandSide":null,"length":null},{"nodeType":"Identifier","name":"spender","src":"11329:7:0","memberName":null,"functionName":null,"AST":null,"nodes":null,"statements":null,"arguments":null,"declarations":null,"members":null,"components":null,"clauses":null,"options":null,"body":null,"trueBody":null,"falseBody":null,"expression":null,"condition":null,"initializationExpression":null,"leftExpression":null,"rightExpression":null,"subExpression":null,"trueExpression":null,"falseExpression":null,"loopExpression":null,"baseExpression":null,"indexExpression":null,"startExpression":null,"endExpression":null,"value":null,"initialValue":null,"externalCall":null,"eventCall":null,"errorCall":null,"leftHandSide":null,"rightHandSide":null,"length":null}],"declarations":null,"members":null,"components":null,"clauses":null,"options":null,"body":null,"trueBody":null,"falseBody":null,"expression":{"nodeType":"Identifier","name":"allowance","src":"11312:9:0","memberName":null,"functionName":null,"AST":null,"nodes":null,"statements":null,"arguments":null,"declarations":null,"members":null,"components":null,"clauses":null,"options":null,"body":null,"trueBody":null,"falseBody":null,"expression":null,"condition":null,"initializationExpression":null,"leftExpression":null,"rightExpression":null,"subExpression":null,"trueExpression":null,"falseExpression":null,"loopExpression":null,"baseExpression":null,"indexExpression":null,"startExpression":null,"endExpression":null,"value":null,"initialValue":null,"externalCall":null,"eventCall":null,"errorCall":null,"leftHandSide":null,"rightHandSide":null,"length":null},"condition":null,"initializationExpression":null,"leftExpression":null,"rightExpression":null,"subExpression":null,"trueExpression":null,"falseExpression":null,"loopExpression":null,"baseExpression":null,"indexExpression":null,"startExpression":null,"endExpression":null,"value":null,"initialValue":null,"externalCall":null,"eventCall":null,"errorCall":null,"leftHandSide":null,"rightHandSide":null,"length":null},"externalCall":null,"eventCall":null,"errorCall":null,"leftHandSide":null,"rightHandSide":null,"length":null},{"nodeType":"IfStatement","name":null,"src":"11347:243:0","memberName":null,"functionName":null,"AST":null,"nodes":null,"statements":null,"arguments":null,"declarations":null,"members":null,"components":null,"clauses":null,"options":null,"body":null,"trueBody":{"nodeType":"Block","name":null,"src":"11390:200:0","memberName":null,"functionName":null,"AST":null,"nodes":null,"statements":[{"nodeType":"ExpressionStatement","name":null,"src":"11404:68:0","memberName":null,"functionName":null,"AST":null,"nodes":null,"statements":null,"arguments":null,"declarations":null,"members":null,"components":null,"clauses":null,"options":null,"body":null,"trueBody":null,"falseBody":null,"expression":{"nodeType":"FunctionCall","name":null,"src":"11404:68:0","memberName":null,"functionName":null,"AST":null,"nodes":null,"statements":null,"arguments":[{"nodeType":"BinaryOperation","name":null,"src":"11412:26:0","memberName":null,"functionName":null,"AST":null,"nodes":null,"statements":null,"arguments":null,"declarations":null,"members":null,"components":null,"clauses":null,"options":null,"body":null,"trueBody":null,"falseBody":null,"expression":null,"condition":null,"initializationExpression":null,"leftExpression":{"nodeType":"Identifier","name":"currentAllowance","src":"11412:16:0","memberName":null,"functionName":null,"AST":null,"nodes":null,"statements":null,"arguments":null,"declarations":null,"members":null,"components":null,"clauses":null,"options":null,"body":null,"trueBody":null,"falseBody":null,"expression":null,"condition":null,"initializationExpression":null,"leftExpression":null,"rightExpression":null,"subExpression":null,"trueExpression":null,"falseExpression":null,"loopExpression":null,"baseExpression":null,"indexExpression":null,"startExpression":null,"endExpression":null,"value":null,"initialValue":null,"externalCall":null,"eventCall":null,"errorCall":null,"leftHandSide":null,"rightHandSide":null,"length":null},"rightExpression":{"nodeType":"Identifier","name":"amount","src":"11432:6:0","memberName":null,"functionName":null,"AST":null,"nodes":null,"statements":null,"arguments":null,"declarations":null,"members":null,"components":null,"clauses":null,"options":null,"body":null,"trueBody":null,"falseBody":null,"expression":null,"condition":null,"initializationExpression":null,"leftExpression":null,"rightExpression":null,"subExpression":null,"trueExpression":null,"falseExpression":null,"loopExpression":null,"baseExpression":null,"indexExpression":null,"startExpression":null,"endExpression":null,"value":null,"initialValue":null,"externalCall":null,"eventCall":null,"errorCall":null,"leftHandSide":null,"rightHandSide":null,"length":null},"subExpression":null,"trueExpression":null,"falseExpression":null,"loopExpression":null,"baseExpression":null,"indexExpression":null,"startExpression":null,"endExpression":null,"value":null,"initialValue":null,"externalCall":null,"eventCall":null,"errorCall":null,"leftHandSide":null,"rightHandSide":null,"length":null},{"nodeType":"Literal","name":null,"src":"11440:31:0","memberName":null,"functionName":null,"AST":null,"nodes":null,"statements":null,"arguments":null,"declarations":null,"members":null,"components":null,"clauses":null,"options":null,"body":null,"trueBody":null,"falseBody":null,"expression":null,"condition":null,"initializationExpression":null,"leftExpression":null,"rightExpression":null,"subExpression":null,"trueExpression":null,"falseExpression":null,"loopExpression":null,"baseExpression":null,"indexExpression":null,"startExpression":null,"endExpression":null,"value":"ERC20: insufficient allowance","initialValue":null,"externalCall":null,"eventCall":null,"errorCall":null,"leftHandSide":null,"rightHandSide":null,"length":null}],"declarations":null,"members":null,"components":null,"clauses":null,"options":null,"body":null,"trueBody":null,"falseBody":null,"expression":{"nodeType":"Identifier","name":"require","src":"11404:7:0","memberName":null,"functionName":null,"AST":null,"nodes":null,"statements":null,"arguments":null,"declarations":null,"members":null,"components":null,"clauses":null,"options":null,"body":null,"trueBody":null,"falseBody":null,"expression":null,"condition":null,"initializationExpression":null,"leftExpression":null,"rightExpression":null,"subExpression":null,"trueExpression":null,"falseExpression":null,"loopExpression":null,"baseExpression":null,"indexExpression":null,"startExpression":null,"endExpression":null,"value":null,"initialValue":null,"externalCall":null,"eventCall":null,"errorCall":null,"leftHandSide":null,"rightHandSide":null,"length":null},"condition":null,"initializationExpression":null,"leftExpression":null,"rightExpression":null,"subExpression":null,"trueExpression":null,"falseExpression":null,"loopExpression":null,"baseExpression":null,"indexExpression":null,"startExpression":null,"endExpression":null,"value":null,"initialValue":null,"externalCall":null,"eventCall":null,"errorCall":null,"leftHandSide":null,"rightHandSide":null,"length":null},"condition":null,"initializationExpression":null,"leftExpression":null,"rightExpression":null,"subExpression":null,"trueExpression":null,"falseExpression":null,"loopExpression":null,"baseExpression":null,"indexExpression":null,"startExpression":null,"endExpression":null,"value":null,"initialValue":null,"externalCall":null,"eventCall":null,"errorCall":null,"leftHandSide":null,"rightHandSide":null,"length":null},{"nodeType":"UncheckedBlock","name":null,"src":"11486:94:0","memberName":null,"functionName":null,"AST":null,"nodes":null,"statements":[{"nodeType":"ExpressionStatement","name":null,"src":"11514:51:0","memberName":null,"functionName":null,"AST":null,"nodes":null,"statements":null,"arguments":null,"declarations":null,"members":null,"components":null,"clauses":null,"options":null,"body":null,"trueBody":null,"falseBody":null,"expression":{"nodeType":"FunctionCall","name":null,"src":"11514:51:0","memberName":null,"functionName":null,"AST":null,"nodes":null,"statements":null,"arguments":[{"nodeType":"Identifier","name":"owner","src":"11523:5:0","memberName":null,"functionName":null,"AST":null,"nodes":null,"statements":null,"arguments":null,"declarations":null,"members":null,"components":null,"clauses":null,"options":null,"body":null,"trueBody":null,"falseBody":null,"expression":null,"condition":null,"initializationExpression":null,"leftExpression":null,"rightExpression":null,"subExpression":null,"trueExpression":null,"falseExpression":null,"loopExpression":null,"baseExpression":null,"indexExpression":null,"startExpression":null,"endExpression":null,"value":null,"initialValue":null,"externalCall":null,"eventCall":null,"errorCall":null,"leftHandSide":null,"rightHandSide":null,"length":null},{"nodeType":"Identifier","name":"spender","src":"11530:7:0","memberName":null,"functionName":null,"AST":null,"nodes":null,"statements":null,"arguments":null,"declarations":null,"members":null,"components":null,"clauses":null,"options":null,"body":null,"trueBody":null,"falseBody":null,"expression":null,"condition":null,"initializationExpression":null,"leftExpression":null,"rightExpression":null,"subExpression":null,"trueExpression":null,"falseExpression":null,"loopExpression":null,"baseExpression":null,"indexExpression":null,"startExpression":null,"endExpression":null,"value":null,"initialValue":null,"externalCall":null,"eventCall":null,"errorCall":null,"leftHandSide":null,"rightHandSide":null,"length":null},{"nodeType":"BinaryOperation","name":null,"src":"11539:25:0","memberName":null,"functionName":null,"AST":null,"nodes":null,"statements":null,"arguments":null,"declarations":null,"members":null,"components":null,"clauses":null,"options":null,"body":null,"trueBody":null,"falseBody":null,"expression":null,"condition":null,"initializationExpression":null,"leftExpression":{"nodeType":"Identifier","name":"currentAllowance","src":"11539:16:0","memberName":null,"functionName":null,"AST":null,"nodes":null,"statements":null,"arguments":null,"declarations":null,"members":null,"components":null,"clauses":null,"options":null,"body":null,"trueBody":null,"falseBody":null,"expression":null,"condition":null,"initializationExpression":null,"leftExpression":null,"rightExpression":null,"subExpression":null,"trueExpression":null,"falseExpression":null,"loopExpression":null,"baseExpression":null,"indexExpression":null,"startExpression":null,"endExpression":null,"value":null,"initialValue":null,"externalCall":null,"eventCall":null,"errorCall":null,"leftHandSide":null,"rightHandSide":null,"length":null},"rightExpression":{"nodeType":"Identifier","name":"amount","src":"11558:6:0","memberName":null,"functionName":null,"AST":null,"nodes":null,"statements":null,"arguments":null,"declarations":null,"members":null,"components":null,"clauses":null,"options":null,"body":null,"trueBody":null,"falseBody":null,"expression":null,"condition":null,"initializationExpression":null,"leftExpression":null,"rightExpression":null,"subExpression":null,"trueExpression":null,"falseExpression":null,"loopExpression":null,"baseExpression":null,"indexExpression":null,"startExpression":null,"endExpression":null,"value":null,"initialValue":null,"externalCall":null,"eventCall":null,"errorCall":null,"leftHandSide":null,"rightHandSide":null,"length":null},"subExpression":null,"trueExpression":null,"falseExpression":null,"loopExpression":null,"baseExpression":null,"indexExpression":null,"startExpression":null,"endExpression":null,"value":null,"initialValue":null,"externalCall":null,"eventCall":null,"errorCall":null,"leftHandSide":null,"rightHandSide":null,"length":null}],"declarations":null,"members":null,"components":null,"clauses":null,"options":null,"body":null,"trueBody":null,"falseBody":null,"expression":{"nodeType":"Identifier","name":"_approve","src":"11514:8:0","memberName":null,"functionName":null,"AST":null,"nodes":null,"statements":null,"arguments":null,"declarations":null,"members":null,"components":null,"clauses":null,"options":null,"body":null,"trueBody":null,"falseBody":null,"expression":null,"condition":null,"initializationExpression":null,"leftExpression":null,"rightExpression":null,"subExpression":null,"trueExpression":null,"falseExpression":null,"loopExpression":null,"baseExpression":null,"indexExpression":null,"startExpression":null,"endExpression":null,"value":null,"initialValue":null,"externalCall":null,"eventCall":null,"errorCall":null,"leftHandSide":null,"rightHandSide":null,"length":null},"condition":null,"initializationExpression":null,"leftExpression":null,"rightExpression":null,"subExpression":null,"trueExpression":null,"falseExpression":null,"loopExpression":null,"baseExpression":null,"indexExpression":null,"startExpression":null,"endExpression":null,"value":null,"initialValue":null,"externalCall":null,"eventCall":null,"errorCall":null,"leftHandSide":null,"rightHandSide":null,"length":null},"condition":null,"initializationExpression":null,"leftExpression":null,"rightExpression":null,"subExpression":null,"trueExpression":null,"falseExpression":null,"loopExpression":null,"baseExpression":null,"indexExpression":null,"startExpression":null,"endExpression":null,"value":null,"initialValue":null,"externalCall":null,"eventCall":null,"errorCall":null,"leftHandSide":null,"rightHandSide":null,"length":null}],"arguments":null,"declarations":null,"members":null,"components":null,"clauses":null,"options":null,"body":null,"trueBody":null,"falseBody":null,"expression":null,"condition":null,"initializationExpression":null,"leftExpression":null,"rightExpression":null,"subExpression":null,"trueExpression":null,"falseExpression":null,"loopExpression":null,"baseExpression":null,"indexExpression":null,"startExpression":null,"endExpression":null,"value":null,"initialValue":null,"externalCall":null,"eventCall":null,"errorCall":null,"leftHandSide":null,"rightHandSide":null,"length":null}],"arguments":null,"declarations":null,"members":null,"components":null,"clauses":null,"options":null,"body":null,"trueBody":null,"falseBody":null,"expression":null,"condition":null,"initializationExpression":null,"leftExpression":null,"rightExpression":null,"subExpression":null,"trueExpression":null,"falseExpression":null,"loopExpression":null,"baseExpression":null,"indexExpression":null,"startExpression":null,"endExpression":null,"value":null,"initialValue":null,"externalCall":null,"eventCall":null,"errorCall":null,"leftHandSide":null,"rightHandSide":null,"length":null},"falseBody":null,"expression":null,"condition":{"nodeType":"BinaryOperation","name":null,"src":"11351:37:0","memberName":null,"functionName":null,"AST":null,"nodes":null,"statements":null,"arguments":null,"declarations":null,"members":null,"components":null,"clauses":null,"options":null,"body":null,"trueBody":null,"falseBody":null,"expression":null,"condition":null,"initializationExpression":null,"leftExpression":{"nodeType":"Identifier","name":"currentAllowance","src":"11351:16:0","memberName":null,"functionName":null,"AST":null,"nodes":null,"statements":null,"arguments":null,"declarations":null,"members":null,"components":null,"clauses":null,"options":null,"body":null,"trueBody":null,"falseBody":null,"expression":null,"condition":null,"initializationExpression":null,"leftExpression":null,"rightExpression":null,"subExpression":null,"trueExpression":null,"falseExpression":null,"loopExpression":null,"baseExpression":null,"indexExpression":null,"startExpression":null,"endExpression":null,"value":null,"initialValue":null,"externalCall":null,"eventCall":null,"errorCall":null,"leftHandSide":null,"rightHandSide":null,"length":null},"rightExpression":{"nodeType":"MemberAccess","name":null,"src":"11371:17:0","memberName":"max","functionName":null,"AST":null,"nodes":null,"statements":null,"arguments":null,"declarations":null,"members":null,"components":null,"clauses":null,"options":null,"body":null,"trueBody":null,"falseBody":null,"expression":{"nodeType":"FunctionCall","name":null,"src":"11371:13:0","memberName":null,"functionName":null,"AST":null,"nodes":null,"statements":null,"arguments":[{"nodeType":"ElementaryTypeNameExpression","name":null,"src":"11376:7:0","memberName":null,"functionName":null,"AST":null,"nodes":null,"statements":null,"arguments":null,"declarations":null,"members":null,"components":null,"clauses":null,"options":null,"body":null,"trueBody":null,"falseBody":null,"expression":null,"condition":null,"initializationExpression":null,"leftExpression":null,"rightExpression":null,"subExpression":null,"trueExpression":null,"falseExpression":null,"loopExpression":null,"baseExpression":null,"indexExpression":null,"startExpression":null,"endExpression":null,"value":null,"initialValue":null,"externalCall":null,"eventCall":null,"errorCall":null,"leftHandSide":null,"rightHandSide":null,"length":null}],"declarations":null,"members":null,"components":null,"clauses":null,"options":null,"body":null,"trueBody":null,"falseBody":null,"expression":{"nodeType":"Identifier","name":"type","src":"11371:4:0","memberName":null,"functionName":null,"AST":null,"nodes":null,"statements":null,"arguments":null,"declarations":null,"members":null,"components":null,"clauses":null,"options":null,"body":null,"trueBody":null,"falseBody":null,"expression":null,"condition":null,"initializationExpression":null,"leftExpression":null,"rightExpression":null,"subExpression":null,"trueExpression":null,"falseExpression":null,"loopExpression":null,"baseExpression":null,"indexExpression":null,"startExpression":null,"endExpression":null,"value":null,"initialValue":null,"externalCall":null,"eventCall":null,"errorCall":null,"leftHandSide":null,"rightHandSide":null,"length":null},"condition":null,"initializationExpression":null,"leftExpression":null,"rightExpression":null,"subExpression":null,"trueExpression":null,"falseExpression":null,"loopExpression":null,"baseExpression":null,"indexExpression":null,"startExpression":null,"endExpression":null,"value":null,"initialValue":null,"externalCall":null,"eventCall":null,"errorCall":null,"leftHandSide":null,"rightHandSide":null,"length":null},"condition":null,"initializationExpression":null,"leftExpression":null,"rightExpression":null,"subExpression":null,"trueExpression":null,"falseExpression":null,"loopExpression":null,"baseExpression":null,"indexExpression":null,"startExpression":null,"endExpression":null,"value":null,"initialValue":null,"externalCall":null,"eventCall":null,"errorCall":null,"leftHandSide":null,"rightHandSide":null,"length":null},"subExpression":null,"trueExpression":null,"falseExpression":null,"loopExpression":null,"baseExpression":null,"indexExpression":null,"startExpression":null,"endExpression":null,"value":null,"initialValue":null,"externalCall":null,"eventCall":null,"errorCall":null,"leftHandSide":null,"rightHandSide":null,"length":null},"initializationExpression":null,"leftExpression":null,"rightExpression":null,"subExpression":null,"trueExpression":null,"falseExpression":null,"loopExpression":null,"baseExpression":null,"indexExpression":null,"startExpression":null,"endExpression":null,"value":null,"initialValue":null,"externalCall":null,"eventCall":null,"errorCall":null,"leftHandSide":null,"rightHandSide":null,"length":null}],"arguments":null,"declarations":null,"members":null,"components":null,"clauses":null,"options":null,"body":null,"trueBody":null,"falseBody":null,"expression":null,"condition":null,"initializationExpression":null,"leftExpression":null,"rightExpression":null,"subExpression":null,"trueExpression":null,"falseExpression":null,"loopExpression":null,"baseExpression":null,"indexExpression":null,"startExpression":null,"endExpression":null,"value":null,"initialValue":null,"externalCall":null,"eventCall":null,"errorCall":null,"leftHandSide":null,"rightHandSide":null,"length":null},"trueBody":null,"falseBody":null,"expression":null,"condition":null,"initializationExpression":null,"leftExpression":null,"rightExpression":null,"subExpression":null,"trueExpression":null,"falseExpression":null,"loopExpression":null,"baseExpression":null,"indexExpression":null,"startExpression":null,"endExpression":null,"value":null,"initialValue":null,"externalCall":null,"eventCall":null,"errorCall":null,"leftHandSide":null,"rightHandSide":null,"length":null},{"nodeType":"FunctionDefinition","name":"_beforeTokenTransfer","src":"12180:121:0","memberName":null,"functionName":null,"AST":null,"nodes":null,"statements":null,"arguments":null,"declarations":null,"members":null,"components":null,"clauses":null,"options":null,"body":{"nodeType":"Block","name":null,"src":"12299:2:0","memberName":null,"functionName":null,"AST":null,"nodes":null,"statements":[],"arguments":null,"declarations":null,"members":null,"components":null,"clauses":null,"options":null,"body":null,"trueBody":null,"falseBody":null,"expression":null,"condition":null,"initializationExpression":null,"leftExpression":null,"rightExpression":null,"subExpression":null,"trueExpression":null,"falseExpression":null,"loopExpression":null,"baseExpression":null,"indexExpression":null,"startExpression":null,"endExpression":null,"value":null,"initialValue":null,"externalCall":null,"eventCall":null,"errorCall":null,"leftHandSide":null,"rightHandSide":null,"length":null},"trueBody":null,"falseBody":null,"expression":null,"condition":null,"initializationExpression":null,"leftExpression":null,"rightExpression":null,"subExpression":null,"trueExpression":null,"falseExpression":null,"loopExpression":null,"baseExpression":null,"indexExpression":null,"startExpression":null,"endExpression":null,"value":null,"initialValue":null,"externalCall":null,"eventCall":null,"errorCall":null,"leftHandSide":null,"rightHandSide":null,"length":null},{"nodeType":"FunctionDefinition","name":"_afterTokenTransfer","src":"12889:120:0","memberName":null,"functionName":null,"AST":null,"nodes":null,"statements":null,"arguments":null,"declarations":null,"members":null,"components":null,"clauses":null,"options":null,"body":{"nodeType":"Block","name":null,"src":"13007:2:0","memberName":null,"functionName":null,"AST":null,"nodes":null,"statements":[],"arguments":null,"declarations":null,"members":null,"components":null,"clauses":null,"options":null,"body":null,"trueBody":null,"falseBody":null,"expression":null,"condition":null,"initializationExpression":null,"leftExpression":null,"rightExpression":null,"subExpression":null,"trueExpression":null,"falseExpression":null,"loopExpression":null,"baseExpression":null,"indexExpression":null,"startExpression":null,"endExpression":null,"value":null,"initialValue":null,"externalCall":null,"eventCall":null,"errorCall":null,"leftHandSide":null,"rightHandSide":null,"length":null},"trueBody":null,"falseBody":null,"expression":null,"condition":null,"initializationExpression":null,"leftExpression":null,"rightExpression":null,"subExpression":null,"trueExpression":null,"falseExpression":null,"loopExpression":null,"baseExpression":null,"indexExpression":null,"startExpression":null,"endExpression":null,"value":null,"initialValue":null,"externalCall":null,"eventCall":null,"errorCall":null,"leftHandSide":null,"rightHandSide":null,"length":null}],"statements":null,"arguments":null,"declarations":null,"members":null,"components":null,"clauses":null,"options":null,"body":null,"trueBody":null,"falseBody":null,"expression":null,"condition":null,"initializationExpression":null,"leftExpression":null,"rightExpression":null,"subExpression":null,"trueExpression":null,"falseExpression":null,"loopExpression":null,"baseExpression":null,"indexExpression":null,"startExpression":null,"endExpression":null,"value":null,"initialValue":null,"externalCall":null,"eventCall":null,"errorCall":null,"leftHandSide":null,"rightHandSide":null,"length":null}],"statements":null,"arguments":null,"declarations":null,"members":null,"components":null,"clauses":null,"options":null,"body":null,"trueBody":null,"falseBody":null,"expression":null,"condition":null,"initializationExpression":null,"leftExpression":null,"rightExpression":null,"subExpression":null,"trueExpression":null,"falseExpression":null,"loopExpression":null,"baseExpression":null,"indexExpression":null,"startExpression":null,"endExpression":null,"value":null,"initialValue":null,"externalCall":null,"eventCall":null,"errorCall":null,"leftHandSide":null,"rightHandSide":null,"length":null}},"@openzeppelin/contracts/token/ERC20/IERC20.sol":{"id":1,"ast":{"nodeType":"SourceUnit","name":null,"src":"106:2661:1","memberName":null,"functionName":null,"AST":null,"nodes":[{"nodeType":"PragmaDirective","name":null,"src":"106:23:1","memberName":null,"functionName":null,"AST":null,"nodes":null,"statements":null,"arguments":null,"declarations":null,"members":null,"components":null,"clauses":null,"options":null,"body":null,"trueBody":null,"falseBody":null,"expression":null,"condition":null,"initializationExpression":null,"leftExpression":null,"rightExpression":null,"subExpression":null,"trueExpression":null,"falseExpression":null,"loopExpression":null,"baseExpression":null,"indexExpression":null,"startExpression":null,"endExpression":null,"value":null,"initialValue":null,"externalCall":null,"eventCall":null,"errorCall":null,"leftHandSide":null,"rightHandSide":null,"length":null},{"nodeType":"ContractDefinition","name":"IERC20","src":"202:2564:1","memberName":null,"functionName":null,"AST":null,"nodes":[{"nodeType":"EventDefinition","name":"Transfer","src":"388:72:1","memberName":null,"functionName":null,"AST":null,"nodes":null,"statements":null,"arguments":null,"declarations":null,"members":null,"components":null,"clauses":null,"options":null,"body":null,"trueBody":null,"falseBody":null,"expression":null,"condition":null,"initializationExpression":null,"leftExpression":null,"rightExpression":null,"subExpression":null,"trueExpression":null,"falseExpression":null,"loopExpression":null,"baseExpression":null,"indexExpression":null,"startExpression":null,"endExpression":null,"value":null,"initialValue":null,"externalCall":null,"eventCall":null,"errorCall":null,"leftHandSide":null,"rightHandSide":null,"length":null},{"nodeType":"EventDefinition","name":"Approval","src":"619:78:1","memberName":null,"functionName":null,"AST":null,"nodes":null,"statements":null,"arguments":null,"declarations":null,"members":null,"components":null,"clauses":null,"options":null,"body":null,"trueBody":null,"falseBody":null,"expression":null,"condition":null,"initializationExpression":null,"leftExpression":null,"rightExpression":null,"subExpression":null,"trueExpression":null,"falseExpression":null,"loopExpression":null,"baseExpression":null,"indexExpression":null,"startExpression":null,"endExpression":null,"value":null,"initialValue":null,"externalCall":null,"eventCall":null,"errorCall":null,"leftHandSide":null,"rightHandSide":null,"length":null},{"nodeType":"FunctionDefinition","name":"totalSupply","src":"774:55:1","memberName":null,"functionName":null,"AST":null,"nodes":null,"statements":null,"arguments":null,"declarations":null,"members":null,"components":null,"clauses":null,"options":null,"body":null,"trueBody":null,"falseBody":null,"expression":null,"condition":null,"initializationExpression":null,"leftExpression":null,"rightExpression":null,"subExpression":null,"trueExpression":null,"falseExpression":null,"loopExpression":null,"baseExpression":null,"indexExpression":null,"startExpression":null,"endExpression":null,"value":null,"initialValue":null,"externalCall":null,"eventCall":null,"errorCall":null,"leftHandSide":null,"rightHandSide":null,"length":null},{"nodeType":"FunctionDefinition","name":"balanceOf","src":"912:68:1","memberName":null,"functionName":null,"AST":null,"nodes":null,"statements":null,"arguments":null,"declarations":null,"members":null,"components":null,"clauses":null,"options":null,"body":null,"trueBody":null,"falseBody":null,"expression":null,"condition":null,"initializationExpression":null,"leftExpression":null,"rightExpression":null,"subExpression":null,"trueExpression":null,"falseExpression":null,"loopExpression":null,"baseExpression":null,"indexExpression":null,"startExpression":null,"endExpression":null,"value":null,"initialValue":null,"externalCall":null,"eventCall":null,"errorCall":null,"leftHandSide":null,"rightHandSide":null,"length":null},{"nodeType":"FunctionDefinition","name":"transfer","src":"1193:70:1","memberName":null,"functionName":null,"AST":null,"nodes":null,"statements":null,"arguments":null,"declarations":null,"members":null,"components":null,"clauses":null,"options":null,"body":null,"trueBody":null,"falseBody":null,"expression":null,"condition":null,"initializationExpression":null,"leftExpression":null,"rightExpression":null,"subExpression":null,"trueExpression":null,"falseExpression":null,"loopExpression":null,"baseExpression":null,"indexExpression":null,"startExpression":null,"endExpression":null,"value":null,"initialValue":null,"externalCall":null,"eventCall":null,"errorCall":null,"leftHandSide":null,"rightHandSide":null,"length":null},{"nodeType":"FunctionDefinition","name":"allowance","src":"1538:83:1","memberName":null,"functionName":null,"AST":null,"nodes":null,"statements":null,"arguments":null,"declarations":null,"members":null,"components":null,"clauses":null,"options":null,"body":null,"trueBody":null,"falseBody":null,"expression":null,"condition":null,"initializationExpression":null,"leftExpression":null,"rightExpression":null,"subExpression":null,"trueExpression":null,"falseExpression":null,"loopExpression":null,"baseExpression":null,"indexExpression":null,"startExpression":null,"endExpression":null,"value":null,"initialValue":null,"externalCall":null,"eventCall":null,"errorCall":null,"leftHandSide":null,"rightHandSide":null,"length":null},{"nodeType":"FunctionDefinition","name":"approve","src":"2274:74:1","memberName":null,"functionName":null,"AST":null,"nodes":null,"statements":null,"arguments":null,"declarations":null,"members":null,"components":null,"clauses":null,"options":null,"body":null,"trueBody":null,"falseBody":null,"expression":null,"condition":null,"initializationExpression":null,"leftExpression":null,"rightExpression":null,"subExpression":null,"trueExpression":null,"falseExpression":null,"loopExpression":null,"baseExpression":null,"indexExpression":null,"startExpression":null,"endExpression":null,"value":null,"initialValue":null,"externalCall":null,"eventCall":null,"errorCall":null,"leftHandSide":null,"rightHandSide":null,"length":null},{"nodeType":"FunctionDefinition","name":"transferFrom","src":"2646:118:1","memberName":null,"functionName":null,"AST":null,"nodes":null,"statements":null,"arguments":null,"declarations":null,"members":null,"components":null,"clauses":null,"options":null,"body":null,"trueBody":null,"falseBody":null,"expression":null,"condition":null,"initializationExpression":null,"leftExpression":null,"rightExpression":null,"subExpression":null,"trueExpression":null,"falseExpression":null,"loopExpression":null,"baseExpression":null,"indexExpression":null,"startExpression":null,"endExpression":null,"value":null,"initialValue":null,"externalCall":null,"eventCall":null,"errorCall":null,"leftHandSide":null,"rightHandSide":null,"length":null}],"statements":null,"arguments":null,"declarations":null,"members":null,"components":null,"clauses":null,"options":null,"body":null,"trueBody":null,"falseBody":null,"expression":null,"condition":null,"initializationExpression":null,"leftExpression":null,"rightExpression":null,"subExpression":null,"trueExpression":null,"falseExpression":null,"loopExpression":null,"baseExpression":null,"indexExpression":null,"startExpression":null,"endExpression":null,"value":null,"initialValue":null,"externalCall":null,"eventCall":null,"errorCall":null,"leftHandSide":null,"rightHandSide":null,"length":null}],"statements":null,"arguments":null,"declarations":null,"members":null,"components":null,"clauses":null,"options":null,"body":null,"trueBody":null,"falseBody":null,"expression":null,"condition":null,"initializationExpression":null,"leftExpression":null,"rightExpression":null,"subExpression":null,"trueExpression":null,"falseExpression":null,"loopExpression":null,"baseExpression":null,"indexExpression":null,"startExpression":null,"endExpression":null,"value":null,"initialValue":null,"externalCall":null,"eventCall":null,"errorCall":null,"leftHandSide":null,"rightHandSide":null,"length":null}},"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol":{"id":2,"ast":{"nodeType":"SourceUnit","name":null,"src":"110:573:2","memberName":null,"functionName":null,"AST":null,"nodes":[{"nodeType":"PragmaDirective","name":null,"src":"110:23:2","memberName":null,"functionName":null,"AST":null,"nodes":null,"statements":null,"arguments":null,"declarations":null,"members":null,"components":null,"clauses":null,"options":null,"body":null,"trueBody":null,"falseBody":null,"expression":null,"condition":null,"initializationExpression":null,"leftExpression":null,"rightExpression":null,"subExpression":null,"trueExpression":null,"falseExpression":null,"loopExpression":null,"baseExpression":null,"indexExpression":null,"startExpression":null,"endExpression":null,"value":null,"initialValue":null,"externalCall":null,"eventCall":null,"errorCall":null,"leftHandSide":null,"rightHandSide":null,"length":null},{"nodeType":"ImportDirective","name":null,"src":"135:23:2","memberName":null,"functionName":null,"AST":null,"nodes":null,"statements":null,"arguments":null,"declarations":null,"members":null,"components":null,"clauses":null,"options":null,"body":null,"trueBody":null,"falseBody":null,"expression":null,"condition":null,"initializationExpression":null,"leftExpression":null,"rightExpression":null,"subExpression":null,"trueExpression":null,"falseExpression":null,"loopExpression":null,"baseExpression":null,"indexExpression":null,"startExpression":null,"endExpression":null,"value":null,"initialValue":null,"externalCall":null,"eventCall":null,"errorCall":null,"leftHandSide":null,"rightHandSide":null,"length":null},{"nodeType":"ContractDefinition","name":"IERC20Metadata","src":"277:405:2","memberName":null,"functionName":null,"AST":null,"nodes":[{"nodeType":"FunctionDefinition","name":"name","src":"377:54:2","memberName":null,"functionName":null,"AST":null,"nodes":null,"statements":null,"arguments":null,"declarations":null,"members":null,"components":null,"clauses":null,"options":null,"body":null,"trueBody":null,"falseBody":null,"expression":null,"condition":null,"initializationExpression":null,"leftExpression":null,"rightExpression":null,"subExpression":null,"trueExpression":null,"falseExpression":null,"loopExpression":null,"baseExpression":null,"indexExpression":null,"startExpression":null,"endExpression":null,"value":null,"initialValue":null,"externalCall":null,"eventCall":null,"errorCall":null,"leftHandSide":null,"rightHandSide":null,"length":null},{"nodeType":"FunctionDefinition","name":"symbol","src":"498:56:2","memberName":null,"functionName":null,"AST":null,"nodes":null,"statements":null,"arguments":null,"declarations":null,"members":null,"components":null,"clauses":null,"options":null,"body":null,"trueBody":null,"falseBody":null,"expression":null,"condition":null,"initializationExpression":null,"leftExpression":null,"rightExpression":null,"subExpression":null,"trueExpression":null,"falseExpression":null,"loopExpression":null,"baseExpression":null,"indexExpression":null,"startExpression":null,"endExpression":null,"value":null,"initialValue":null,"externalCall":null,"eventCall":null,"errorCall":null,"leftHandSide":null,"rightHandSide":null,"length":null},{"nodeType":"FunctionDefinition","name":"decimals","src":"630:50:2","memberName":null,"functionName":null,"AST":null,"nodes":null,"statements":null,"arguments":null,"declarations":null,"members":null,"components":null,"clauses":null,"options":null,"body":null,"trueBody":null,"falseBody":null,"expression":null,"condition":null,"initializationExpression":null,"leftExpression":null,"rightExpression":null,"subExpression":null,"trueExpression":null,"falseExpression":null,"loopExpression":null,"baseExpression":null,"indexExpression":null,"startExpression":null,"endExpression":null,"value":null,"initialValue":null,"externalCall":null,"eventCall":null,"errorCall":null,"leftHandSide":null,"rightHandSide":null,"length":null}],"statements":null,"arguments":null,"declarations":null,"members":null,"components":null,"clauses":null,"options":null,"body":null,"trueBody":null,"falseBody":null,"expression":null,"condition":null,"initializationExpression":null,"leftExpression":null,"rightExpression":null,"subExpression":null,"trueExpression":null,"falseExpression":null,"loopExpression":null,"baseExpression":null,"indexExpression":null,"startExpression":null,"endExpression":null,"value":null,"initialValue":null,"externalCall":null,"eventCall":null,"errorCall":null,"leftHandSide":null,"rightHandSide":null,"length":null}],"statements":null,"arguments":null,"declarations":null,"members":null,"components":null,"clauses":null,"options":null,"body":null,"trueBody":null,"falseBody":null,"expression":null,"condition":null,"initializationExpression":null,"leftExpression":null,"rightExpression":null,"subExpression":null,"trueExpression":null,"falseExpression":null,"loopExpression":null,"baseExpression":null,"indexExpression":null,"startExpression":null,"endExpression":null,"value":null,"initialValue":null,"externalCall":null,"eventCall":null,"errorCall":null,"leftHandSide":null,"rightHandSide":null,"length":null}},"@openzeppelin/contracts/utils/Context.sol":{"id":3,"ast":{"nodeType":"SourceUnit","name":null,"src":"86:758:3","memberName":null,"functionName":null,"AST":null,"nodes":[{"nodeType":"PragmaDirective","name":null,"src":"86:23:3","memberName":null,"functionName":null,"AST":null,"nodes":null,"statements":null,"arguments":null,"declarations":null,"members":null,"components":null,"clauses":null,"options":null,"body":null,"trueBody":null,"falseBody":null,"expression":null,"condition":null,"initializationExpression":null,"leftExpression":null,"rightExpression":null,"subExpression":null,"trueExpression":null,"falseExpression":null,"loopExpression":null,"baseExpression":null,"indexExpression":null,"startExpression":null,"endExpression":null,"value":null,"initialValue":null,"externalCall":null,"eventCall":null,"errorCall":null,"leftHandSide":null,"rightHandSide":null,"length":null},{"nodeType":"ContractDefinition","name":"Context","src":"608:235:3","memberName":null,"functionName":null,"AST":null,"nodes":[{"nodeType":"FunctionDefinition","name":"_msgSender","src":"640:96:3","memberName":null,"functionName":null,"AST":null,"nodes":null,"statements":null,"arguments":null,"declarations":null,"members":null,"components":null,"clauses":null,"options":null,"body":{"nodeType":"Block","name":null,"src":"702:34:3","memberName":null,"functionName":null,"AST":null,"nodes":null,"statements":[{"nodeType":"Return","name":null,"src":"712:17:3","memberName":null,"functionName":null,"AST":null,"nodes":null,"statements":null,"arguments":null,"declarations":null,"members":null,"components":null,"clauses":null,"options":null,"body":null,"trueBody":null,"falseBody":null,"expression":{"nodeType":"MemberAccess","name":null,"src":"719:10:3","memberName":"sender","functionName":null,"AST":null,"nodes":null,"statements":null,"arguments":null,"declarations":null,"members":null,"components":null,"clauses":null,"options":null,"body":null,"trueBody":null,"falseBody":null,"expression":{"nodeType":"Identifier","name":"msg","src":"719:3:3","memberName":null,"functionName":null,"AST":null,"nodes":null,"statements":null,"arguments":null,"declarations":null,"members":null,"components":null,"clauses":null,"options":null,"body":null,"trueBody":null,"falseBody":null,"expression":null,"condition":null,"initializationExpression":null,"leftExpression":null,"rightExpression":null,"subExpression":null,"trueExpression":null,"falseExpression":null,"loopExpression":null,"baseExpression":null,"indexExpression":null,"startExpression":null,"endExpression":null,"value":null,"initialValue":null,"externalCall":null,"eventCall":null,"errorCall":null,"leftHandSide":null,"rightHandSide":null,"length":null},"condition":null,"initializationExpression":null,"leftExpression":null,"rightExpression":null,"subExpression":null,"trueExpression":null,"falseExpression":null,"loopExpression":null,"baseExpression":null,"indexExpression":null,"startExpression":null,"endExpression":null,"value":null,"initialValue":null,"externalCall":null,"eventCall":null,"errorCall":null,"leftHandSide":null,"rightHandSide":null,"length":null},"condition":null,"initializationExpression":null,"leftExpression":null,"rightExpression":null,"subExpression":null,"trueExpression":null,"falseExpression":null,"loopExpression":null,"baseExpression":null,"indexExpression":null,"startExpression":null,"endExpression":null,"value":null,"initialValue":null,"externalCall":null,"eventCall":null,"errorCall":null,"leftHandSide":null,"rightHandSide":null,"length":null}],"arguments":null,"declarations":null,"members":null,"components":null,"clauses":null,"options":null,"body":null,"trueBody":null,"falseBody":null,"expression":null,"condition":null,"initializationExpression":null,"leftExpression":null,"rightExpression":null,"subExpression":null,"trueExpression":null,"falseExpression":null,"loopExpression":null,"baseExpression":null,"indexExpression":null,"startExpression":null,"endExpression":null,"value":null,"initialValue":null,"externalCall":null,"eventCall":null,"errorCall":null,"leftHandSide":null,"rightHandSide":null,"length":null},"trueBody":null,"falseBody":null,"expression":null,"condition":null,"initializationExpression":null,"leftExpression":null,"rightExpression":null,"subExpression":null,"trueExpression":null,"falseExpression":null,"loopExpression":null,"baseExpression":null,"indexExpression":null,"startExpression":null,"endExpression":null,"value":null,"initialValue":null,"externalCall":null,"eventCall":null,"errorCall":null,"leftHandSide":null,"rightHandSide":null,"length":null},{"nodeType":"FunctionDefinition","name":"_msgData","src":"742:99:3","memberName":null,"functionName":null,"AST":null,"nodes":null,"statements":null,"arguments":null,"declarations":null,"members":null,"components":null,"clauses":null,"options":null,"body":{"nodeType":"Block","name":null,"src":"809:32:3","memberName":null,"functionName":null,"AST":null,"nodes":null,"statements":[{"nodeType":"Return","name":null,"src":"819:15:3","memberName":null,"functionName":null,"AST":null,"nodes":null,"statements":null,"arguments":null,"declarations":null,"members":null,"components":null,"clauses":null,"options":null,"body":null,"trueBody":null,"falseBody":null,"expression":{"nodeType":"MemberAccess","name":null,"src":"826:8:3","memberName":"data","functionName":null,"AST":null,"nodes":null,"statements":null,"arguments":null,"declarations":null,"members":null,"components":null,"clauses":null,"options":null,"body":null,"trueBody":null,"falseBody":null,"expression":{"nodeType":"Identifier","name":"msg","src":"826:3:3","memberName":null,"functionName":null,"AST":null,"nodes":null,"statements":null,"arguments":null,"declarations":null,"members":null,"components":null,"clauses":null,"options":null,"body":null,"trueBody":null,"falseBody":null,"expression":null,"condition":null,"initializationExpression":null,"leftExpression":null,"rightExpression":null,"subExpression":null,"trueExpression":null,"falseExpression":null,"loopExpression":null,"baseExpression":null,"indexExpression":null,"startExpression":null,"endExpression":null,"value":null,"initialValue":null,"externalCall":null,"eventCall":null,"errorCall":null,"leftHandSide":null,"rightHandSide":null,"length":null},"condition":null,"initializationExpression":null,"leftExpression":null,"rightExpression":null,"subExpression":null,"trueExpression":null,"falseExpression":null,"loopExpression":null,"baseExpression":null,"indexExpression":null,"startExpression":null,"endExpression":null,"value":null,"initialValue":null,"externalCall":null,"eventCall":null,"errorCall":null,"leftHandSide":null,"rightHandSide":null,"length":null},"condition":null,"initializationExpression":null,"leftExpression":null,"rightExpression":null,"subExpression":null,"trueExpression":null,"falseExpression":null,"loopExpression":null,"baseExpression":null,"indexExpression":null,"startExpression":null,"endExpression":null,"value":null,"initialValue":null,"externalCall":null,"eventCall":null,"errorCall":null,"leftHandSide":null,"rightHandSide":null,"length":null}],"arguments":null,"declarations":null,"members":null,"components":null,"clauses":null,"options":null,"body":null,"trueBody":null,"falseBody":null,"expression":null,"condition":null,"initializationExpression":null,"leftExpression":null,"rightExpression":null,"subExpression":null,"trueExpression":null,"falseExpression":null,"loopExpression":null,"baseExpression":null,"indexExpression":null,"startExpression":null,"endExpression":null,"value":null,"initialValue":null,"externalCall":null,"eventCall":null,"errorCall":null,"leftHandSide":null,"rightHandSide":null,"length":null},"trueBody":null,"falseBody":null,"expression":null,"condition":null,"initializationExpression":null,"leftExpression":null,"rightExpression":null,"subExpression":null,"trueExpression":null,"falseExpression":null,"loopExpression":null,"baseExpression":null,"indexExpression":null,"startExpression":null,"endExpression":null,"value":null,"initialValue":null,"externalCall":null,"eventCall":null,"errorCall":null,"leftHandSide":null,"rightHandSide":null,"length":null}],"statements":null,"arguments":null,"declarations":null,"members":null,"components":null,"clauses":null,"options":null,"body":null,"trueBody":null,"falseBody":null,"expression":null,"condition":null,"initializationExpression":null,"leftExpression":null,"rightExpression":null,"subExpression":null,"trueExpression":null,"falseExpression":null,"loopExpression":null,"baseExpression":null,"indexExpression":null,"startExpression":null,"endExpression":null,"value":null,"initialValue":null,"externalCall":null,"eventCall":null,"errorCall":null,"leftHandSide":null,"rightHandSide":null,"length":null}],"statements":null,"arguments":null,"declarations":null,"members":null,"components":null,"clauses":null,"options":null,"body":null,"trueBody":null,"falseBody":null,"expression":null,"condition":null,"initializationExpression":null,"leftExpression":null,"rightExpression":null,"subExpression":null,"trueExpression":null,"falseExpression":null,"loopExpression":null,"baseExpression":null,"indexExpression":null,"startExpression":null,"endExpression":null,"value":null,"initialValue":null,"externalCall":null,"eventCall":null,"errorCall":null,"leftHandSide":null,"rightHandSide":null,"length":null}},"contracts/Greeter.sol":{"id":4,"ast":{"nodeType":"SourceUnit","name":null,"src":"38:368:4","memberName":null,"functionName":null,"AST":null,"nodes":[{"nodeType":"PragmaDirective","name":null,"src":"38:31:4","memberName":null,"functionName":null,"AST":null,"nodes":null,"statements":null,"arguments":null,"declarations":null,"members":null,"components":null,"clauses":null,"options":null,"body":null,"trueBody":null,"falseBody":null,"expression":null,"condition":null,"initializationExpression":null,"leftExpression":null,"rightExpression":null,"subExpression":null,"trueExpression":null,"falseExpression":null,"loopExpression":null,"baseExpression":null,"indexExpression":null,"startExpression":null,"endExpression":null,"value":null,"initialValue":null,"externalCall":null,"eventCall":null,"errorCall":null,"leftHandSide":null,"rightHandSide":null,"length":null},{"nodeType":"ContractDefinition","name":"Greeter","src":"73:331:4","memberName":null,"functionName":null,"AST":null,"nodes":[{"nodeType":"VariableDeclaration","name":"greeting","src":"97:23:4","memberName":null,"functionName":null,"AST":null,"nodes":null,"statements":null,"arguments":null,"declarations":null,"members":null,"components":null,"clauses":null,"options":null,"body":null,"trueBody":null,"falseBody":null,"expression":null,"condition":null,"initializationExpression":null,"leftExpression":null,"rightExpression":null,"subExpression":null,"trueExpression":null,"falseExpression":null,"loopExpression":null,"baseExpression":null,"indexExpression":null,"startExpression":null,"endExpression":null,"value":null,"initialValue":null,"externalCall":null,"eventCall":null,"errorCall":null,"leftHandSide":null,"rightHandSide":null,"length":null},{"nodeType":"FunctionDefinition","name":"","src":"129:77:4","memberName":null,"functionName":null,"AST":null,"nodes":null,"statements":null,"arguments":null,"declarations":null,"members":null,"components":null,"clauses":null,"options":null,"body":{"nodeType":"Block","name":null,"src":"167:39:4","memberName":null,"functionName":null,"AST":null,"nodes":null,"statements":[{"nodeType":"ExpressionStatement","name":null,"src":"178:20:4","memberName":null,"functionName":null,"AST":null,"nodes":null,"statements":null,"arguments":null,"declarations":null,"members":null,"components":null,"clauses":null,"options":null,"body":null,"trueBody":null,"falseBody":null,"expression":{"nodeType":"Assignment","name":null,"src":"178:20:4","memberName":null,"functionName":null,"AST":null,"nodes":null,"statements":null,"arguments":null,"declarations":null,"members":null,"components":null,"clauses":null,"options":null,"body":null,"trueBody":null,"falseBody":null,"expression":null,"condition":null,"initializationExpression":null,"leftExpression":null,"rightExpression":null,"subExpression":null,"trueExpression":null,"falseExpression":null,"loopExpression":null,"baseExpression":null,"indexExpression":null,"startExpression":null,"endExpression":null,"value":null,"initialValue":null,"externalCall":null,"eventCall":null,"errorCall":null,"leftHandSide":{"nodeType":"Identifier","name":"greeting","src":"178:8:4","memberName":null,"functionName":null,"AST":null,"nodes":null,"statements":null,"arguments":null,"declarations":null,"members":null,"components":null,"clauses":null,"options":null,"body":null,"trueBody":null,"falseBody":null,"expression":null,"condition":null,"initializationExpression":null,"leftExpression":null,"rightExpression":null,"subExpression":null,"trueExpression":null,"falseExpression":null,"loopExpression":null,"baseExpression":null,"indexExpression":null,"startExpression":null,"endExpression":null,"value":null,"initialValue":null,"externalCall":null,"eventCall":null,"errorCall":null,"leftHandSide":null,"rightHandSide":null,"length":null},"rightHandSide":{"nodeType":"Identifier","name":"_greeting","src":"189:9:4","memberName":null,"functionName":null,"AST":null,"nodes":null,"statements":null,"arguments":null,"declarations":null,"members":null,"components":null,"clauses":null,"options":null,"body":null,"trueBody":null,"falseBody":null,"expression":null,"condition":null,"initializationExpression":null,"leftExpression":null,"rightExpression":null,"subExpression":null,"trueExpression":null,"falseExpression":null,"loopExpression":null,"baseExpression":null,"indexExpression":null,"startExpression":null,"endExpression":null,"value":null,"initialValue":null,"externalCall":null,"eventCall":null,"errorCall":null,"leftHandSide":null,"rightHandSide":null,"length":null},"length":null},"condition":null,"initializationExpression":null,"leftExpression":null,"rightExpression":null,"subExpression":null,"trueExpression":null,"falseExpression":null,"loopExpression":null,"baseExpression":null,"indexExpression":null,"startExpression":null,"endExpression":null,"value":null,"initialValue":null,"externalCall":null,"eventCall":null,"errorCall":null,"leftHandSide":null,"rightHandSide":null,"length":null}],"arguments":null,"declarations":null,"members":null,"components":null,"clauses":null,"options":null,"body":null,"trueBody":null,"falseBody":null,"expression":null,"condition":null,"initializationExpression":null,"leftExpression":null,"rightExpression":null,"subExpression":null,"trueExpression":null,"falseExpression":null,"loopExpression":null,"baseExpression":null,"indexExpression":null,"startExpression":null,"endExpression":null,"value":null,"initialValue":null,"externalCall":null,"eventCall":null,"errorCall":null,"leftHandSide":null,"rightHandSide":null,"length":null},"trueBody":null,"falseBody":null,"expression":null,"condition":null,"initializationExpression":null,"leftExpression":null,"rightExpression":null,"subExpression":null,"trueExpression":null,"falseExpression":null,"loopExpression":null,"baseExpression":null,"indexExpression":null,"startExpression":null,"endExpression":null,"value":null,"initialValue":null,"externalCall":null,"eventCall":null,"errorCall":null,"leftHandSide":null,"rightHandSide":null,"length":null},{"nodeType":"FunctionDefinition","name":"greet","src":"214:87:4","memberName":null,"functionName":null,"AST":null,"nodes":null,"statements":null,"arguments":null,"declarations":null,"members":null,"components":null,"clauses":null,"options":null,"body":{"nodeType":"Block","name":null,"src":"267:34:4","memberName":null,"functionName":null,"AST":null,"nodes":null,"statements":[{"nodeType":"Return","name":null,"src":"278:15:4","memberName":null,"functionName":null,"AST":null,"nodes":null,"statements":null,"arguments":null,"declarations":null,"members":null,"components":null,"clauses":null,"options":null,"body":null,"trueBody":null,"falseBody":null,"expression":{"nodeType":"Identifier","name":"greeting","src":"285:8:4","memberName":null,"functionName":null,"AST":null,"nodes":null,"statements":null,"arguments":null,"declarations":null,"members":null,"components":null,"clauses":null,"options":null,"body":null,"trueBody":null,"falseBody":null,"expression":null,"condition":null,"initializationExpression":null,"leftExpression":null,"rightExpression":null,"subExpression":null,"trueExpression":null,"falseExpression":null,"loopExpression":null,"baseExpression":null,"indexExpression":null,"startExpression":null,"endExpression":null,"value":null,"initialValue":null,"externalCall":null,"eventCall":null,"errorCall":null,"leftHandSide":null,"rightHandSide":null,"length":null},"condition":null,"initializationExpression":null,"leftExpression":null,"rightExpression":null,"subExpression":null,"trueExpression":null,"falseExpression":null,"loopExpression":null,"baseExpression":null,"indexExpression":null,"startExpression":null,"endExpression":null,"value":null,"initialValue":null,"externalCall":null,"eventCall":null,"errorCall":null,"leftHandSide":null,"rightHandSide":null,"length":null}],"arguments":null,"declarations":null,"members":null,"components":null,"clauses":null,"options":null,"body":null,"trueBody":null,"falseBody":null,"expression":null,"condition":null,"initializationExpression":null,"leftExpression":null,"rightExpression":null,"subExpression":null,"trueExpression":null,"falseExpression":null,"loopExpression":null,"baseExpression":null,"indexExpression":null,"startExpression":null,"endExpression":null,"value":null,"initialValue":null,"externalCall":null,"eventCall":null,"errorCall":null,"leftHandSide":null,"rightHandSide":null,"length":null},"trueBody":null,"falseBody":null,"expression":null,"condition":null,"initializationExpression":null,"leftExpression":null,"rightExpression":null,"subExpression":null,"trueExpression":null,"falseExpression":null,"loopExpression":null,"baseExpression":null,"indexExpression":null,"startExpression":null,"endExpression":null,"value":null,"initialValue":null,"externalCall":null,"eventCall":null,"errorCall":null,"leftHandSide":null,"rightHandSide":null,"length":null},{"nodeType":"FunctionDefinition","name":"setGreeting","src":"309:92:4","memberName":null,"functionName":null,"AST":null,"nodes":null,"statements":null,"arguments":null,"declarations":null,"members":null,"components":null,"clauses":null,"options":null,"body":{"nodeType":"Block","name":null,"src":"362:39:4","memberName":null,"functionName":null,"AST":null,"nodes":null,"statements":[{"nodeType":"ExpressionStatement","name":null,"src":"373:20:4","memberName":null,"functionName":null,"AST":null,"nodes":null,"statements":null,"arguments":null,"declarations":null,"members":null,"components":null,"clauses":null,"options":null,"body":null,"trueBody":null,"falseBody":null,"expression":{"nodeType":"Assignment","name":null,"src":"373:20:4","memberName":null,"functionName":null,"AST":null,"nodes":null,"statements":null,"arguments":null,"declarations":null,"members":null,"components":null,"clauses":null,"options":null,"body":null,"trueBody":null,"falseBody":null,"expression":null,"condition":null,"initializationExpression":null,"leftExpression":null,"rightExpression":null,"subExpression":null,"trueExpression":null,"falseExpression":null,"loopExpression":null,"baseExpression":null,"indexExpression":null,"startExpression":null,"endExpression":null,"value":null,"initialValue":null,"externalCall":null,"eventCall":null,"errorCall":null,"leftHandSide":{"nodeType":"Identifier","name":"greeting","src":"373:8:4","memberName":null,"functionName":null,"AST":null,"nodes":null,"statements":null,"arguments":null,"declarations":null,"members":null,"components":null,"clauses":null,"options":null,"body":null,"trueBody":null,"falseBody":null,"expression":null,"condition":null,"initializationExpression":null,"leftExpression":null,"rightExpression":null,"subExpression":null,"trueExpression":null,"falseExpression":null,"loopExpression":null,"baseExpression":null,"indexExpression":null,"startExpression":null,"endExpression":null,"value":null,"initialValue":null,"externalCall":null,"eventCall":null,"errorCall":null,"leftHandSide":null,"rightHandSide":null,"length":null},"rightHandSide":{"nodeType":"Identifier","name":"_greeting","src":"384:9:4","memberName":null,"functionName":null,"AST":null,"nodes":null,"statements":null,"arguments":null,"declarations":null,"members":null,"components":null,"clauses":null,"options":null,"body":null,"trueBody":null,"falseBody":null,"expression":null,"condition":null,"initializationExpression":null,"leftExpression":null,"rightExpression":null,"subExpression":null,"trueExpression":null,"falseExpression":null,"loopExpression":null,"baseExpression":null,"indexExpression":null,"startExpression":null,"endExpression":null,"value":null,"initialValue":null,"externalCall":null,"eventCall":null,"errorCall":null,"leftHandSide":null,"rightHandSide":null,"length":null},"length":null},"condition":null,"initializationExpression":null,"leftExpression":null,"rightExpression":null,"subExpression":null,"trueExpression":null,"falseExpression":null,"loopExpression":null,"baseExpression":null,"indexExpression":null,"startExpression":null,"endExpression":null,"value":null,"initialValue":null,"externalCall":null,"eventCall":null,"errorCall":null,"leftHandSide":null,"rightHandSide":null,"length":null}],"arguments":null,"declarations":null,"members":null,"components":null,"clauses":null,"options":null,"body":null,"trueBody":null,"falseBody":null,"expression":null,"condition":null,"initializationExpression":null,"leftExpression":null,"rightExpression":null,"subExpression":null,"trueExpression":null,"falseExpression":null,"loopExpression":null,"baseExpression":null,"indexExpression":null,"startExpression":null,"endExpression":null,"value":null,"initialValue":null,"externalCall":null,"eventCall":null,"errorCall":null,"leftHandSide":null,"rightHandSide":null,"length":null},"trueBody":null,"falseBody":null,"expression":null,"condition":null,"initializationExpression":null,"leftExpression":null,"rightExpression":null,"subExpression":null,"trueExpression":null,"falseExpression":null,"loopExpression":null,"baseExpression":null,"indexExpression":null,"startExpression":null,"endExpression":null,"value":null,"initialValue":null,"externalCall":null,"eventCall":null,"errorCall":null,"leftHandSide":null,"rightHandSide":null,"length":null}],"statements":null,"arguments":null,"declarations":null,"members":null,"components":null,"clauses":null,"options":null,"body":null,"trueBody":null,"falseBody":null,"expression":null,"condition":null,"initializationExpression":null,"leftExpression":null,"rightExpression":null,"subExpression":null,"trueExpression":null,"falseExpression":null,"loopExpression":null,"baseExpression":null,"indexExpression":null,"startExpression":null,"endExpression":null,"value":null,"initialValue":null,"externalCall":null,"eventCall":null,"errorCall":null,"leftHandSide":null,"rightHandSide":null,"length":null}],"statements":null,"arguments":null,"declarations":null,"members":null,"components":null,"clauses":null,"options":null,"body":null,"trueBody":null,"falseBody":null,"expression":null,"condition":null,"initializationExpression":null,"leftExpression":null,"rightExpression":null,"subExpression":null,"trueExpression":null,"falseExpression":null,"loopExpression":null,"baseExpression":null,"indexExpression":null,"startExpression":null,"endExpression":null,"value":null,"initialValue":null,"externalCall":null,"eventCall":null,"errorCall":null,"leftHandSide":null,"rightHandSide":null,"length":null}},"contracts/ISLEToken.sol":{"id":5,"ast":{"nodeType":"SourceUnit","name":null,"src":"38:407:5","memberName":null,"functionName":null,"AST":null,"nodes":[{"nodeType":"PragmaDirective","name":null,"src":"38:23:5","memberName":null,"functionName":null,"AST":null,"nodes":null,"statements":null,"arguments":null,"declarations":null,"members":null,"components":null,"clauses":null,"options":null,"body":null,"trueBody":null,"falseBody":null,"expression":null,"condition":null,"initializationExpression":null,"leftExpression":null,"rightExpression":null,"subExpression":null,"trueExpression":null,"falseExpression":null,"loopExpression":null,"baseExpression":null,"indexExpression":null,"startExpression":null,"endExpression":null,"value":null,"initialValue":null,"externalCall":null,"eventCall":null,"errorCall":null,"leftHandSide":null,"rightHandSide":null,"length":null},{"nodeType":"ImportDirective","name":null,"src":"65:55:5","memberName":null,"functionName":null,"AST":null,"nodes":null,"statements":null,"arguments":null,"declarations":null,"members":null,"components":null,"clauses":null,"options":null,"body":null,"trueBody":null,"falseBody":null,"expression":null,"condition":null,"initializationExpression":null,"leftExpression":null,"rightExpression":null,"subExpression":null,"trueExpression":null,"falseExpression":null,"loopExpression":null,"baseExpression":null,"indexExpression":null,"startExpression":null,"endExpression":null,"value":null,"initialValue":null,"externalCall":null,"eventCall":null,"errorCall":null,"leftHandSide":null,"rightHandSide":null,"length":null},{"nodeType":"ContractDefinition","name":"ISLEToken","src":"126:313:5","memberName":null,"functionName":null,"AST":null,"nodes":[{"nodeType":"VariableDeclaration","name":"_name","src":"161:40:5","memberName":null,"functionName":null,"AST":null,"nodes":null,"statements":null,"arguments":null,"declarations":null,"members":null,"components":null,"clauses":null,"options":null,"body":null,"trueBody":null,"falseBody":null,"expression":null,"condition":null,"initializationExpression":null,"leftExpression":null,"rightExpression":null,"subExpression":null,"trueExpression":null,"falseExpression":null,"loopExpression":null,"baseExpression":null,"indexExpression":null,"startExpression":null,"endExpression":null,"value":{"nodeType":"Literal","name":null,"src":"184:17:5","memberName":null,"functionName":null,"AST":null,"nodes":null,"statements":null,"arguments":null,"declarations":null,"members":null,"components":null,"clauses":null,"options":null,"body":null,"trueBody":null,"falseBody":null,"expression":null,"condition":null,"initializationExpression":null,"leftExpression":null,"rightExpression":null,"subExpression":null,"trueExpression":null,"falseExpression":null,"loopExpression":null,"baseExpression":null,"indexExpression":null,"startExpression":null,"endExpression":null,"value":"ISLE Token v0.0","initialValue":null,"externalCall":null,"eventCall":null,"errorCall":null,"leftHandSide":null,"rightHandSide":null,"length":null},"initialValue":null,"externalCall":null,"eventCall":null,"errorCall":null,"leftHandSide":null,"rightHandSide":null,"length":null},{"nodeType":"VariableDeclaration","name":"_symbol","src":"206:35:5","memberName":null,"functionName":null,"AST":null,"nodes":null,"statements":null,"arguments":null,"declarations":null,"members":null,"components":null,"clauses":null,"options":null,"body":null,"trueBody":null,"falseBody":null,"expression":null,"condition":null,"initializationExpression":null,"leftExpression":null,"rightExpression":null,"subExpression":null,"trueExpression":null,"falseExpression":null,"loopExpression":null,"baseExpression":null,"indexExpression":null,"startExpression":null,"endExpression":null,"value":{"nodeType":"Literal","name":null,"src":"231:10:5","memberName":null,"functionName":null,"AST":null,"nodes":null,"statements":null,"arguments":null,"declarations":null,"members":null,"components":null,"clauses":null,"options":null,"body":null,"trueBody":null,"falseBody":null,"expression":null,"condition":null,"initializationExpression":null,"leftExpression":null,"rightExpression":null,"subExpression":null,"trueExpression":null,"falseExpression":null,"loopExpression":null,"baseExpression":null,"indexExpression":null,"startExpression":null,"endExpression":null,"value":"ISLEv0.0","initialValue":null,"externalCall":null,"eventCall":null,"errorCall":null,"leftHandSide":null,"rightHandSide":null,"length":null},"initialValue":null,"externalCall":null,"eventCall":null,"errorCall":null,"leftHandSide":null,"rightHandSide":null,"length":null},{"nodeType":"VariableDeclaration","name":"_dec","src":"246:23:5","memberName":null,"functionName":null,"AST":null,"nodes":null,"statements":null,"arguments":null,"declarations":null,"members":null,"components":null,"clauses":null,"options":null,"body":null,"trueBody":null,"falseBody":null,"expression":null,"condition":null,"initializationExpression":null,"leftExpression":null,"rightExpression":null,"subExpression":null,"trueExpression":null,"falseExpression":null,"loopExpression":null,"baseExpression":null,"indexExpression":null,"startExpression":null,"endExpression":null,"value":{"nodeType":"Literal","name":null,"src":"267:2:5","memberName":null,"functionName":null,"AST":null,"nodes":null,"statements":null,"arguments":null,"declarations":null,"members":null,"components":null,"clauses":null,"options":null,"body":null,"trueBody":null,"falseBody":null,"expression":null,"condition":null,"initializationExpression":null,"leftExpression":null,"rightExpression":null,"subExpression":null,"trueExpression":null,"falseExpression":null,"loopExpression":null,"baseExpression":null,"indexExpression":null,"startExpression":null,"endExpression":null,"value":"10","initialValue":null,"externalCall":null,"eventCall":null,"errorCall":null,"leftHandSide":null,"rightHandSide":null,"length":null},"initialValue":null,"externalCall":null,"eventCall":null,"errorCall":null,"leftHandSide":null,"rightHandSide":null,"length":null},{"nodeType":"VariableDeclaration","name":"_totalSupply","src":"274:65:5","memberName":null,"functionName":null,"AST":null,"nodes":null,"statements":null,"arguments":null,"declarations":null,"members":null,"components":null,"clauses":null,"options":null,"body":null,"trueBody":null,"falseBody":null,"expression":null,"condition":null,"initializationExpression":null,"leftExpression":null,"rightExpression":null,"subExpression":null,"trueExpression":null,"falseExpression":null,"loopExpression":null,"baseExpression":null,"indexExpression":null,"startExpression":null,"endExpression":null,"value":{"nodeType":"BinaryOperation","name":null,"src":"305:34:5","memberName":null,"functionName":null,"AST":null,"nodes":null,"statements":null,"arguments":null,"declarations":null,"members":null,"components":null,"clauses":null,"options":null,"body":null,"trueBody":null,"falseBody":null,"expression":null,"condition":null,"initializationExpression":null,"leftExpression":{"nodeType":"Literal","name":null,"src":"305:10:5","memberName":null,"functionName":null,"AST":null,"nodes":null,"statements":null,"arguments":null,"declarations":null,"members":null,"components":null,"clauses":null,"options":null,"body":null,"trueBody":null,"falseBody":null,"expression":null,"condition":null,"initializationExpression":null,"leftExpression":null,"rightExpression":null,"subExpression":null,"trueExpression":null,"falseExpression":null,"loopExpression":null,"baseExpression":null,"indexExpression":null,"startExpression":null,"endExpression":null,"value":"1000000000","initialValue":null,"externalCall":null,"eventCall":null,"errorCall":null,"leftHandSide":null,"rightHandSide":null,"length":null},"rightExpression":{"nodeType":"TupleExpression","name":null,"src":"318:21:5","memberName":null,"functionName":null,"AST":null,"nodes":null,"statements":null,"arguments":null,"declarations":null,"members":null,"components":[{"nodeType":"BinaryOperation","name":null,"src":"319:19:5","memberName":null,"functionName":null,"AST":null,"nodes":null,"statements":null,"arguments":null,"declarations":null,"members":null,"components":null,"clauses":null,"options":null,"body":null,"trueBody":null,"falseBody":null,"expression":null,"condition":null,"initializationExpression":null,"leftExpression":{"nodeType":"Literal","name":null,"src":"319:2:5","memberName":null,"functionName":null,"AST":null,"nodes":null,"statements":null,"arguments":null,"declarations":null,"members":null,"components":null,"clauses":null,"options":null,"body":null,"trueBody":null,"falseBody":null,"expression":null,"condition":null,"initializationExpression":null,"leftExpression":null,"rightExpression":null,"subExpression":null,"trueExpression":null,"falseExpression":null,"loopExpression":null,"baseExpression":null,"indexExpression":null,"startExpression":null,"endExpression":null,"value":"10","initialValue":null,"externalCall":null,"eventCall":null,"errorCall":null,"leftHandSide":null,"rightHandSide":null,"length":null},"rightExpression":{"nodeType":"FunctionCall","name":null,"src":"325:13:5","memberName":null,"functionName":null,"AST":null,"nodes":null,"statements":null,"arguments":[{"nodeType":"Identifier","name":"_dec","src":"333:4:5","memberName":null,"functionName":null,"AST":null,"nodes":null,"statements":null,"arguments":null,"declarations":null,"members":null,"components":null,"clauses":null,"options":null,"body":null,"trueBody":null,"falseBody":null,"expression":null,"condition":null,"initializationExpression":null,"leftExpression":null,"rightExpression":null,"subExpression":null,"trueExpression":null,"falseExpression":null,"loopExpression":null,"baseExpression":null,"indexExpression":null,"startExpression":null,"endExpression":null,"value":null,"initialValue":null,"externalCall":null,"eventCall":null,"errorCall":null,"leftHandSide":null,"rightHandSide":null,"length":null}],"declarations":null,"members":null,"components":null,"clauses":null,"options":null,"body":null,"trueBody":null,"falseBody":null,"expression":{"nodeType":"ElementaryTypeNameExpression","name":null,"src":"325:7:5","memberName":null,"functionName":null,"AST":null,"nodes":null,"statements":null,"arguments":null,"declarations":null,"members":null,"components":null,"clauses":null,"options":null,"body":null,"trueBody":null,"falseBody":null,"expression":null,"condition":null,"initializationExpression":null,"leftExpression":null,"rightExpression":null,"subExpression":null,"trueExpression":null,"falseExpression":null,"loopExpression":null,"baseExpression":null,"indexExpression":null,"startExpression":null,"endExpression":null,"value":null,"initialValue":null,"externalCall":null,"eventCall":null,"errorCall":null,"leftHandSide":null,"rightHandSide":null,"length":null},"condition":null,"initializationExpression":null,"leftExpression":null,"rightExpression":null,"subExpression":null,"trueExpression":null,"falseExpression":null,"loopExpression":null,"baseExpression":null,"indexExpression":null,"startExpression":null,"endExpression":null,"value":null,"initialValue":null,"externalCall":null,"eventCall":null,"errorCall":null,"leftHandSide":null,"rightHandSide":null,"length":null},"subExpression":null,"trueExpression":null,"falseExpression":null,"loopExpression":null,"baseExpression":null,"indexExpression":null,"startExpression":null,"endExpression":null,"value":null,"initialValue":null,"externalCall":null,"eventCall":null,"errorCall":null,"leftHandSide":null,"rightHandSide":null,"length":null}],"clauses":null,"options":null,"body":null,"trueBody":null,"falseBody":null,"expression":null,"condition":null,"initializationExpression":null,"leftExpression":null,"rightExpression":null,"subExpression":null,"trueExpression":null,"falseExpression":null,"loopExpression":null,"baseExpression":null,"indexExpression":null,"startExpression":null,"endExpression":null,"value":null,"initialValue":null,"externalCall":null,"eventCall":null,"errorCall":null,"leftHandSide":null,"rightHandSide":null,"length":null},"subExpression":null,"trueExpression":null,"falseExpression":null,"loopExpression":null,"baseExpression":null,"indexExpression":null,"startExpression":null,"endExpression":null,"value":null,"initialValue":null,"externalCall":null,"eventCall":null,"errorCall":null,"leftHandSide":null,"rightHandSide":null,"length":null},"initialValue":null,"externalCall":null,"eventCall":null,"errorCall":null,"leftHandSide":null,"rightHandSide":null,"length":null},{"nodeType":"FunctionDefinition","name":"","src":"350:86:5","memberName":null,"functionName":null,"AST":null,"nodes":null,"statements":null,"arguments":null,"declarations":null,"members":null,"components":null,"clauses":null,"options":null,"body":{"nodeType":"Block","name":null,"src":"386:50:5","memberName":null,"functionName":null,"AST":null,"nodes":null,"statements":[{"nodeType":"ExpressionStatement","name":null,"src":"397:31:5","memberName":null,"functionName":null,"AST":null,"nodes":null,"statements":null,"arguments":null,"declarations":null,"members":null,"components":null,"clauses":null,"options":null,"body":null,"trueBody":null,"falseBody":null,"expression":{"nodeType":"FunctionCall","name":null,"src":"397:31:5","memberName":null,"functionName":null,"AST":null,"nodes":null,"statements":null,"arguments":[{"nodeType":"MemberAccess","name":null,"src":"403:10:5","memberName":"sender","functionName":null,"AST":null,"nodes":null,"statements":null,"arguments":null,"declarations":null,"members":null,"components":null,"clauses":null,"options":null,"body":null,"trueBody":null,"falseBody":null,"expression":{"nodeType":"Identifier","name":"msg","src":"403:3:5","memberName":null,"functionName":null,"AST":null,"nodes":null,"statements":null,"arguments":null,"declarations":null,"members":null,"components":null,"clauses":null,"options":null,"body":null,"trueBody":null,"falseBody":null,"expression":null,"condition":null,"initializationExpression":null,"leftExpression":null,"rightExpression":null,"subExpression":null,"trueExpression":null,"falseExpression":null,"loopExpression":null,"baseExpression":null,"indexExpression":null,"startExpression":null,"endExpression":null,"value":null,"initialValue":null,"externalCall":null,"eventCall":null,"errorCall":null,"leftHandSide":null,"rightHandSide":null,"length":null},"condition":null,"initializationExpression":null,"leftExpression":null,"rightExpression":null,"subExpression":null,"trueExpression":null,"falseExpression":null,"loopExpression":null,"baseExpression":null,"indexExpression":null,"startExpression":null,"endExpression":null,"value":null,"initialValue":null,"externalCall":null,"eventCall":null,"errorCall":null,"leftHandSide":null,"rightHandSide":null,"length":null},{"nodeType":"Identifier","name":"_totalSupply","src":"415:12:5","memberName":null,"functionName":null,"AST":null,"nodes":null,"statements":null,"arguments":null,"declarations":null,"members":null,"components":null,"clauses":null,"options":null,"body":null,"trueBody":null,"falseBody":null,"expression":null,"condition":null,"initializationExpression":null,"leftExpression":null,"rightExpression":null,"subExpression":null,"trueExpression":null,"falseExpression":null,"loopExpression":null,"baseExpression":null,"indexExpression":null,"startExpression":null,"endExpression":null,"value":null,"initialValue":null,"externalCall":null,"eventCall":null,"errorCall":null,"leftHandSide":null,"rightHandSide":null,"length":null}],"declarations":null,"members":null,"components":null,"clauses":null,"options":null,"body":null,"trueBody":null,"falseBody":null,"expression":{"nodeType":"Identifier","name":"_mint","src":"397:5:5","memberName":null,"functionName":null,"AST":null,"nodes":null,"statements":null,"arguments":null,"declarations":null,"members":null,"components":null,"clauses":null,"options":null,"body":null,"trueBody":null,"falseBody":null,"expression":null,"condition":null,"initializationExpression":null,"leftExpression":null,"rightExpression":null,"subExpression":null,"trueExpression":null,"falseExpression":null,"loopExpression":null,"baseExpression":null,"indexExpression":null,"startExpression":null,"endExpression":null,"value":null,"initialValue":null,"externalCall":null,"eventCall":null,"errorCall":null,"leftHandSide":null,"rightHandSide":null,"length":null},"condition":null,"initializationExpression":null,"leftExpression":null,"rightExpression":null,"subExpression":null,"trueExpression":null,"falseExpression":null,"loopExpression":null,"baseExpression":null,"indexExpression":null,"startExpression":null,"endExpression":null,"value":null,"initialValue":null,"externalCall":null,"eventCall":null,"errorCall":null,"leftHandSide":null,"rightHandSide":null,"length":null},"condition":null,"initializationExpression":null,"leftExpression":null,"rightExpression":null,"subExpression":null,"trueExpression":null,"falseExpression":null,"loopExpression":null,"baseExpression":null,"indexExpression":null,"startExpression":null,"endExpression":null,"value":null,"initialValue":null,"externalCall":null,"eventCall":null,"errorCall":null,"leftHandSide":null,"rightHandSide":null,"length":null}],"arguments":null,"declarations":null,"members":null,"components":null,"clauses":null,"options":null,"body":null,"trueBody":null,"falseBody":null,"expression":null,"condition":null,"initializationExpression":null,"leftExpression":null,"rightExpression":null,"subExpression":null,"trueExpression":null,"falseExpression":null,"loopExpression":null,"baseExpression":null,"indexExpression":null,"startExpression":null,"endExpression":null,"value":null,"initialValue":null,"externalCall":null,"eventCall":null,"errorCall":null,"leftHandSide":null,"rightHandSide":null,"length":null},"trueBody":null,"falseBody":null,"expression":null,"condition":null,"initializationExpression":null,"leftExpression":null,"rightExpression":null,"subExpression":null,"trueExpression":null,"falseExpression":null,"loopExpression":null,"baseExpression":null,"indexExpression":null,"startExpression":null,"endExpression":null,"value":null,"initialValue":null,"externalCall":null,"eventCall":null,"errorCall":null,"leftHandSide":null,"rightHandSide":null,"length":null}],"statements":null,"arguments":null,"declarations":null,"members":null,"components":null,"clauses":null,"options":null,"body":null,"trueBody":null,"falseBody":null,"expression":null,"condition":null,"initializationExpression":null,"leftExpression":null,"rightExpression":null,"subExpression":null,"trueExpression":null,"falseExpression":null,"loopExpression":null,"baseExpression":null,"indexExpression":null,"startExpression":null,"endExpression":null,"value":null,"initialValue":null,"externalCall":null,"eventCall":null,"errorCall":null,"leftHandSide":null,"rightHandSide":null,"length":null}],"statements":null,"arguments":null,"declarations":null,"members":null,"components":null,"clauses":null,"options":null,"body":null,"trueBody":null,"falseBody":null,"expression":null,"condition":null,"initializationExpression":null,"leftExpression":null,"rightExpression":null,"subExpression":null,"trueExpression":null,"falseExpression":null,"loopExpression":null,"baseExpression":null,"indexExpression":null,"startExpression":null,"endExpression":null,"value":null,"initialValue":null,"externalCall":null,"eventCall":null,"errorCall":null,"leftHandSide":null,"rightHandSide":null,"length":null}}},"contracts":{"@openzeppelin/contracts/token/ERC20/ERC20.sol":{"ERC20":{"abi":[{"inputs":[{"internalType":"string","name":"name_","type":"string"},{"internalType":"string","name":"symbol_","type":"string"}],"stateMutability":"nonpayable","type":"constructor"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"spender","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Approval","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Transfer","type":"event"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"spender","type":"address"}],"name":"allowance","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"approve","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"balanceOf","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"decimals","outputs":[{"internalType":"uint8","name":"","type":"uint8"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"subtractedValue","type":"uint256"}],"name":"decreaseAllowance","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"addedValue","type":"uint256"}],"name":"increaseAllowance","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"name","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"symbol","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"totalSupply","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"transfer","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"transferFrom","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"}],"metadata":{"optimizer_settings":"M3B3","solc_metadata":"{\"compiler\":{\"version\":\"0.8.8+commit.dddeac2f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"string\",\"name\":\"name_\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"symbol_\",\"type\":\"string\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"subtractedValue\",\"type\":\"uint256\"}],\"name\":\"decreaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"addedValue\",\"type\":\"uint256\"}],\"name\":\"increaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Implementation of the {IERC20} interface. This implementation is agnostic to the way tokens are created. This means that a supply mechanism has to be added in a derived contract using {_mint}. For a generic mechanism see {ERC20PresetMinterPauser}. TIP: For a detailed writeup see our guide https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How to implement supply mechanisms]. We have followed general OpenZeppelin Contracts guidelines: functions revert instead returning `false` on failure. This behavior is nonetheless conventional and does not conflict with the expectations of ERC20 applications. Additionally, an {Approval} event is emitted on calls to {transferFrom}. This allows applications to reconstruct the allowance for all accounts just by listening to said events. Other implementations of the EIP may not emit these events, as it isn't required by the specification. Finally, the non-standard {decreaseAllowance} and {increaseAllowance} functions have been added to mitigate the well-known issues around setting allowances. See {IERC20-approve}.\",\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"See {IERC20-allowance}.\"},\"approve(address,uint256)\":{\"details\":\"See {IERC20-approve}. NOTE: If `amount` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address.\"},\"balanceOf(address)\":{\"details\":\"See {IERC20-balanceOf}.\"},\"constructor\":{\"details\":\"Sets the values for {name} and {symbol}. The default value of {decimals} is 18. To select a different value for {decimals} you should overload it. All two of these values are immutable: they can only be set once during construction.\"},\"decimals()\":{\"details\":\"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the value {ERC20} uses, unless this function is overridden; NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}.\"},\"decreaseAllowance(address,uint256)\":{\"details\":\"Atomically decreases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address. - `spender` must have allowance for the caller of at least `subtractedValue`.\"},\"increaseAllowance(address,uint256)\":{\"details\":\"Atomically increases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token, usually a shorter version of the name.\"},\"totalSupply()\":{\"details\":\"See {IERC20-totalSupply}.\"},\"transfer(address,uint256)\":{\"details\":\"See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `amount`.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `amount`. - the caller must have allowance for ``from``'s tokens of at least `amount`.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/ERC20.sol\":\"ERC20\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts/token/ERC20/ERC20.sol\":{\"keccak256\":\"0x4ffc0547c02ad22925310c585c0f166f8759e2648a09e9b489100c42f15dd98d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://15f52f51413a9de1ff191e2f6367c62178e1df7806d7880fe857a98b0b66253d\",\"dweb:/ipfs/QmaQG1fwfgUt5E9nu2cccFiV47B2V78MM1tCy1qB7n4MsH\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x9750c6b834f7b43000631af5cc30001c5f547b3ceb3635488f140f60e897ea6b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5a7d5b1ef5d8d5889ad2ed89d8619c09383b80b72ab226e0fe7bde1636481e34\",\"dweb:/ipfs/QmebXWgtEfumQGBdVeM6c71McLixYXQP5Bk6kKXuoY4Bmr\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0x8de418a5503946cabe331f35fe242d3201a73f67f77aaeb7110acb1f30423aca\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5a376d3dda2cb70536c0a45c208b29b34ac560c4cb4f513a42079f96ba47d2dd\",\"dweb:/ipfs/QmZQg6gn1sUpM8wHzwNvSnihumUCAhxD119MpXeKp8B9s8\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92\",\"dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3\"]}},\"version\":1}","zk_version":"1.3.8"},"evm":{"legacyAssembly":null,"assembly":"\t.text\n\t.file\t\"ERC20.sol:ERC20\"\n\t.globl\t__entry\n__entry:\n.func_begin0:\n\tnop\tstack+=[7]\n\tptr.add\tr1, r0, stack[@ptr_calldata]\n\tshr.s\t96, r1, r1\n\tand\t@CPI0_0[0], r1, stack[@calldatasize]\n\tadd\t128, r0, r1\n\tst.1\t64, r1\n\tand!\t1, r2, r1\n\tjump.ne\t@.BB0_1\n\tadd\tstack[@calldatasize], r0, r1\n\tsub.s!\t4, r1, r1\n\tjump.lt\t@.BB0_2\n\tptr.add\tstack[@ptr_calldata], r0, r1\n\tld\tr1, r1\n\tshr.s\t224, r1, r1\n\tsub.s!\t@CPI0_7[0], r1, r2\n\tjump.le\t@.BB0_55\n\tsub.s!\t@CPI0_8[0], r1, r2\n\tjump.gt\t@.BB0_65\n\tsub.s!\t@CPI0_12[0], r1, r2\n\tjump.eq\t@.BB0_81\n\tsub.s!\t@CPI0_13[0], r1, r2\n\tjump.eq\t@.BB0_83\n\tsub.s!\t@CPI0_14[0], r1, r1\n\tjump.ne\t@.BB0_2\n\tcontext.get_context_u128\tr1\n\tsub.s!\t0, r1, r1\n\tjump.ne\t@.BB0_2\n\tsub.s\t4, r0, r1\n\tadd\tstack[@calldatasize], r1, r1\n\tadd\t@CPI0_2[0], r0, r2\n\tsub.s!\t0, r1, r3\n\tadd\t0, r0, r3\n\tadd.lt\tr2, r0, r3\n\tand\t@CPI0_2[0], r1, r1\n\tsub.s!\t0, r1, r4\n\tadd.le\t0, r0, r2\n\tsub.s!\t@CPI0_2[0], r1, r1\n\tadd\tr3, r0, r1\n\tadd.eq\tr2, r0, r1\n\tsub.s!\t0, r1, r1\n\tjump.ne\t@.BB0_2\n\tnear_call\tr0, @copy_array_from_storage_to_memory_string, @DEFAULT_UNWIND\n\tadd\tr1, r0, r2\n\tld.1\t64, r1\n\tadd\tr1, r0, stack-[7]\n\tnear_call\tr0, @abi_encode_string, @DEFAULT_UNWIND\n\tadd\tstack-[7], r0, r4\n\tsub\tr1, r4, r1\n\tadd\t@CPI0_0[0], r0, r2\n\tsub.s!\t@CPI0_0[0], r1, r3\n\tadd.ge\tr2, r0, r1\n\tsub.s!\t@CPI0_0[0], r4, r3\n\tadd.lt\tr4, r0, r2\n\tshl.s\t64, r2, r2\n\tshl.s\t96, r1, r1\n\tor\tr1, r2, r1\n\tret.ok.to_label\tr1, @DEFAULT_FAR_RETURN\n.BB0_1:\n\tcontext.get_context_u128\tr1\n\tsub.s!\t0, r1, r1\n\tjump.ne\t@.BB0_2\n\tadd\tstack[@calldatasize], r0, r2\n\tadd\t31, r2, r1\n\tsub.s\t32, r0, r10\n\tand\tr1, r10, r4\n\tld.1\t64, r1\n\tadd\tr4, r1, r3\n\tsub!\tr3, r4, r4\n\tadd\t0, r0, r4\n\tadd.lt\t1, r0, r4\n\tsub.s!\t@CPI0_1[0], r3, r5\n\tjump.gt\t@.BB0_5\n\tand!\t1, r4, r4\n\tjump.ne\t@.BB0_5\n\tst.1\t64, r3\n\tand\t31, r2, r3\n\tptr.add\tstack[@ptr_calldata], r0, r4\n\tshr.s!\t5, r2, r5\n\tjump.eq\t@.BB0_94\n\tadd\tr0, r0, r6\n.BB0_8:\n\tshl.s\t5, r6, r7\n\tadd\tr1, r7, r8\n\tptr.add\tr4, r7, r7\n\tld\tr7, r7\n\tst.1\tr8, r7\n\tadd\t1, r6, r6\n\tsub!\tr6, r5, r7\n\tjump.lt\t@.BB0_8\n.BB0_94:\n\tsub.s!\t0, r3, r6\n\tjump.eq\t@.BB0_10\n\tshl.s\t5, r5, r5\n\tptr.add\tr4, r5, r4\n\tadd\tr1, r5, r5\n\tshl.s\t3, r3, r3\n\tld.1\tr5, r6\n\tshl\tr6, r3, r6\n\tshr\tr6, r3, r6\n\tld\tr4, r4\n\tsub\t256, r3, r3\n\tshr\tr4, r3, r4\n\tshl\tr4, r3, r3\n\tor\tr3, r6, r3\n\tst.1\tr5, r3\n.BB0_10:\n\tadd\t@CPI0_2[0], r0, r3\n\tsub.s!\t64, r2, r4\n\tadd\t0, r0, r4\n\tadd.lt\tr3, r0, r4\n\tand\t@CPI0_2[0], r2, r5\n\tsub.s!\t0, r5, r6\n\tadd.le\t0, r0, r3\n\tsub.s!\t@CPI0_2[0], r5, r5\n\tadd.ne\tr4, r0, r3\n\tsub.s!\t0, r3, r3\n\tjump.ne\t@.BB0_2\n\tld.1.inc\tr1, r4, r3\n\tsub.s!\t@CPI0_1[0], r4, r5\n\tjump.gt\t@.BB0_2\n\tadd\tr1, r2, r2\n\tadd\tr4, r1, r4\n\tadd\t31, r4, r5\n\tadd\t@CPI0_2[0], r0, r6\n\tsub!\tr5, r2, r7\n\tadd\t0, r0, r7\n\tadd.ge\tr6, r0, r7\n\tand\t@CPI0_2[0], r5, r5\n\tand\t@CPI0_2[0], r2, r8\n\tsub!\tr5, r8, r9\n\tadd.ge\t0, r0, r6\n\txor\tr5, r8, r5\n\tsub.s!\t@CPI0_2[0], r5, r5\n\tadd\tr7, r0, r5\n\tadd.eq\tr6, r0, r5\n\tsub.s!\t0, r5, r5\n\tjump.ne\t@.BB0_2\n\tld.1\tr4, r5\n\tsub.s!\t@CPI0_1[0], r5, r6\n\tjump.le\t@.BB0_14\n.BB0_5:\n\tadd\t@CPI0_5[0], r0, r1\n\tst.1\t0, r1\n\tadd\t65, r0, r1\n\tst.1\t4, r1\n\tadd\t@CPI0_6[0], r0, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB0_55:\n\tsub.s!\t@CPI0_15[0], r1, r2\n\tjump.le\t@.BB0_56\n\tsub.s!\t@CPI0_16[0], r1, r2\n\tjump.eq\t@.BB0_73\n\tsub.s!\t@CPI0_17[0], r1, r2\n\tjump.eq\t@.BB0_76\n\tsub.s!\t@CPI0_18[0], r1, r1\n\tjump.ne\t@.BB0_2\n\tcontext.get_context_u128\tr1\n\tsub.s!\t0, r1, r1\n\tjump.ne\t@.BB0_2\n\tsub.s\t4, r0, r1\n\tadd\tstack[@calldatasize], r1, r1\n\tadd\t@CPI0_2[0], r0, r2\n\tsub.s!\t0, r1, r3\n\tadd\t0, r0, r3\n\tadd.lt\tr2, r0, r3\n\tand\t@CPI0_2[0], r1, r1\n\tsub.s!\t0, r1, r4\n\tadd.le\t0, r0, r2\n\tsub.s!\t@CPI0_2[0], r1, r1\n\tadd\tr3, r0, r1\n\tadd.eq\tr2, r0, r1\n\tsub.s!\t0, r1, r1\n\tjump.ne\t@.BB0_2\n\tld.1\t64, r1\n\tadd\t18, r0, r2\n\tst.1\tr1, r2\n\tadd\t@CPI0_0[0], r0, r2\n\tsub.s!\t@CPI0_0[0], r1, r3\n\tadd.ge\tr2, r0, r1\n\tshl.s\t64, r1, r1\n\tor\t@CPI0_21[0], r1, r1\n\tret.ok.to_label\tr1, @DEFAULT_FAR_RETURN\n.BB0_65:\n\tsub.s!\t@CPI0_9[0], r1, r2\n\tjump.eq\t@.BB0_88\n\tsub.s!\t@CPI0_10[0], r1, r2\n\tjump.eq\t@.BB0_90\n\tsub.s!\t@CPI0_11[0], r1, r1\n\tjump.ne\t@.BB0_2\n\tcontext.get_context_u128\tr1\n\tsub.s!\t0, r1, r1\n\tjump.ne\t@.BB0_2\n\tadd\tstack[@calldatasize], r0, r1\n\tnear_call\tr0, @abi_decode_addresst_address, @DEFAULT_UNWIND\n\tadd\tr2, r0, stack-[7]\n\tnear_call\tr0, @mapping_index_access_mapping_address_uint256_of_address_2492, @DEFAULT_UNWIND\n\tadd\tstack-[7], r0, r2\n\tnear_call\tr0, @mapping_index_access_mapping_address_uint256_of_address, @DEFAULT_UNWIND\n\tsload\tr1, r1\n\tld.1\t64, r2\n\tst.1\tr2, r1\n\tadd\t@CPI0_0[0], r0, r1\n\tsub.s!\t@CPI0_0[0], r2, r3\n\tadd.lt\tr2, r0, r1\n\tshl.s\t64, r1, r1\n\tor\t@CPI0_21[0], r1, r1\n\tret.ok.to_label\tr1, @DEFAULT_FAR_RETURN\n.BB0_56:\n\tsub.s!\t@CPI0_19[0], r1, r2\n\tjump.eq\t@.BB0_68\n\tsub.s!\t@CPI0_20[0], r1, r1\n\tjump.ne\t@.BB0_2\n\tcontext.get_context_u128\tr1\n\tsub.s!\t0, r1, r1\n\tjump.ne\t@.BB0_2\n\tadd\tstack[@calldatasize], r0, r1\n\tnear_call\tr0, @abi_decode_addresst_uint256, @DEFAULT_UNWIND\n\tnear_call\tr0, @fun_approve, @DEFAULT_UNWIND\n\tadd\t1, r0, r1\n\tld.1\t64, r2\n\tst.1\tr2, r1\n\tadd\t@CPI0_0[0], r0, r1\n\tsub.s!\t@CPI0_0[0], r2, r3\n\tadd.lt\tr2, r0, r1\n\tshl.s\t64, r1, r1\n\tor\t@CPI0_21[0], r1, r1\n\tret.ok.to_label\tr1, @DEFAULT_FAR_RETURN\n.BB0_81:\n\tcontext.get_context_u128\tr1\n\tsub.s!\t0, r1, r1\n\tjump.ne\t@.BB0_2\n\tadd\tstack[@calldatasize], r0, r1\n\tnear_call\tr0, @abi_decode_addresst_uint256, @DEFAULT_UNWIND\n\tnear_call\tr0, @fun_increaseAllowance, @DEFAULT_UNWIND\n\tadd\t1, r0, r1\n\tld.1\t64, r2\n\tst.1\tr2, r1\n\tadd\t@CPI0_0[0], r0, r1\n\tsub.s!\t@CPI0_0[0], r2, r3\n\tadd.lt\tr2, r0, r1\n\tshl.s\t64, r1, r1\n\tor\t@CPI0_21[0], r1, r1\n\tret.ok.to_label\tr1, @DEFAULT_FAR_RETURN\n.BB0_83:\n\tcontext.get_context_u128\tr1\n\tsub.s!\t0, r1, r1\n\tjump.ne\t@.BB0_2\n\tadd\tstack[@calldatasize], r0, r1\n\tnear_call\tr0, @abi_decode_address, @DEFAULT_UNWIND\n\tnear_call\tr0, @fun_balanceOf, @DEFAULT_UNWIND\n\tld.1\t64, r2\n\tst.1\tr2, r1\n\tadd\t@CPI0_0[0], r0, r1\n\tsub.s!\t@CPI0_0[0], r2, r3\n\tadd.lt\tr2, r0, r1\n\tshl.s\t64, r1, r1\n\tor\t@CPI0_21[0], r1, r1\n\tret.ok.to_label\tr1, @DEFAULT_FAR_RETURN\n.BB0_73:\n\tcontext.get_context_u128\tr1\n\tsub.s!\t0, r1, r1\n\tjump.ne\t@.BB0_2\n\tsub.s\t4, r0, r1\n\tadd\tstack[@calldatasize], r1, r1\n\tadd\t@CPI0_2[0], r0, r2\n\tsub.s!\t0, r1, r3\n\tadd\t0, r0, r3\n\tadd.lt\tr2, r0, r3\n\tand\t@CPI0_2[0], r1, r1\n\tsub.s!\t0, r1, r4\n\tadd.le\t0, r0, r2\n\tsub.s!\t@CPI0_2[0], r1, r1\n\tadd\tr3, r0, r1\n\tadd.eq\tr2, r0, r1\n\tsub.s!\t0, r1, r1\n\tjump.ne\t@.BB0_2\n\tadd\t2, r0, r1\n\tsload\tr1, r1\n\tld.1\t64, r2\n\tst.1\tr2, r1\n\tadd\t@CPI0_0[0], r0, r1\n\tsub.s!\t@CPI0_0[0], r2, r3\n\tadd.lt\tr2, r0, r1\n\tshl.s\t64, r1, r1\n\tor\t@CPI0_21[0], r1, r1\n\tret.ok.to_label\tr1, @DEFAULT_FAR_RETURN\n.BB0_76:\n\tcontext.get_context_u128\tr1\n\tsub.s!\t0, r1, r1\n\tjump.ne\t@.BB0_2\n\tadd\tstack[@calldatasize], r0, r1\n\tnear_call\tr0, @abi_decode_addresst_addresst_uint256, @DEFAULT_UNWIND\n\tnear_call\tr0, @fun_transferFrom, @DEFAULT_UNWIND\n\tadd\t1, r0, r1\n\tld.1\t64, r2\n\tst.1\tr2, r1\n\tadd\t@CPI0_0[0], r0, r1\n\tsub.s!\t@CPI0_0[0], r2, r3\n\tadd.lt\tr2, r0, r1\n\tshl.s\t64, r1, r1\n\tor\t@CPI0_21[0], r1, r1\n\tret.ok.to_label\tr1, @DEFAULT_FAR_RETURN\n.BB0_88:\n\tcontext.get_context_u128\tr1\n\tsub.s!\t0, r1, r1\n\tjump.ne\t@.BB0_2\n\tadd\tstack[@calldatasize], r0, r1\n\tnear_call\tr0, @abi_decode_addresst_uint256, @DEFAULT_UNWIND\n\tnear_call\tr0, @fun_decreaseAllowance, @DEFAULT_UNWIND\n\tadd\t1, r0, r1\n\tld.1\t64, r2\n\tst.1\tr2, r1\n\tadd\t@CPI0_0[0], r0, r1\n\tsub.s!\t@CPI0_0[0], r2, r3\n\tadd.lt\tr2, r0, r1\n\tshl.s\t64, r1, r1\n\tor\t@CPI0_21[0], r1, r1\n\tret.ok.to_label\tr1, @DEFAULT_FAR_RETURN\n.BB0_90:\n\tcontext.get_context_u128\tr1\n\tsub.s!\t0, r1, r1\n\tjump.ne\t@.BB0_2\n\tadd\tstack[@calldatasize], r0, r1\n\tnear_call\tr0, @abi_decode_addresst_uint256, @DEFAULT_UNWIND\n\tnear_call\tr0, @fun_transfer, @DEFAULT_UNWIND\n\tadd\t1, r0, r1\n\tld.1\t64, r2\n\tst.1\tr2, r1\n\tadd\t@CPI0_0[0], r0, r1\n\tsub.s!\t@CPI0_0[0], r2, r3\n\tadd.lt\tr2, r0, r1\n\tshl.s\t64, r1, r1\n\tor\t@CPI0_21[0], r1, r1\n\tret.ok.to_label\tr1, @DEFAULT_FAR_RETURN\n.BB0_68:\n\tcontext.get_context_u128\tr1\n\tsub.s!\t0, r1, r1\n\tjump.ne\t@.BB0_2\n\tsub.s\t4, r0, r1\n\tadd\tstack[@calldatasize], r1, r1\n\tadd\t@CPI0_2[0], r0, r2\n\tsub.s!\t0, r1, r3\n\tadd\t0, r0, r3\n\tadd.lt\tr2, r0, r3\n\tand\t@CPI0_2[0], r1, r1\n\tsub.s!\t0, r1, r4\n\tadd.le\t0, r0, r2\n\tsub.s!\t@CPI0_2[0], r1, r1\n\tadd\tr3, r0, r1\n\tadd.eq\tr2, r0, r1\n\tsub.s!\t0, r1, r1\n\tjump.ne\t@.BB0_2\n\tnear_call\tr0, @copy_array_from_storage_to_memory_string_2479, @DEFAULT_UNWIND\n\tadd\tr1, r0, r2\n\tld.1\t64, r1\n\tadd\tr1, r0, stack-[7]\n\tnear_call\tr0, @abi_encode_string, @DEFAULT_UNWIND\n\tadd\tstack-[7], r0, r4\n\tsub\tr1, r4, r1\n\tadd\t@CPI0_0[0], r0, r2\n\tsub.s!\t@CPI0_0[0], r1, r3\n\tadd.ge\tr2, r0, r1\n\tsub.s!\t@CPI0_0[0], r4, r3\n\tadd.lt\tr4, r0, r2\n\tshl.s\t64, r2, r2\n\tshl.s\t96, r1, r1\n\tor\tr1, r2, r1\n\tret.ok.to_label\tr1, @DEFAULT_FAR_RETURN\n.BB0_14:\n\tadd\t63, r5, r6\n\tand\tr6, r10, r6\n\tld.1\t64, r11\n\tadd\tr11, r6, r6\n\tsub!\tr6, r11, r7\n\tadd\t0, r0, r7\n\tadd.lt\t1, r0, r7\n\tsub.s!\t@CPI0_1[0], r6, r8\n\tjump.gt\t@.BB0_5\n\tand!\t1, r7, r7\n\tjump.ne\t@.BB0_5\n\tst.1\t64, r6\n\tst.1.inc\tr11, r5, r12\n\tadd\t32, r5, r6\n\tadd\tr6, r4, r7\n\tsub!\tr7, r2, r7\n\tjump.gt\t@.BB0_2\n\tsub.s!\t0, r5, r7\n\tjump.eq\t@.BB0_22\n\tadd\tr0, r0, r7\n.BB0_19:\n\tadd\t32, r7, r7\n\tadd\tr7, r11, r8\n\tadd\tr7, r4, r9\n\tld.1\tr9, r9\n\tst.1\tr8, r9\n\tsub!\tr7, r5, r8\n\tjump.lt\t@.BB0_19\n\tsub!\tr7, r5, r4\n\tjump.le\t@.BB0_22\n\tadd\tr11, r6, r4\n\tst.1\tr4, r0\n.BB0_22:\n\tld.1\tr3, r3\n\tsub.s!\t@CPI0_1[0], r3, r4\n\tjump.gt\t@.BB0_2\n\tadd\tr3, r1, r1\n\tadd\t31, r1, r3\n\tadd\t@CPI0_2[0], r0, r4\n\tsub!\tr3, r2, r5\n\tadd\t0, r0, r5\n\tadd.ge\tr4, r0, r5\n\tand\t@CPI0_2[0], r3, r3\n\tand\t@CPI0_2[0], r2, r6\n\tsub!\tr3, r6, r7\n\tadd.ge\t0, r0, r4\n\txor\tr3, r6, r3\n\tsub.s!\t@CPI0_2[0], r3, r3\n\tadd\tr5, r0, r3\n\tadd.eq\tr4, r0, r3\n\tsub.s!\t0, r3, r3\n\tjump.ne\t@.BB0_2\n\tld.1\tr1, r3\n\tsub.s!\t@CPI0_1[0], r3, r4\n\tjump.gt\t@.BB0_5\n\tadd\t63, r3, r4\n\tand\tr4, r10, r4\n\tld.1\t64, r7\n\tadd\tr7, r4, r4\n\tsub!\tr4, r7, r5\n\tadd\t0, r0, r5\n\tadd.lt\t1, r0, r5\n\tsub.s!\t@CPI0_1[0], r4, r6\n\tjump.gt\t@.BB0_5\n\tand!\t1, r5, r5\n\tjump.ne\t@.BB0_5\n\tst.1\t64, r4\n\tst.1\tr7, r3\n\tadd\t32, r3, r4\n\tadd\tr4, r1, r5\n\tsub!\tr5, r2, r2\n\tjump.le\t@.BB0_28\n.BB0_2:\n\tadd\tr0, r0, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB0_28:\n\tadd\tr12, r0, stack-[4]\n\tadd\tr11, r0, stack-[7]\n\tadd\tr10, r0, stack-[5]\n\tsub.s!\t0, r3, r2\n\tjump.eq\t@.BB0_33\n\tadd\tr0, r0, r2\n.BB0_30:\n\tadd\t32, r2, r2\n\tadd\tr2, r7, r5\n\tadd\tr2, r1, r6\n\tld.1\tr6, r6\n\tst.1\tr5, r6\n\tsub!\tr2, r3, r5\n\tjump.lt\t@.BB0_30\n\tsub!\tr2, r3, r1\n\tjump.le\t@.BB0_33\n\tadd\tr7, r4, r1\n\tst.1\tr1, r0\n.BB0_33:\n\tadd\tstack-[7], r0, r1\n\tld.1\tr1, r1\n\tadd\tr1, r0, stack-[6]\n\tsub.s!\t@CPI0_1[0], r1, r1\n\tjump.gt\t@.BB0_5\n\tadd\tr7, r0, stack-[1]\n\tadd\t3, r0, r1\n\tadd\tr1, r0, stack-[3]\n\tsload\tr1, r1\n\tand!\t1, r1, r2\n\tshr.s\t1, r1, r1\n\tand\t127, r1, r3\n\tadd.eq\tr3, r0, r1\n\tadd\tr1, r0, stack-[2]\n\tsub.s!\t31, r1, r1\n\tadd\t0, r0, r1\n\tadd.gt\t1, r0, r1\n\tand\t1, r1, r1\n\tsub!\tr2, r1, r1\n\tjump.eq\t@.BB0_36\n\tadd\t@CPI0_5[0], r0, r1\n\tst.1\t0, r1\n\tadd\t34, r0, r1\n\tst.1\t4, r1\n\tadd\t@CPI0_6[0], r0, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB0_36:\n\tadd\tstack-[2], r0, r1\n\tsub.s!\t32, r1, r1\n\tjump.lt\t@.BB0_41\n\tadd\tstack-[3], r0, r1\n\tst.1\t0, r1\n\tadd\t@CPI0_0[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI0_0[0], r2, r3\n\tadd.lt\tr2, r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI0_3[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_2\n\tadd\tstack-[6], r0, r3\n\tadd\t31, r3, r2\n\tshr.s\t5, r2, r2\n\tsub.s!\t32, r3, r3\n\tadd.lt\t0, r0, r2\n\tld\tr1, r3\n\tadd\tstack-[2], r0, r1\n\tadd\t31, r1, r1\n\tshr.s\t5, r1, r1\n\tadd\tr3, r1, r1\n\tadd\tr3, r2, r2\n\tsub!\tr2, r1, r3\n\tjump.ge\t@.BB0_41\n.BB0_40:\n\tsstore\tr2, r0\n\tadd\t1, r2, r2\n\tsub!\tr2, r1, r3\n\tjump.lt\t@.BB0_40\n.BB0_41:\n\tadd\tstack-[6], r0, r1\n\tsub.s!\t31, r1, r1\n\tjump.le\t@.BB0_50\n\tadd\tstack-[3], r0, r1\n\tst.1\t0, r1\n\tadd\t@CPI0_0[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI0_0[0], r2, r3\n\tadd.lt\tr2, r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI0_3[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tadd\tstack-[5], r0, r2\n\tadd\tstack-[7], r0, r6\n\tjump.eq\t@.BB0_2\n\tadd\tstack-[6], r0, r3\n\tand!\tr3, r2, r3\n\tadd\t32, r0, r2\n\tld\tr1, r1\n\tjump.eq\t@.BB0_47\n\tadd\t32, r0, r2\n\tadd\tr0, r0, r4\n.BB0_46:\n\tadd\tr2, r6, r5\n\tld.1\tr5, r5\n\tsstore\tr1, r5\n\tadd\t32, r2, r2\n\tadd\t1, r1, r1\n\tadd\t32, r4, r4\n\tsub!\tr4, r3, r5\n\tjump.lt\t@.BB0_46\n.BB0_47:\n\tadd\tstack-[6], r0, r4\n\tsub!\tr3, r4, r3\n\tjump.ge\t@.BB0_49\n\tadd\tstack-[6], r0, r3\n\tshl.s\t3, r3, r3\n\tand\t248, r3, r3\n\tsub.s\t1, r0, r4\n\tshr\tr4, r3, r3\n\txor\tr3, r4, r3\n\tadd\tstack-[7], r0, r4\n\tadd\tr2, r4, r2\n\tld.1\tr2, r2\n\tand\tr2, r3, r2\n\tsstore\tr1, r2\n.BB0_49:\n\tadd\t1, r0, r1\n\tadd\tstack-[6], r0, r2\n\tshl.s\t1, r2, r2\n\tjump\t@.BB0_42\n.BB0_50:\n\tadd\tstack-[6], r0, r1\n\tsub.s!\t0, r1, r1\n\tadd\tr0, r0, r1\n\tjump.eq\t@.BB0_52\n\tadd\tstack-[4], r0, r1\n\tld.1\tr1, r1\n.BB0_52:\n\tadd\tstack-[6], r0, r4\n\tshl.s\t3, r4, r2\n\tsub.s\t1, r0, r3\n\tshr\tr3, r2, r2\n\txor\tr2, r3, r2\n\tand\tr1, r2, r2\n\tshl.s\t1, r4, r1\n.BB0_42:\n\tor\tr2, r1, r1\n\tadd\tstack-[3], r0, r2\n\tsstore\tr2, r1\n\tadd\tstack-[1], r0, r1\n\tnear_call\tr0, @copy_byte_array_to_storage_from_string_to_string, @DEFAULT_UNWIND\n\tadd\t32, r0, r1\n\tst.2\t256, r1\n\tst.2\t288, r0\n\tadd\t@CPI0_4[0], r0, r1\n\tret.ok.to_label\tr1, @DEFAULT_FAR_RETURN\n.func_end0:\n\ncopy_byte_array_to_storage_from_string_to_string:\n.func_begin1:\n\tnop\tstack+=[5]\n\tld.1.inc\tr1, r5, r7\n\tsub.s!\t@CPI1_0[0], r5, r2\n\tjump.ge\t@.BB1_1\n\tadd\t4, r0, r4\n\tsload\tr4, r3\n\tand!\t1, r3, r2\n\tshr.s\t1, r3, r6\n\tand\t127, r6, r3\n\tadd.eq\tr3, r0, r6\n\tsub.s!\t31, r6, r3\n\tadd\t0, r0, r3\n\tadd.gt\t1, r0, r3\n\tand\t1, r3, r3\n\tsub!\tr2, r3, r2\n\tjump.ne\t@.BB1_3\n\tadd\tr1, r0, stack-[3]\n\tsub.s!\t32, r6, r1\n\tadd\tr4, r0, stack-[5]\n\tadd\tr5, r0, stack-[4]\n\tjump.lt\t@.BB1_10\n\tadd\tr6, r0, stack-[1]\n\tadd\tr7, r0, stack-[2]\n\tst.1\t0, r4\n\tadd\t@CPI1_1[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI1_1[0], r2, r3\n\tadd.lt\tr2, r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI1_2[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB1_6\n\tadd\tstack-[4], r0, r5\n\tadd\t31, r5, r2\n\tshr.s\t5, r2, r2\n\tsub.s!\t32, r5, r3\n\tadd.lt\t0, r0, r2\n\tld\tr1, r3\n\tadd\tstack-[1], r0, r1\n\tadd\t31, r1, r1\n\tshr.s\t5, r1, r1\n\tadd\tr3, r1, r1\n\tadd\tr3, r2, r2\n\tsub!\tr2, r1, r3\n\tadd\tstack-[5], r0, r4\n\tadd\tstack-[2], r0, r7\n\tjump.ge\t@.BB1_10\n.BB1_9:\n\tsstore\tr2, r0\n\tadd\t1, r2, r2\n\tsub!\tr2, r1, r3\n\tjump.lt\t@.BB1_9\n.BB1_10:\n\tsub.s!\t31, r5, r1\n\tjump.le\t@.BB1_19\n\tst.1\t0, r4\n\tadd\t@CPI1_1[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI1_1[0], r2, r3\n\tadd.lt\tr2, r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI1_2[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB1_6\n\tsub.s\t32, r0, r2\n\tadd\tstack-[4], r0, r6\n\tand!\tr6, r2, r3\n\tadd\t32, r0, r2\n\tld\tr1, r1\n\tadd\tstack-[3], r0, r7\n\tjump.eq\t@.BB1_16\n\tadd\t32, r0, r2\n\tadd\tr0, r0, r4\n.BB1_15:\n\tadd\tr2, r7, r5\n\tld.1\tr5, r5\n\tsstore\tr1, r5\n\tadd\t32, r2, r2\n\tadd\t1, r1, r1\n\tadd\t32, r4, r4\n\tsub!\tr4, r3, r5\n\tjump.lt\t@.BB1_15\n.BB1_16:\n\tsub!\tr3, r6, r3\n\tjump.ge\t@.BB1_18\n\tshl.s\t3, r6, r3\n\tand\t248, r3, r3\n\tsub.s\t1, r0, r4\n\tshr\tr4, r3, r3\n\txor\tr3, r4, r3\n\tadd\tr2, r7, r2\n\tld.1\tr2, r2\n\tand\tr2, r3, r2\n\tsstore\tr1, r2\n.BB1_18:\n\tshl.s\t1, r6, r1\n\tor\t1, r1, r1\n\tadd\tstack-[5], r0, r4\n\tjump\t@.BB1_11\n.BB1_19:\n\tsub.s!\t0, r5, r1\n\tadd\tr0, r0, r1\n\tjump.eq\t@.BB1_11\n\tshl.s\t3, r5, r1\n\tsub.s\t1, r0, r2\n\tshr\tr2, r1, r1\n\txor\tr1, r2, r1\n\tld.1\tr7, r2\n\tand\tr2, r1, r1\n\tshl.s\t1, r5, r2\n\tor\tr1, r2, r1\n.BB1_11:\n\tsstore\tr4, r1\n\tret\n.BB1_1:\n\tadd\t@CPI1_3[0], r0, r1\n\tst.1\t0, r1\n\tadd\t65, r0, r1\n\tst.1\t4, r1\n\tadd\t@CPI1_4[0], r0, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB1_3:\n\tadd\t@CPI1_3[0], r0, r1\n\tst.1\t0, r1\n\tadd\t34, r0, r1\n\tst.1\t4, r1\n\tadd\t@CPI1_4[0], r0, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB1_6:\n\tadd\tr0, r0, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.func_end1:\n\nabi_encode_string:\n.func_begin2:\n\tadd\t32, r0, r3\n\tst.1.inc\tr1, r3, r4\n\tld.1\tr2, r3\n\tst.1\tr4, r3\n\tsub.s!\t0, r3, r4\n\tadd\t64, r1, r1\n\tjump.eq\t@.BB2_4\n\tadd\tr0, r0, r4\n.BB2_2:\n\tadd\tr1, r4, r5\n\tadd\t32, r4, r4\n\tadd\tr4, r2, r6\n\tld.1\tr6, r6\n\tst.1\tr5, r6\n\tsub!\tr4, r3, r5\n\tjump.lt\t@.BB2_2\n\tsub!\tr4, r3, r2\n\tjump.le\t@.BB2_4\n\tadd\tr1, r3, r2\n\tst.1\tr2, r0\n\tjump\t@.BB2_6\n.BB2_4:\n.BB2_6:\n\tadd\t31, r3, r2\n\tsub.s\t32, r0, r3\n\tand\tr2, r3, r2\n\tadd\tr1, r2, r1\n\tret\n.func_end2:\n\nabi_decode_addresst_uint256:\n.func_begin3:\n\tsub.s\t4, r1, r1\n\tadd\t@CPI3_0[0], r0, r2\n\tsub.s!\t63, r1, r3\n\tadd\t0, r0, r3\n\tadd.gt\tr2, r0, r3\n\tand\t@CPI3_0[0], r1, r1\n\tsub.s!\t0, r1, r4\n\tadd.ge\t0, r0, r2\n\tsub.s!\t@CPI3_0[0], r1, r1\n\tadd\tr3, r0, r1\n\tadd.eq\tr2, r0, r1\n\tsub.s!\t0, r1, r1\n\tjump.eq\t@.BB3_1\n\tptr.add\tstack[@ptr_calldata], r0, r2\n\tptr.add.s\t4, r2, r1\n\tld\tr1, r1\n\tsub.s!\t@CPI3_1[0], r1, r3\n\tjump.gt\t@.BB3_1\n\tptr.add.s\t36, r2, r2\n\tld\tr2, r2\n\tret\n.BB3_1:\n\tadd\tr0, r0, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.func_end3:\n\nabi_decode_addresst_addresst_uint256:\n.func_begin4:\n\tsub.s\t4, r1, r1\n\tadd\t@CPI4_0[0], r0, r2\n\tsub.s!\t95, r1, r3\n\tadd\t0, r0, r3\n\tadd.gt\tr2, r0, r3\n\tand\t@CPI4_0[0], r1, r1\n\tsub.s!\t0, r1, r4\n\tadd.ge\t0, r0, r2\n\tsub.s!\t@CPI4_0[0], r1, r1\n\tadd\tr3, r0, r1\n\tadd.eq\tr2, r0, r1\n\tsub.s!\t0, r1, r1\n\tjump.eq\t@.BB4_1\n\tptr.add\tstack[@ptr_calldata], r0, r3\n\tptr.add.s\t4, r3, r1\n\tld\tr1, r1\n\tsub.s!\t@CPI4_1[0], r1, r2\n\tjump.gt\t@.BB4_1\n\tptr.add.s\t36, r3, r2\n\tld\tr2, r2\n\tsub.s!\t@CPI4_1[0], r2, r4\n\tjump.gt\t@.BB4_1\n\tptr.add.s\t68, r3, r3\n\tld\tr3, r3\n\tret\n.BB4_1:\n\tadd\tr0, r0, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.func_end4:\n\nabi_decode_address:\n.func_begin5:\n\tsub.s\t4, r1, r1\n\tadd\t@CPI5_0[0], r0, r2\n\tsub.s!\t31, r1, r3\n\tadd\t0, r0, r3\n\tadd.gt\tr2, r0, r3\n\tand\t@CPI5_0[0], r1, r1\n\tsub.s!\t0, r1, r4\n\tadd.ge\t0, r0, r2\n\tsub.s!\t@CPI5_0[0], r1, r1\n\tadd\tr3, r0, r1\n\tadd.eq\tr2, r0, r1\n\tsub.s!\t0, r1, r1\n\tjump.eq\t@.BB5_1\n\tadd\t4, r0, r1\n\tptr.add\tstack[@ptr_calldata], r1, r1\n\tld\tr1, r1\n\tsub.s!\t@CPI5_1[0], r1, r2\n\tjump.gt\t@.BB5_1\n\tret\n.BB5_1:\n\tadd\tr0, r0, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.func_end5:\n\nabi_decode_addresst_address:\n.func_begin6:\n\tsub.s\t4, r1, r1\n\tadd\t@CPI6_0[0], r0, r2\n\tsub.s!\t63, r1, r3\n\tadd\t0, r0, r3\n\tadd.gt\tr2, r0, r3\n\tand\t@CPI6_0[0], r1, r1\n\tsub.s!\t0, r1, r4\n\tadd.ge\t0, r0, r2\n\tsub.s!\t@CPI6_0[0], r1, r1\n\tadd\tr3, r0, r1\n\tadd.eq\tr2, r0, r1\n\tsub.s!\t0, r1, r1\n\tjump.eq\t@.BB6_1\n\tptr.add\tstack[@ptr_calldata], r0, r2\n\tptr.add.s\t4, r2, r1\n\tld\tr1, r1\n\tsub.s!\t@CPI6_1[0], r1, r3\n\tjump.gt\t@.BB6_1\n\tptr.add.s\t36, r2, r2\n\tld\tr2, r2\n\tsub.s!\t@CPI6_1[0], r2, r3\n\tjump.gt\t@.BB6_1\n\tret\n.BB6_1:\n\tadd\tr0, r0, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.func_end6:\n\ncopy_array_from_storage_to_memory_string_2479:\n.func_begin7:\n\tadd\t3, r0, r5\n\tsload\tr5, r4\n\tand!\t1, r4, r6\n\tshr.s\t1, r4, r1\n\tand\t127, r1, r2\n\tadd.ne\tr1, r0, r2\n\tsub.s!\t31, r2, r1\n\tadd\t0, r0, r1\n\tadd.gt\t1, r0, r1\n\tand\t1, r1, r1\n\tsub!\tr6, r1, r1\n\tjump.ne\t@.BB7_1\n\tld.1\t64, r1\n\tst.1.inc\tr1, r2, r3\n\tsub.s!\t0, r6, r6\n\tjump.ne\t@.BB7_9\n\tsub.s\t256, r0, r2\n\tand\tr4, r2, r2\n\tst.1\tr3, r2\n\tadd\t64, r0, r4\n\tjump\t@.BB7_4\n.BB7_9:\n\tst.1\t0, r5\n\tadd\t32, r0, r4\n\tsub.s!\t0, r2, r5\n\tjump.eq\t@.BB7_4\n\tadd\t@CPI7_0[0], r0, r4\n\tadd\tr0, r0, r6\n.BB7_11:\n\tadd\tr6, r0, r5\n\tadd\tr5, r3, r6\n\tsload\tr4, r7\n\tst.1\tr6, r7\n\tadd\t1, r4, r4\n\tadd\t32, r5, r6\n\tsub!\tr6, r2, r7\n\tjump.lt\t@.BB7_11\n\tadd\t95, r5, r2\n\tsub.s\t32, r0, r3\n\tand\tr2, r3, r4\n.BB7_4:\n\tadd\tr4, r1, r2\n\tsub!\tr2, r4, r3\n\tadd\t0, r0, r3\n\tadd.lt\t1, r0, r3\n\tsub.s!\t@CPI7_1[0], r2, r4\n\tjump.gt\t@.BB7_6\n\tand!\t1, r3, r3\n\tjump.ne\t@.BB7_6\n\tst.1\t64, r2\n\tret\n.BB7_1:\n\tadd\t@CPI7_2[0], r0, r1\n\tst.1\t0, r1\n\tadd\t34, r0, r1\n\tst.1\t4, r1\n\tadd\t@CPI7_3[0], r0, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB7_6:\n\tadd\t@CPI7_2[0], r0, r1\n\tst.1\t0, r1\n\tadd\t65, r0, r1\n\tst.1\t4, r1\n\tadd\t@CPI7_3[0], r0, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.func_end7:\n\ncopy_array_from_storage_to_memory_string:\n.func_begin8:\n\tadd\t4, r0, r5\n\tsload\tr5, r4\n\tand!\t1, r4, r6\n\tshr.s\t1, r4, r1\n\tand\t127, r1, r2\n\tadd.ne\tr1, r0, r2\n\tsub.s!\t31, r2, r1\n\tadd\t0, r0, r1\n\tadd.gt\t1, r0, r1\n\tand\t1, r1, r1\n\tsub!\tr6, r1, r1\n\tjump.ne\t@.BB8_1\n\tld.1\t64, r1\n\tst.1.inc\tr1, r2, r3\n\tsub.s!\t0, r6, r6\n\tjump.ne\t@.BB8_9\n\tsub.s\t256, r0, r2\n\tand\tr4, r2, r2\n\tst.1\tr3, r2\n\tadd\t64, r0, r4\n\tjump\t@.BB8_4\n.BB8_9:\n\tst.1\t0, r5\n\tadd\t32, r0, r4\n\tsub.s!\t0, r2, r5\n\tjump.eq\t@.BB8_4\n\tadd\t@CPI8_0[0], r0, r4\n\tadd\tr0, r0, r6\n.BB8_11:\n\tadd\tr6, r0, r5\n\tadd\tr5, r3, r6\n\tsload\tr4, r7\n\tst.1\tr6, r7\n\tadd\t1, r4, r4\n\tadd\t32, r5, r6\n\tsub!\tr6, r2, r7\n\tjump.lt\t@.BB8_11\n\tadd\t95, r5, r2\n\tsub.s\t32, r0, r3\n\tand\tr2, r3, r4\n.BB8_4:\n\tadd\tr4, r1, r2\n\tsub!\tr2, r4, r3\n\tadd\t0, r0, r3\n\tadd.lt\t1, r0, r3\n\tsub.s!\t@CPI8_1[0], r2, r4\n\tjump.gt\t@.BB8_6\n\tand!\t1, r3, r3\n\tjump.ne\t@.BB8_6\n\tst.1\t64, r2\n\tret\n.BB8_1:\n\tadd\t@CPI8_2[0], r0, r1\n\tst.1\t0, r1\n\tadd\t34, r0, r1\n\tst.1\t4, r1\n\tadd\t@CPI8_3[0], r0, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB8_6:\n\tadd\t@CPI8_2[0], r0, r1\n\tst.1\t0, r1\n\tadd\t65, r0, r1\n\tst.1\t4, r1\n\tadd\t@CPI8_3[0], r0, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.func_end8:\n\nmapping_index_access_mapping_address_uint256_of_address_2492:\n.func_begin9:\n\tand\t@CPI9_0[0], r1, r1\n\tst.1\t0, r1\n\tadd\t1, r0, r1\n\tst.1\t32, r1\n\tadd\t@CPI9_1[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI9_1[0], r2, r3\n\tadd.lt\tr2, r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI9_2[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB9_1\n\tld\tr1, r1\n\tret\n.BB9_1:\n\tadd\tr0, r0, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.func_end9:\n\nmapping_index_access_mapping_address_uint256_of_address:\n.func_begin10:\n\tand\t@CPI10_0[0], r2, r2\n\tst.1\t0, r2\n\tst.1\t32, r1\n\tadd\t@CPI10_1[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI10_1[0], r2, r3\n\tadd.lt\tr2, r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI10_2[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB10_1\n\tld\tr1, r1\n\tret\n.BB10_1:\n\tadd\tr0, r0, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.func_end10:\n\nfun_balanceOf:\n.func_begin11:\n\tand\t@CPI11_0[0], r1, r1\n\tst.1\t0, r1\n\tst.1\t32, r0\n\tadd\t@CPI11_1[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI11_1[0], r2, r3\n\tadd.lt\tr2, r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI11_2[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB11_1\n\tld\tr1, r1\n\tsload\tr1, r1\n\tret\n.BB11_1:\n\tadd\tr0, r0, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.func_end11:\n\nfun_transfer:\n.func_begin12:\n\tnop\tstack+=[6]\n\tadd\tr2, r0, stack-[6]\n\tcontext.caller\tr2\n\tand!\t@CPI12_0[0], r2, r3\n\tjump.eq\t@.BB12_1\n\tadd\tr2, r0, stack-[2]\n\tadd\tr1, r0, stack-[3]\n\tand!\t@CPI12_0[0], r1, r1\n\tadd\tr1, r0, stack-[5]\n\tjump.eq\t@.BB12_3\n\tadd\tr3, r0, stack-[4]\n\tst.1\t0, r3\n\tst.1\t32, r0\n\tadd\t@CPI12_1[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI12_1[0], r2, r3\n\tadd.lt\tr2, r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI12_2[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB12_5\n\tld\tr1, r1\n\tsload\tr1, r2\n\tadd\tstack-[6], r0, r1\n\tadd\tr2, r0, stack-[1]\n\tsub!\tr2, r1, r1\n\tjump.lt\t@.BB12_7\n\tadd\tstack-[4], r0, r1\n\tst.1\t0, r1\n\tst.1\t32, r0\n\tadd\t@CPI12_1[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI12_1[0], r2, r3\n\tadd.lt\tr2, r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI12_2[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB12_5\n\tadd\tstack-[6], r0, r2\n\tadd\tstack-[1], r0, r3\n\tsub\tr3, r2, r2\n\tld\tr1, r1\n\tsstore\tr1, r2\n\tadd\tstack-[5], r0, r1\n\tst.1\t0, r1\n\tst.1\t32, r0\n\tadd\t@CPI12_1[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI12_1[0], r2, r3\n\tadd.lt\tr2, r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI12_2[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB12_5\n\tld\tr1, r1\n\tsload\tr1, r2\n\tadd\tstack-[6], r0, r3\n\tadd\tr2, r3, r2\n\tsstore\tr1, r2\n\tld.1\t64, r1\n\tst.1\tr1, r3\n\tadd\t@CPI12_1[0], r0, r2\n\tcontext.gas_left\tr3\n\tsub.s!\t@CPI12_1[0], r3, r4\n\tadd.ge\tr2, r0, r3\n\tsub.s!\t@CPI12_1[0], r1, r4\n\tadd.ge\tr2, r0, r1\n\tshl.s\t64, r1, r1\n\tshl.s\t192, r3, r2\n\tor\tr2, r1, r1\n\tor\t@CPI12_3[0], r1, r1\n\tadd\t32781, r0, r2\n\tadd\t3, r0, r3\n\tadd\t@CPI12_4[0], r0, r4\n\tadd\tstack-[2], r0, r5\n\tadd\tstack-[3], r0, r6\n\tnear_call\tr0, @__farcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r1\n\tjump.eq\t@.BB12_5\n\tret\n.BB12_5:\n\tadd\tr0, r0, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB12_1:\n\tld.1\t64, r1\n\tadd\t100, r1, r2\n\tadd\t@CPI12_11[0], r0, r3\n\tst.1\tr2, r3\n\tadd\t68, r1, r2\n\tadd\t@CPI12_12[0], r0, r3\n\tst.1\tr2, r3\n\tadd\t36, r1, r2\n\tadd\t37, r0, r3\n\tst.1\tr2, r3\n\tadd\t@CPI12_7[0], r0, r2\n\tst.1\tr1, r2\n\tadd\t4, r1, r2\n\tadd\t32, r0, r3\n\tst.1\tr2, r3\n\tadd\t@CPI12_1[0], r0, r2\n\tsub.s!\t@CPI12_1[0], r1, r3\n\tadd.ge\tr2, r0, r1\n\tshl.s\t64, r1, r1\n\tor\t@CPI12_8[0], r1, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB12_3:\n\tld.1\t64, r1\n\tadd\t100, r1, r2\n\tadd\t@CPI12_9[0], r0, r3\n\tst.1\tr2, r3\n\tadd\t68, r1, r2\n\tadd\t@CPI12_10[0], r0, r3\n\tst.1\tr2, r3\n\tadd\t36, r1, r2\n\tadd\t35, r0, r3\n\tst.1\tr2, r3\n\tadd\t@CPI12_7[0], r0, r2\n\tst.1\tr1, r2\n\tadd\t4, r1, r2\n\tadd\t32, r0, r3\n\tst.1\tr2, r3\n\tadd\t@CPI12_1[0], r0, r2\n\tsub.s!\t@CPI12_1[0], r1, r3\n\tadd.ge\tr2, r0, r1\n\tshl.s\t64, r1, r1\n\tor\t@CPI12_8[0], r1, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB12_7:\n\tld.1\t64, r1\n\tadd\t100, r1, r2\n\tadd\t@CPI12_5[0], r0, r3\n\tst.1\tr2, r3\n\tadd\t68, r1, r2\n\tadd\t@CPI12_6[0], r0, r3\n\tst.1\tr2, r3\n\tadd\t36, r1, r2\n\tadd\t38, r0, r3\n\tst.1\tr2, r3\n\tadd\t@CPI12_7[0], r0, r2\n\tst.1\tr1, r2\n\tadd\t4, r1, r2\n\tadd\t32, r0, r3\n\tst.1\tr2, r3\n\tadd\t@CPI12_1[0], r0, r2\n\tsub.s!\t@CPI12_1[0], r1, r3\n\tadd.ge\tr2, r0, r1\n\tshl.s\t64, r1, r1\n\tor\t@CPI12_8[0], r1, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.func_end12:\n\nfun_approve:\n.func_begin13:\n\tnop\tstack+=[4]\n\tcontext.caller\tr3\n\tand!\t@CPI13_0[0], r3, r4\n\tjump.eq\t@.BB13_1\n\tadd\tr2, r0, stack-[1]\n\tadd\tr3, r0, stack-[2]\n\tadd\tr1, r0, stack-[3]\n\tand!\t@CPI13_0[0], r1, r1\n\tadd\tr1, r0, stack-[4]\n\tjump.eq\t@.BB13_3\n\tst.1\t0, r4\n\tadd\t1, r0, r1\n\tst.1\t32, r1\n\tadd\t@CPI13_1[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI13_1[0], r2, r3\n\tadd.lt\tr2, r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI13_2[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB13_5\n\tld\tr1, r1\n\tadd\tstack-[4], r0, r2\n\tst.1\t0, r2\n\tst.1\t32, r1\n\tadd\t@CPI13_1[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI13_1[0], r2, r3\n\tadd.lt\tr2, r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI13_2[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB13_5\n\tld\tr1, r1\n\tadd\tstack-[1], r0, r2\n\tsstore\tr1, r2\n\tld.1\t64, r1\n\tst.1\tr1, r2\n\tadd\t@CPI13_1[0], r0, r2\n\tcontext.gas_left\tr3\n\tsub.s!\t@CPI13_1[0], r3, r4\n\tadd.ge\tr2, r0, r3\n\tsub.s!\t@CPI13_1[0], r1, r4\n\tadd.ge\tr2, r0, r1\n\tshl.s\t64, r1, r1\n\tshl.s\t192, r3, r2\n\tor\tr2, r1, r1\n\tor\t@CPI13_3[0], r1, r1\n\tadd\t32781, r0, r2\n\tadd\t3, r0, r3\n\tadd\t@CPI13_4[0], r0, r4\n\tadd\tstack-[2], r0, r5\n\tadd\tstack-[3], r0, r6\n\tnear_call\tr0, @__farcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r1\n\tjump.eq\t@.BB13_5\n\tret\n.BB13_5:\n\tadd\tr0, r0, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB13_1:\n\tld.1\t64, r1\n\tadd\t100, r1, r2\n\tadd\t@CPI13_9[0], r0, r3\n\tst.1\tr2, r3\n\tadd\t68, r1, r2\n\tadd\t@CPI13_10[0], r0, r3\n\tst.1\tr2, r3\n\tadd\t36, r1, r2\n\tadd\t36, r0, r3\n\tst.1\tr2, r3\n\tadd\t@CPI13_7[0], r0, r2\n\tst.1\tr1, r2\n\tadd\t4, r1, r2\n\tadd\t32, r0, r3\n\tst.1\tr2, r3\n\tadd\t@CPI13_1[0], r0, r2\n\tsub.s!\t@CPI13_1[0], r1, r3\n\tadd.ge\tr2, r0, r1\n\tshl.s\t64, r1, r1\n\tor\t@CPI13_8[0], r1, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB13_3:\n\tld.1\t64, r1\n\tadd\t100, r1, r2\n\tadd\t@CPI13_5[0], r0, r3\n\tst.1\tr2, r3\n\tadd\t68, r1, r2\n\tadd\t@CPI13_6[0], r0, r3\n\tst.1\tr2, r3\n\tadd\t36, r1, r2\n\tadd\t34, r0, r3\n\tst.1\tr2, r3\n\tadd\t@CPI13_7[0], r0, r2\n\tst.1\tr1, r2\n\tadd\t4, r1, r2\n\tadd\t32, r0, r3\n\tst.1\tr2, r3\n\tadd\t@CPI13_1[0], r0, r2\n\tsub.s!\t@CPI13_1[0], r1, r3\n\tadd.ge\tr2, r0, r1\n\tshl.s\t64, r1, r1\n\tor\t@CPI13_8[0], r1, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.func_end13:\n\nfun_transferFrom:\n.func_begin14:\n\tnop\tstack+=[8]\n\tadd\tr3, r0, stack-[8]\n\tadd\tr2, r0, stack-[6]\n\tadd\tr1, r0, stack-[5]\n\tand\t@CPI14_0[0], r1, r1\n\tadd\tr1, r0, stack-[7]\n\tst.1\t0, r1\n\tadd\t1, r0, r1\n\tadd\tr1, r0, stack-[3]\n\tst.1\t32, r1\n\tadd\t@CPI14_1[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI14_1[0], r2, r3\n\tadd.lt\tr2, r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI14_2[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB14_1\n\tld\tr1, r1\n\tcontext.caller\tr2\n\tadd\tr2, r0, stack-[2]\n\tand\t@CPI14_0[0], r2, r2\n\tadd\tr2, r0, stack-[4]\n\tst.1\t0, r2\n\tst.1\t32, r1\n\tadd\t@CPI14_1[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI14_1[0], r2, r3\n\tadd.lt\tr2, r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI14_2[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB14_1\n\tld\tr1, r1\n\tsload\tr1, r2\n\tsub.s\t1, r0, r1\n\tsub!\tr2, r1, r1\n\tjump.eq\t@.BB14_5\n\tadd\tstack-[8], r0, r1\n\tsub!\tr2, r1, r1\n\tjump.lt\t@.BB14_16\n\tadd\tstack-[7], r0, r1\n\tsub.s!\t0, r1, r1\n\tjump.eq\t@.BB14_18\n\tadd\tr2, r0, stack-[1]\n\tadd\tstack-[4], r0, r1\n\tsub.s!\t0, r1, r1\n\tjump.eq\t@.BB14_20\n\tadd\tstack-[7], r0, r1\n\tst.1\t0, r1\n\tadd\tstack-[3], r0, r1\n\tst.1\t32, r1\n\tadd\t@CPI14_1[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI14_1[0], r2, r3\n\tadd.lt\tr2, r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI14_2[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB14_1\n\tld\tr1, r1\n\tadd\tstack-[4], r0, r2\n\tst.1\t0, r2\n\tst.1\t32, r1\n\tadd\t@CPI14_1[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI14_1[0], r2, r3\n\tadd.lt\tr2, r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI14_2[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB14_1\n\tadd\tstack-[8], r0, r2\n\tadd\tstack-[1], r0, r3\n\tsub\tr3, r2, r2\n\tld\tr1, r1\n\tsstore\tr1, r2\n\tld.1\t64, r1\n\tst.1\tr1, r2\n\tadd\t@CPI14_1[0], r0, r2\n\tcontext.gas_left\tr3\n\tsub.s!\t@CPI14_1[0], r3, r4\n\tadd.ge\tr2, r0, r3\n\tsub.s!\t@CPI14_1[0], r1, r4\n\tadd.ge\tr2, r0, r1\n\tshl.s\t64, r1, r1\n\tshl.s\t192, r3, r2\n\tor\tr2, r1, r1\n\tor\t@CPI14_3[0], r1, r1\n\tadd\t32781, r0, r2\n\tadd\t3, r0, r3\n\tadd\t@CPI14_4[0], r0, r4\n\tadd\tstack-[5], r0, r5\n\tadd\tstack-[2], r0, r6\n\tnear_call\tr0, @__farcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r1\n\tjump.ne\t@.BB14_7\n\tjump\t@.BB14_1\n.BB14_5:\n\tadd\tstack-[7], r0, r1\n\tsub.s!\t0, r1, r1\n\tjump.eq\t@.BB14_6\n.BB14_7:\n\tadd\tstack-[6], r0, r1\n\tand!\t@CPI14_0[0], r1, r1\n\tadd\tr1, r0, stack-[4]\n\tjump.eq\t@.BB14_8\n\tadd\tstack-[7], r0, r1\n\tst.1\t0, r1\n\tst.1\t32, r0\n\tadd\t@CPI14_1[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI14_1[0], r2, r3\n\tadd.lt\tr2, r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI14_2[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB14_1\n\tld\tr1, r1\n\tsload\tr1, r2\n\tadd\tstack-[8], r0, r1\n\tadd\tr2, r0, stack-[3]\n\tsub!\tr2, r1, r1\n\tjump.lt\t@.BB14_11\n\tadd\tstack-[7], r0, r1\n\tst.1\t0, r1\n\tst.1\t32, r0\n\tadd\t@CPI14_1[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI14_1[0], r2, r3\n\tadd.lt\tr2, r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI14_2[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB14_1\n\tadd\tstack-[8], r0, r2\n\tadd\tstack-[3], r0, r3\n\tsub\tr3, r2, r2\n\tld\tr1, r1\n\tsstore\tr1, r2\n\tadd\tstack-[4], r0, r1\n\tst.1\t0, r1\n\tst.1\t32, r0\n\tadd\t@CPI14_1[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI14_1[0], r2, r3\n\tadd.lt\tr2, r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI14_2[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB14_1\n\tld\tr1, r1\n\tsload\tr1, r2\n\tadd\tstack-[8], r0, r3\n\tadd\tr2, r3, r2\n\tsstore\tr1, r2\n\tld.1\t64, r1\n\tst.1\tr1, r3\n\tadd\t@CPI14_1[0], r0, r2\n\tcontext.gas_left\tr3\n\tsub.s!\t@CPI14_1[0], r3, r4\n\tadd.ge\tr2, r0, r3\n\tsub.s!\t@CPI14_1[0], r1, r4\n\tadd.ge\tr2, r0, r1\n\tshl.s\t64, r1, r1\n\tshl.s\t192, r3, r2\n\tor\tr2, r1, r1\n\tor\t@CPI14_3[0], r1, r1\n\tadd\t32781, r0, r2\n\tadd\t3, r0, r3\n\tadd\t@CPI14_13[0], r0, r4\n\tadd\tstack-[5], r0, r5\n\tadd\tstack-[6], r0, r6\n\tnear_call\tr0, @__farcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r1\n\tjump.eq\t@.BB14_1\n\tret\n.BB14_1:\n\tadd\tr0, r0, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB14_8:\n\tld.1\t64, r1\n\tadd\t100, r1, r2\n\tadd\t@CPI14_16[0], r0, r3\n\tst.1\tr2, r3\n\tadd\t68, r1, r2\n\tadd\t@CPI14_17[0], r0, r3\n\tst.1\tr2, r3\n\tadd\t36, r1, r2\n\tadd\t35, r0, r3\n\tst.1\tr2, r3\n\tadd\t@CPI14_7[0], r0, r2\n\tst.1\tr1, r2\n\tadd\t4, r1, r2\n\tadd\t32, r0, r3\n\tst.1\tr2, r3\n\tadd\t@CPI14_1[0], r0, r2\n\tsub.s!\t@CPI14_1[0], r1, r3\n\tadd.ge\tr2, r0, r1\n\tshl.s\t64, r1, r1\n\tor\t@CPI14_8[0], r1, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB14_11:\n\tld.1\t64, r1\n\tadd\t100, r1, r2\n\tadd\t@CPI14_14[0], r0, r3\n\tst.1\tr2, r3\n\tadd\t68, r1, r2\n\tadd\t@CPI14_15[0], r0, r3\n\tst.1\tr2, r3\n\tadd\t36, r1, r2\n\tadd\t38, r0, r3\n\tst.1\tr2, r3\n\tadd\t@CPI14_7[0], r0, r2\n\tst.1\tr1, r2\n\tadd\t4, r1, r2\n\tadd\t32, r0, r3\n\tst.1\tr2, r3\n\tadd\t@CPI14_1[0], r0, r2\n\tsub.s!\t@CPI14_1[0], r1, r3\n\tadd.ge\tr2, r0, r1\n\tshl.s\t64, r1, r1\n\tor\t@CPI14_8[0], r1, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB14_16:\n\tld.1\t64, r1\n\tadd\t68, r1, r2\n\tadd\t@CPI14_11[0], r0, r3\n\tst.1\tr2, r3\n\tadd\t36, r1, r2\n\tadd\t29, r0, r3\n\tst.1\tr2, r3\n\tadd\t@CPI14_7[0], r0, r2\n\tst.1\tr1, r2\n\tadd\t4, r1, r2\n\tadd\t32, r0, r3\n\tst.1\tr2, r3\n\tadd\t@CPI14_1[0], r0, r2\n\tsub.s!\t@CPI14_1[0], r1, r3\n\tadd.ge\tr2, r0, r1\n\tshl.s\t64, r1, r1\n\tor\t@CPI14_12[0], r1, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB14_18:\n\tld.1\t64, r1\n\tadd\t100, r1, r2\n\tadd\t@CPI14_9[0], r0, r3\n\tst.1\tr2, r3\n\tadd\t68, r1, r2\n\tadd\t@CPI14_10[0], r0, r3\n\tst.1\tr2, r3\n\tadd\t36, r1, r2\n\tadd\t36, r0, r3\n\tst.1\tr2, r3\n\tadd\t@CPI14_7[0], r0, r2\n\tst.1\tr1, r2\n\tadd\t4, r1, r2\n\tadd\t32, r0, r3\n\tst.1\tr2, r3\n\tadd\t@CPI14_1[0], r0, r2\n\tsub.s!\t@CPI14_1[0], r1, r3\n\tadd.ge\tr2, r0, r1\n\tshl.s\t64, r1, r1\n\tor\t@CPI14_8[0], r1, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB14_20:\n\tld.1\t64, r1\n\tadd\t100, r1, r2\n\tadd\t@CPI14_5[0], r0, r3\n\tst.1\tr2, r3\n\tadd\t68, r1, r2\n\tadd\t@CPI14_6[0], r0, r3\n\tst.1\tr2, r3\n\tadd\t36, r1, r2\n\tadd\t34, r0, r3\n\tst.1\tr2, r3\n\tadd\t@CPI14_7[0], r0, r2\n\tst.1\tr1, r2\n\tadd\t4, r1, r2\n\tadd\t32, r0, r3\n\tst.1\tr2, r3\n\tadd\t@CPI14_1[0], r0, r2\n\tsub.s!\t@CPI14_1[0], r1, r3\n\tadd.ge\tr2, r0, r1\n\tshl.s\t64, r1, r1\n\tor\t@CPI14_8[0], r1, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB14_6:\n\tld.1\t64, r1\n\tadd\t100, r1, r2\n\tadd\t@CPI14_18[0], r0, r3\n\tst.1\tr2, r3\n\tadd\t68, r1, r2\n\tadd\t@CPI14_19[0], r0, r3\n\tst.1\tr2, r3\n\tadd\t36, r1, r2\n\tadd\t37, r0, r3\n\tst.1\tr2, r3\n\tadd\t@CPI14_7[0], r0, r2\n\tst.1\tr1, r2\n\tadd\t4, r1, r2\n\tadd\t32, r0, r3\n\tst.1\tr2, r3\n\tadd\t@CPI14_1[0], r0, r2\n\tsub.s!\t@CPI14_1[0], r1, r3\n\tadd.ge\tr2, r0, r1\n\tshl.s\t64, r1, r1\n\tor\t@CPI14_8[0], r1, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.func_end14:\n\nfun_increaseAllowance:\n.func_begin15:\n\tnop\tstack+=[6]\n\tadd\tr2, r0, stack-[5]\n\tadd\tr1, r0, stack-[6]\n\tcontext.caller\tr1\n\tadd\tr1, r0, stack-[4]\n\tst.1\t0, r1\n\tadd\t1, r0, r1\n\tadd\tr1, r0, stack-[2]\n\tst.1\t32, r1\n\tadd\t@CPI15_0[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI15_0[0], r2, r3\n\tadd.lt\tr2, r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI15_1[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB15_1\n\tld\tr1, r1\n\tadd\tstack-[6], r0, r2\n\tand\t@CPI15_2[0], r2, r2\n\tadd\tr2, r0, stack-[3]\n\tst.1\t0, r2\n\tst.1\t32, r1\n\tadd\t@CPI15_0[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI15_0[0], r2, r3\n\tadd.lt\tr2, r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI15_1[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB15_1\n\tsub.s\t1, r0, r2\n\tadd\tstack-[5], r0, r3\n\txor\tr3, r2, r2\n\tld\tr1, r1\n\tsload\tr1, r3\n\tsub!\tr3, r2, r1\n\tjump.gt\t@.BB15_4\n\tadd\tstack-[4], r0, r1\n\tand!\t@CPI15_2[0], r1, r1\n\tjump.eq\t@.BB15_6\n\tadd\tr3, r0, stack-[1]\n\tadd\tstack-[3], r0, r2\n\tsub.s!\t0, r2, r2\n\tjump.eq\t@.BB15_8\n\tst.1\t0, r1\n\tadd\tstack-[2], r0, r1\n\tst.1\t32, r1\n\tadd\t@CPI15_0[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI15_0[0], r2, r3\n\tadd.lt\tr2, r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI15_1[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB15_1\n\tld\tr1, r1\n\tadd\tstack-[3], r0, r2\n\tst.1\t0, r2\n\tst.1\t32, r1\n\tadd\t@CPI15_0[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI15_0[0], r2, r3\n\tadd.lt\tr2, r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI15_1[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB15_1\n\tadd\tstack-[5], r0, r2\n\tadd\tstack-[1], r0, r3\n\tadd\tr3, r2, r2\n\tld\tr1, r1\n\tsstore\tr1, r2\n\tld.1\t64, r1\n\tst.1\tr1, r2\n\tadd\t@CPI15_0[0], r0, r2\n\tcontext.gas_left\tr3\n\tsub.s!\t@CPI15_0[0], r3, r4\n\tadd.ge\tr2, r0, r3\n\tsub.s!\t@CPI15_0[0], r1, r4\n\tadd.ge\tr2, r0, r1\n\tshl.s\t64, r1, r1\n\tshl.s\t192, r3, r2\n\tor\tr2, r1, r1\n\tor\t@CPI15_3[0], r1, r1\n\tadd\t32781, r0, r2\n\tadd\t3, r0, r3\n\tadd\t@CPI15_4[0], r0, r4\n\tadd\tstack-[4], r0, r5\n\tadd\tstack-[6], r0, r6\n\tnear_call\tr0, @__farcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r1\n\tjump.eq\t@.BB15_1\n\tret\n.BB15_1:\n\tadd\tr0, r0, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB15_4:\n\tadd\t@CPI15_11[0], r0, r1\n\tst.1\t0, r1\n\tadd\t17, r0, r1\n\tst.1\t4, r1\n\tadd\t@CPI15_12[0], r0, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB15_6:\n\tld.1\t64, r1\n\tadd\t100, r1, r2\n\tadd\t@CPI15_9[0], r0, r3\n\tst.1\tr2, r3\n\tadd\t68, r1, r2\n\tadd\t@CPI15_10[0], r0, r3\n\tst.1\tr2, r3\n\tadd\t36, r1, r2\n\tadd\t36, r0, r3\n\tst.1\tr2, r3\n\tadd\t@CPI15_7[0], r0, r2\n\tst.1\tr1, r2\n\tadd\t4, r1, r2\n\tadd\t32, r0, r3\n\tst.1\tr2, r3\n\tadd\t@CPI15_0[0], r0, r2\n\tsub.s!\t@CPI15_0[0], r1, r3\n\tadd.ge\tr2, r0, r1\n\tshl.s\t64, r1, r1\n\tor\t@CPI15_8[0], r1, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB15_8:\n\tld.1\t64, r1\n\tadd\t100, r1, r2\n\tadd\t@CPI15_5[0], r0, r3\n\tst.1\tr2, r3\n\tadd\t68, r1, r2\n\tadd\t@CPI15_6[0], r0, r3\n\tst.1\tr2, r3\n\tadd\t36, r1, r2\n\tadd\t34, r0, r3\n\tst.1\tr2, r3\n\tadd\t@CPI15_7[0], r0, r2\n\tst.1\tr1, r2\n\tadd\t4, r1, r2\n\tadd\t32, r0, r3\n\tst.1\tr2, r3\n\tadd\t@CPI15_0[0], r0, r2\n\tsub.s!\t@CPI15_0[0], r1, r3\n\tadd.ge\tr2, r0, r1\n\tshl.s\t64, r1, r1\n\tor\t@CPI15_8[0], r1, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.func_end15:\n\nfun_decreaseAllowance:\n.func_begin16:\n\tnop\tstack+=[6]\n\tadd\tr2, r0, stack-[5]\n\tadd\tr1, r0, stack-[6]\n\tcontext.caller\tr1\n\tadd\tr1, r0, stack-[4]\n\tst.1\t0, r1\n\tadd\t1, r0, r1\n\tadd\tr1, r0, stack-[2]\n\tst.1\t32, r1\n\tadd\t@CPI16_0[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI16_0[0], r2, r3\n\tadd.lt\tr2, r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI16_1[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB16_1\n\tld\tr1, r1\n\tadd\tstack-[6], r0, r2\n\tand\t@CPI16_2[0], r2, r2\n\tadd\tr2, r0, stack-[3]\n\tst.1\t0, r2\n\tst.1\t32, r1\n\tadd\t@CPI16_0[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI16_0[0], r2, r3\n\tadd.lt\tr2, r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI16_1[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB16_1\n\tld\tr1, r1\n\tsload\tr1, r2\n\tadd\tstack-[5], r0, r1\n\tsub!\tr2, r1, r1\n\tjump.lt\t@.BB16_4\n\tadd\tstack-[4], r0, r1\n\tand!\t@CPI16_2[0], r1, r1\n\tjump.eq\t@.BB16_6\n\tadd\tr2, r0, stack-[1]\n\tadd\tstack-[3], r0, r2\n\tsub.s!\t0, r2, r2\n\tjump.eq\t@.BB16_8\n\tst.1\t0, r1\n\tadd\tstack-[2], r0, r1\n\tst.1\t32, r1\n\tadd\t@CPI16_0[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI16_0[0], r2, r3\n\tadd.lt\tr2, r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI16_1[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB16_1\n\tld\tr1, r1\n\tadd\tstack-[3], r0, r2\n\tst.1\t0, r2\n\tst.1\t32, r1\n\tadd\t@CPI16_0[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI16_0[0], r2, r3\n\tadd.lt\tr2, r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI16_1[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB16_1\n\tadd\tstack-[5], r0, r2\n\tadd\tstack-[1], r0, r3\n\tsub\tr3, r2, r2\n\tld\tr1, r1\n\tsstore\tr1, r2\n\tld.1\t64, r1\n\tst.1\tr1, r2\n\tadd\t@CPI16_0[0], r0, r2\n\tcontext.gas_left\tr3\n\tsub.s!\t@CPI16_0[0], r3, r4\n\tadd.ge\tr2, r0, r3\n\tsub.s!\t@CPI16_0[0], r1, r4\n\tadd.ge\tr2, r0, r1\n\tshl.s\t64, r1, r1\n\tshl.s\t192, r3, r2\n\tor\tr2, r1, r1\n\tor\t@CPI16_3[0], r1, r1\n\tadd\t32781, r0, r2\n\tadd\t3, r0, r3\n\tadd\t@CPI16_4[0], r0, r4\n\tadd\tstack-[4], r0, r5\n\tadd\tstack-[6], r0, r6\n\tnear_call\tr0, @__farcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r1\n\tjump.eq\t@.BB16_1\n\tret\n.BB16_1:\n\tadd\tr0, r0, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB16_4:\n\tld.1\t64, r1\n\tadd\t100, r1, r2\n\tadd\t@CPI16_11[0], r0, r3\n\tst.1\tr2, r3\n\tadd\t68, r1, r2\n\tadd\t@CPI16_12[0], r0, r3\n\tst.1\tr2, r3\n\tadd\t36, r1, r2\n\tadd\t37, r0, r3\n\tst.1\tr2, r3\n\tadd\t@CPI16_7[0], r0, r2\n\tst.1\tr1, r2\n\tadd\t4, r1, r2\n\tadd\t32, r0, r3\n\tst.1\tr2, r3\n\tadd\t@CPI16_0[0], r0, r2\n\tsub.s!\t@CPI16_0[0], r1, r3\n\tadd.ge\tr2, r0, r1\n\tshl.s\t64, r1, r1\n\tor\t@CPI16_8[0], r1, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB16_6:\n\tld.1\t64, r1\n\tadd\t100, r1, r2\n\tadd\t@CPI16_9[0], r0, r3\n\tst.1\tr2, r3\n\tadd\t68, r1, r2\n\tadd\t@CPI16_10[0], r0, r3\n\tst.1\tr2, r3\n\tadd\t36, r1, r2\n\tadd\t36, r0, r3\n\tst.1\tr2, r3\n\tadd\t@CPI16_7[0], r0, r2\n\tst.1\tr1, r2\n\tadd\t4, r1, r2\n\tadd\t32, r0, r3\n\tst.1\tr2, r3\n\tadd\t@CPI16_0[0], r0, r2\n\tsub.s!\t@CPI16_0[0], r1, r3\n\tadd.ge\tr2, r0, r1\n\tshl.s\t64, r1, r1\n\tor\t@CPI16_8[0], r1, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB16_8:\n\tld.1\t64, r1\n\tadd\t100, r1, r2\n\tadd\t@CPI16_5[0], r0, r3\n\tst.1\tr2, r3\n\tadd\t68, r1, r2\n\tadd\t@CPI16_6[0], r0, r3\n\tst.1\tr2, r3\n\tadd\t36, r1, r2\n\tadd\t34, r0, r3\n\tst.1\tr2, r3\n\tadd\t@CPI16_7[0], r0, r2\n\tst.1\tr1, r2\n\tadd\t4, r1, r2\n\tadd\t32, r0, r3\n\tst.1\tr2, r3\n\tadd\t@CPI16_0[0], r0, r2\n\tsub.s!\t@CPI16_0[0], r1, r3\n\tadd.ge\tr2, r0, r1\n\tshl.s\t64, r1, r1\n\tor\t@CPI16_8[0], r1, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.func_end16:\n\n__farcall:\n.func_begin17:\n.tmp0:\n\tfar_call\tr1, r2, @.BB17_2\n.tmp1:\n\tadd\t1, r0, r2\n\tret\n.BB17_2:\n.tmp2:\n\tadd\tr0, r0, r2\n\tret\n.func_end17:\n\n__staticcall:\n.func_begin18:\n.tmp3:\n\tfar_call.static\tr1, r2, @.BB18_2\n.tmp4:\n\tadd\t1, r0, r2\n\tret\n.BB18_2:\n.tmp5:\n\tadd\tr0, r0, r2\n\tret\n.func_end18:\n\n\t.data\n\t.p2align\t5\ncalldatasize:\n\t.cell 0\n\n\t.p2align\t5\nptr_calldata:\n.cell\t0\n\n\t.note.GNU-stack\n\t.rodata\nCPI0_0:\nCPI1_1:\nCPI9_1:\nCPI10_1:\nCPI11_1:\nCPI12_1:\nCPI13_1:\nCPI14_1:\nCPI15_0:\nCPI16_0:\n\t.cell 4294967295\nCPI0_1:\nCPI7_1:\nCPI8_1:\n\t.cell 18446744073709551615\nCPI0_2:\nCPI3_0:\nCPI4_0:\nCPI5_0:\nCPI6_0:\n\t.cell -57896044618658097711785492504343953926634992332820282019728792003956564819968\nCPI0_3:\nCPI1_2:\nCPI12_3:\nCPI13_3:\nCPI14_3:\nCPI15_3:\nCPI16_3:\n\t.cell 904625697166532776746648320380374280103671757735618107014721178055227736064\nCPI0_4:\n\t.cell 53919893334301279589334030174039261352344891250716429051063678533632\nCPI0_5:\nCPI1_3:\nCPI7_2:\nCPI8_2:\nCPI15_11:\n\t.cell 35408467139433450592217433187231851964531694900788300625387963629091585785856\nCPI0_6:\nCPI1_4:\nCPI7_3:\nCPI8_3:\nCPI15_12:\n\t.cell 2852213850513516153367582212096\nCPI0_7:\n\t.cell 961581904\nCPI0_8:\n\t.cell 2757214934\nCPI0_9:\n\t.cell 2757214935\nCPI0_10:\n\t.cell 2835717307\nCPI0_11:\n\t.cell 3714247998\nCPI0_12:\n\t.cell 961581905\nCPI0_13:\n\t.cell 1889567281\nCPI0_14:\n\t.cell 2514000705\nCPI0_15:\n\t.cell 404098524\nCPI0_16:\n\t.cell 404098525\nCPI0_17:\n\t.cell 599290589\nCPI0_18:\n\t.cell 826074471\nCPI0_19:\n\t.cell 117300739\nCPI0_20:\n\t.cell 157198259\nCPI0_21:\n\t.cell 2535301200456458802993406410752\nCPI1_0:\n\t.cell 18446744073709551616\nCPI3_1:\nCPI4_1:\nCPI5_1:\nCPI6_1:\nCPI9_0:\nCPI10_0:\nCPI11_0:\nCPI12_0:\nCPI13_0:\nCPI14_0:\nCPI15_2:\nCPI16_2:\n\t.cell 1461501637330902918203684832716283019655932542975\nCPI7_0:\n\t.cell -27889059366240281169193357100633332908378892778709981755071813198463099602853\nCPI8_0:\n\t.cell -53278079350709166316280423202849322519190186591071851114874353210178472783461\nCPI9_2:\nCPI10_2:\nCPI11_2:\nCPI12_2:\nCPI13_2:\nCPI14_2:\nCPI15_1:\nCPI16_1:\n\t.cell 904625697166532776746648320380374280103671760270919307471179981048634146816\nCPI12_4:\nCPI14_13:\n\t.cell -15402802100530019096323380498944738953123845089667699673314898783681816316945\nCPI12_5:\nCPI14_14:\n\t.cell 44065838241030143116324720188876985940908656145555552347773292252211112312832\nCPI12_6:\nCPI14_15:\n\t.cell 31354931781638678607228669297131712859100820671745083778533502622993977909346\nCPI12_7:\nCPI13_7:\nCPI14_7:\nCPI15_7:\nCPI16_7:\n\t.cell 3963877391197344453575983046348115674221700746820753546331534351508065746944\nCPI12_8:\nCPI13_8:\nCPI14_8:\nCPI15_8:\nCPI16_8:\n\t.cell 10458117451882892562347801444352\nCPI12_9:\nCPI14_16:\n\t.cell 45887578820189300338443374388718498632482616163288499555830078344056365121536\nCPI12_10:\nCPI14_17:\n\t.cell 31354931781638678607228669297131712859126084785867252355217498662940140921970\nCPI12_11:\nCPI14_18:\n\t.cell 45433405612597180762055095701412804886438245671210399661410036396145969725440\nCPI12_12:\nCPI14_19:\n\t.cell 31354931781638678607228669297131712859107492772550336241160036866987736981860\nCPI13_4:\nCPI14_4:\nCPI15_4:\nCPI16_4:\n\t.cell -52305948261162578668367882225327028569797882979485679342215860919519743330011\nCPI13_5:\nCPI14_5:\nCPI15_5:\nCPI16_5:\n\t.cell 52219164999525148860834357634456956735281286572158918307284071279203377479680\nCPI13_6:\nCPI14_6:\nCPI15_6:\nCPI16_6:\n\t.cell 31354931781638678487916134672869638488806705378895508030211234510262059168357\nCPI13_9:\nCPI14_9:\nCPI15_9:\nCPI16_9:\n\t.cell 51742913093258732729005998692887265601192425265805909375210916622055285719040\nCPI13_10:\nCPI14_10:\nCPI15_10:\nCPI16_10:\n\t.cell 31354931781638678487916134672869638484047149969764982831501014746446650500196\nCPI14_11:\n\t.cell 31354931781638678538084197150757782427756587561754988975511141185730285404160\nCPI14_12:\n\t.cell 7922816251426433759354395033600\nCPI16_11:\n\t.cell 14690266658072097593480850647027335513285713462661904985951319567533531463680\nCPI16_12:\n\t.cell 31354931781638678506476475496475743842680577777870365728514456330491174612855\n","bytecode":{"object":""},"methodIdentifiers":{"allowance(address,address)":"dd62ed3e","approve(address,uint256)":"095ea7b3","balanceOf(address)":"70a08231","decimals()":"313ce567","decreaseAllowance(address,uint256)":"a457c2d7","increaseAllowance(address,uint256)":"39509351","name()":"06fdde03","symbol()":"95d89b41","totalSupply()":"18160ddd","transfer(address,uint256)":"a9059cbb","transferFrom(address,address,uint256)":"23b872dd"}},"irOptimized":"/*=====================================================*\n *                       WARNING                       *\n *  Solidity to Yul compilation is still EXPERIMENTAL  *\n *       It can result in LOSS OF FUNDS or worse       *\n *                !USE AT YOUR OWN RISK!               *\n *=====================================================*/\n\n/// @use-src 0:\"@openzeppelin/contracts/token/ERC20/ERC20.sol\", 1:\"@openzeppelin/contracts/token/ERC20/IERC20.sol\", 2:\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\", 3:\"@openzeppelin/contracts/utils/Context.sol\"\nobject \"ERC20_586\" {\n    code {\n        {\n            /// @src 0:1401:13011  \"contract ERC20 is Context, IERC20, IERC20Metadata {...\"\n            mstore(64, 128)\n            if callvalue() { revert(0, 0) }\n            let programSize := datasize(\"ERC20_586\")\n            let argSize := sub(codesize(), programSize)\n            let memoryDataOffset := allocate_memory(argSize)\n            codecopy(memoryDataOffset, programSize, argSize)\n            let _1 := add(memoryDataOffset, argSize)\n            if slt(sub(_1, memoryDataOffset), 64)\n            {\n                revert(/** @src -1:-1:-1 */ 0, 0)\n            }\n            /// @src 0:1401:13011  \"contract ERC20 is Context, IERC20, IERC20Metadata {...\"\n            let offset := mload(memoryDataOffset)\n            let _2 := sub(shl(64, 1), 1)\n            if gt(offset, _2)\n            {\n                revert(/** @src -1:-1:-1 */ 0, 0)\n            }\n            /// @src 0:1401:13011  \"contract ERC20 is Context, IERC20, IERC20Metadata {...\"\n            let value0 := abi_decode_string_fromMemory(add(memoryDataOffset, offset), _1)\n            let _3 := 32\n            let offset_1 := mload(add(memoryDataOffset, _3))\n            if gt(offset_1, _2)\n            {\n                revert(/** @src -1:-1:-1 */ 0, 0)\n            }\n            /// @src 0:1401:13011  \"contract ERC20 is Context, IERC20, IERC20Metadata {...\"\n            let _4 := abi_decode_string_fromMemory(add(memoryDataOffset, offset_1), _1)\n            let newLen := mload(value0)\n            if gt(newLen, _2) { panic_error_0x41() }\n            clean_up_bytearray_end_slots_string_storage(extract_byte_array_length(sload(/** @src 0:2042:2055  \"_name = name_\" */ 0x03)), /** @src 0:1401:13011  \"contract ERC20 is Context, IERC20, IERC20Metadata {...\" */ newLen)\n            let srcOffset := 0\n            srcOffset := _3\n            switch gt(newLen, 31)\n            case 1 {\n                let loopEnd := and(newLen, not(31))\n                let dstPtr := array_dataslot_string_storage_998()\n                let i := 0\n                for { } lt(i, loopEnd) { i := add(i, _3) }\n                {\n                    sstore(dstPtr, mload(add(value0, srcOffset)))\n                    dstPtr := add(dstPtr, 1)\n                    srcOffset := add(srcOffset, _3)\n                }\n                if lt(loopEnd, newLen)\n                {\n                    let lastValue := mload(add(value0, srcOffset))\n                    sstore(dstPtr, and(lastValue, not(shr(and(shl(/** @src 0:2042:2055  \"_name = name_\" */ 0x03, /** @src 0:1401:13011  \"contract ERC20 is Context, IERC20, IERC20Metadata {...\" */ newLen), 248), not(0)))))\n                }\n                sstore(/** @src 0:2042:2055  \"_name = name_\" */ 0x03, /** @src 0:1401:13011  \"contract ERC20 is Context, IERC20, IERC20Metadata {...\" */ add(shl(1, newLen), 1))\n            }\n            default {\n                let value := 0\n                if newLen\n                {\n                    value := mload(add(value0, srcOffset))\n                }\n                sstore(/** @src 0:2042:2055  \"_name = name_\" */ 0x03, /** @src 0:1401:13011  \"contract ERC20 is Context, IERC20, IERC20Metadata {...\" */ extract_used_part_and_set_length_of_short_byte_array(value, newLen))\n            }\n            copy_byte_array_to_storage_from_string_to_string(_4)\n            let _5 := mload(64)\n            let _6 := datasize(\"ERC20_586_deployed\")\n            codecopy(_5, dataoffset(\"ERC20_586_deployed\"), _6)\n            return(_5, _6)\n        }\n        function panic_error_0x41()\n        {\n            mstore(0, shl(224, 0x4e487b71))\n            mstore(4, 0x41)\n            revert(0, 0x24)\n        }\n        function allocate_memory(size) -> memPtr\n        {\n            memPtr := mload(64)\n            let newFreePtr := add(memPtr, and(add(size, 31), not(31)))\n            if or(gt(newFreePtr, sub(shl(64, 1), 1)), lt(newFreePtr, memPtr)) { panic_error_0x41() }\n            mstore(64, newFreePtr)\n        }\n        function abi_decode_string_fromMemory(offset, end) -> array\n        {\n            if iszero(slt(add(offset, 0x1f), end)) { revert(0, 0) }\n            let _1 := mload(offset)\n            if gt(_1, sub(shl(64, 1), 1)) { panic_error_0x41() }\n            let _2 := 0x20\n            let array_1 := allocate_memory(add(and(add(_1, 0x1f), not(31)), _2))\n            mstore(array_1, _1)\n            if gt(add(add(offset, _1), _2), end)\n            {\n                revert(/** @src -1:-1:-1 */ 0, 0)\n            }\n            /// @src 0:1401:13011  \"contract ERC20 is Context, IERC20, IERC20Metadata {...\"\n            let i := /** @src -1:-1:-1 */ 0\n            /// @src 0:1401:13011  \"contract ERC20 is Context, IERC20, IERC20Metadata {...\"\n            for { } lt(i, _1) { i := add(i, _2) }\n            {\n                mstore(add(add(array_1, i), _2), mload(add(add(offset, i), _2)))\n            }\n            if gt(i, _1)\n            {\n                mstore(add(add(array_1, _1), _2), /** @src -1:-1:-1 */ 0)\n            }\n            /// @src 0:1401:13011  \"contract ERC20 is Context, IERC20, IERC20Metadata {...\"\n            array := array_1\n        }\n        function extract_byte_array_length(data) -> length\n        {\n            length := shr(1, data)\n            let outOfPlaceEncoding := and(data, 1)\n            if iszero(outOfPlaceEncoding) { length := and(length, 0x7f) }\n            if eq(outOfPlaceEncoding, lt(length, 32))\n            {\n                mstore(0, shl(224, 0x4e487b71))\n                mstore(4, 0x22)\n                revert(0, 0x24)\n            }\n        }\n        function array_dataslot_string_storage_998() -> data\n        {\n            mstore(0, /** @src 0:2042:2055  \"_name = name_\" */ 0x03)\n            /// @src 0:1401:13011  \"contract ERC20 is Context, IERC20, IERC20Metadata {...\"\n            data := keccak256(0, 0x20)\n        }\n        function array_dataslot_string_storage() -> data\n        {\n            mstore(0, /** @src 0:2065:2082  \"_symbol = symbol_\" */ 0x04)\n            /// @src 0:1401:13011  \"contract ERC20 is Context, IERC20, IERC20Metadata {...\"\n            data := keccak256(0, 0x20)\n        }\n        function clean_up_bytearray_end_slots_string_storage(len, startIndex)\n        {\n            if gt(len, 31)\n            {\n                /// @src -1:-1:-1\n                let _1 := 0\n                /// @src 0:1401:13011  \"contract ERC20 is Context, IERC20, IERC20Metadata {...\"\n                mstore(/** @src -1:-1:-1 */ _1, /** @src 0:2042:2055  \"_name = name_\" */ 0x03)\n                /// @src 0:1401:13011  \"contract ERC20 is Context, IERC20, IERC20Metadata {...\"\n                let data := keccak256(/** @src -1:-1:-1 */ _1, /** @src 0:1401:13011  \"contract ERC20 is Context, IERC20, IERC20Metadata {...\" */ 0x20)\n                let deleteStart := add(data, shr(5, add(startIndex, 31)))\n                if lt(startIndex, 0x20) { deleteStart := data }\n                let _2 := add(data, shr(5, add(len, 31)))\n                let start := deleteStart\n                for { } lt(start, _2) { start := add(start, 1) }\n                {\n                    sstore(start, /** @src -1:-1:-1 */ _1)\n                }\n            }\n        }\n        /// @src 0:1401:13011  \"contract ERC20 is Context, IERC20, IERC20Metadata {...\"\n        function clean_up_bytearray_end_slots_string_storage_1902(len, startIndex)\n        {\n            if gt(len, 31)\n            {\n                /// @src -1:-1:-1\n                let _1 := 0\n                /// @src 0:1401:13011  \"contract ERC20 is Context, IERC20, IERC20Metadata {...\"\n                mstore(/** @src -1:-1:-1 */ _1, /** @src 0:2065:2082  \"_symbol = symbol_\" */ 0x04)\n                /// @src 0:1401:13011  \"contract ERC20 is Context, IERC20, IERC20Metadata {...\"\n                let data := keccak256(/** @src -1:-1:-1 */ _1, /** @src 0:1401:13011  \"contract ERC20 is Context, IERC20, IERC20Metadata {...\" */ 0x20)\n                let deleteStart := add(data, shr(5, add(startIndex, 31)))\n                if lt(startIndex, 0x20) { deleteStart := data }\n                let _2 := add(data, shr(5, add(len, 31)))\n                let start := deleteStart\n                for { } lt(start, _2) { start := add(start, 1) }\n                {\n                    sstore(start, /** @src -1:-1:-1 */ _1)\n                }\n            }\n        }\n        /// @src 0:1401:13011  \"contract ERC20 is Context, IERC20, IERC20Metadata {...\"\n        function extract_used_part_and_set_length_of_short_byte_array(data, len) -> used\n        {\n            used := or(and(data, not(shr(shl(3, len), not(0)))), shl(1, len))\n        }\n        function copy_byte_array_to_storage_from_string_to_string(src)\n        {\n            let newLen := mload(src)\n            if gt(newLen, sub(shl(64, 1), 1)) { panic_error_0x41() }\n            clean_up_bytearray_end_slots_string_storage_1902(extract_byte_array_length(sload(/** @src 0:2065:2082  \"_symbol = symbol_\" */ 0x04)), /** @src 0:1401:13011  \"contract ERC20 is Context, IERC20, IERC20Metadata {...\" */ newLen)\n            let srcOffset := 0\n            let srcOffset_1 := 0x20\n            srcOffset := srcOffset_1\n            switch gt(newLen, 31)\n            case 1 {\n                let loopEnd := and(newLen, not(31))\n                let dstPtr := array_dataslot_string_storage()\n                let i := 0\n                for { } lt(i, loopEnd) { i := add(i, srcOffset_1) }\n                {\n                    sstore(dstPtr, mload(add(src, srcOffset)))\n                    dstPtr := add(dstPtr, 1)\n                    srcOffset := add(srcOffset, srcOffset_1)\n                }\n                if lt(loopEnd, newLen)\n                {\n                    let lastValue := mload(add(src, srcOffset))\n                    sstore(dstPtr, and(lastValue, not(shr(and(shl(3, newLen), 248), not(0)))))\n                }\n                sstore(/** @src 0:2065:2082  \"_symbol = symbol_\" */ 0x04, /** @src 0:1401:13011  \"contract ERC20 is Context, IERC20, IERC20Metadata {...\" */ add(shl(1, newLen), 1))\n            }\n            default {\n                let value := 0\n                if newLen\n                {\n                    value := mload(add(src, srcOffset))\n                }\n                sstore(/** @src 0:2065:2082  \"_symbol = symbol_\" */ 0x04, /** @src 0:1401:13011  \"contract ERC20 is Context, IERC20, IERC20Metadata {...\" */ extract_used_part_and_set_length_of_short_byte_array(value, newLen))\n            }\n        }\n    }\n    /// @use-src 0:\"@openzeppelin/contracts/token/ERC20/ERC20.sol\", 3:\"@openzeppelin/contracts/utils/Context.sol\"\n    object \"ERC20_586_deployed\" {\n        code {\n            {\n                /// @src 0:1401:13011  \"contract ERC20 is Context, IERC20, IERC20Metadata {...\"\n                let _1 := 64\n                mstore(_1, 128)\n                if iszero(lt(calldatasize(), 4))\n                {\n                    let _2 := 0\n                    switch shr(224, calldataload(_2))\n                    case 0x06fdde03 {\n                        if callvalue() { revert(_2, _2) }\n                        abi_decode(calldatasize())\n                        let converted := copy_array_from_storage_to_memory_string_2479()\n                        let memPos := mload(_1)\n                        return(memPos, sub(abi_encode_string(memPos, converted), memPos))\n                    }\n                    case 0x095ea7b3 {\n                        if callvalue() { revert(_2, _2) }\n                        let param, param_1 := abi_decode_addresst_uint256(calldatasize())\n                        let ret := fun_approve(param, param_1)\n                        let memPos_1 := mload(_1)\n                        return(memPos_1, sub(abi_encode_bool(memPos_1, ret), memPos_1))\n                    }\n                    case 0x18160ddd {\n                        if callvalue() { revert(_2, _2) }\n                        abi_decode(calldatasize())\n                        let _3 := sload(/** @src 0:3329:3341  \"_totalSupply\" */ 0x02)\n                        /// @src 0:1401:13011  \"contract ERC20 is Context, IERC20, IERC20Metadata {...\"\n                        let memPos_2 := mload(_1)\n                        return(memPos_2, sub(abi_encode_uint256(memPos_2, _3), memPos_2))\n                    }\n                    case 0x23b872dd {\n                        if callvalue() { revert(_2, _2) }\n                        let param_2, param_3, param_4 := abi_decode_addresst_addresst_uint256(calldatasize())\n                        let ret_1 := fun_transferFrom(param_2, param_3, param_4)\n                        let memPos_3 := mload(_1)\n                        return(memPos_3, sub(abi_encode_bool(memPos_3, ret_1), memPos_3))\n                    }\n                    case 0x313ce567 {\n                        if callvalue() { revert(_2, _2) }\n                        abi_decode(calldatasize())\n                        let memPos_4 := mload(_1)\n                        return(memPos_4, sub(abi_encode_uint8(memPos_4), memPos_4))\n                    }\n                    case 0x39509351 {\n                        if callvalue() { revert(_2, _2) }\n                        let param_5, param_6 := abi_decode_addresst_uint256(calldatasize())\n                        let ret_2 := fun_increaseAllowance(param_5, param_6)\n                        let memPos_5 := mload(_1)\n                        return(memPos_5, sub(abi_encode_bool(memPos_5, ret_2), memPos_5))\n                    }\n                    case 0x70a08231 {\n                        if callvalue() { revert(_2, _2) }\n                        let ret_3 := fun_balanceOf(abi_decode_address(calldatasize()))\n                        let memPos_6 := mload(_1)\n                        return(memPos_6, sub(abi_encode_uint256(memPos_6, ret_3), memPos_6))\n                    }\n                    case 0x95d89b41 {\n                        if callvalue() { revert(_2, _2) }\n                        abi_decode(calldatasize())\n                        let converted_1 := copy_array_from_storage_to_memory_string()\n                        let memPos_7 := mload(_1)\n                        return(memPos_7, sub(abi_encode_string(memPos_7, converted_1), memPos_7))\n                    }\n                    case 0xa457c2d7 {\n                        if callvalue() { revert(_2, _2) }\n                        let param_7, param_8 := abi_decode_addresst_uint256(calldatasize())\n                        let ret_4 := fun_decreaseAllowance(param_7, param_8)\n                        let memPos_8 := mload(_1)\n                        return(memPos_8, sub(abi_encode_bool(memPos_8, ret_4), memPos_8))\n                    }\n                    case 0xa9059cbb {\n                        if callvalue() { revert(_2, _2) }\n                        let param_9, param_10 := abi_decode_addresst_uint256(calldatasize())\n                        let ret_5 := fun_transfer(param_9, param_10)\n                        let memPos_9 := mload(_1)\n                        return(memPos_9, sub(abi_encode_bool(memPos_9, ret_5), memPos_9))\n                    }\n                    case 0xdd62ed3e {\n                        if callvalue() { revert(_2, _2) }\n                        let param_11, param_12 := abi_decode_addresst_address(calldatasize())\n                        let _4 := sload(/** @src 0:4089:4116  \"_allowances[owner][spender]\" */ mapping_index_access_mapping_address_uint256_of_address(/** @src 0:4089:4107  \"_allowances[owner]\" */ mapping_index_access_mapping_address_uint256_of_address_2492(/** @src 0:1401:13011  \"contract ERC20 is Context, IERC20, IERC20Metadata {...\" */ param_11), param_12))\n                        let memPos_10 := mload(_1)\n                        return(memPos_10, sub(abi_encode_uint256(memPos_10, _4), memPos_10))\n                    }\n                }\n                revert(0, 0)\n            }\n            function abi_decode(dataEnd)\n            {\n                if slt(add(dataEnd, not(3)), 0) { revert(0, 0) }\n            }\n            function array_storeLengthForEncoding_string(pos, length) -> updated_pos\n            {\n                mstore(pos, length)\n                updated_pos := add(pos, 0x20)\n            }\n            function abi_encode_string(headStart, value0) -> tail\n            {\n                let _1 := 32\n                mstore(headStart, _1)\n                let length := mload(value0)\n                mstore(add(headStart, _1), length)\n                let i := 0\n                for { } lt(i, length) { i := add(i, _1) }\n                {\n                    mstore(add(add(headStart, i), 64), mload(add(add(value0, i), _1)))\n                }\n                if gt(i, length)\n                {\n                    mstore(add(add(headStart, length), 64), 0)\n                }\n                tail := add(add(headStart, and(add(length, 31), not(31))), 64)\n            }\n            function abi_decode_addresst_uint256(dataEnd) -> value0, value1\n            {\n                if slt(add(dataEnd, not(3)), 64) { revert(0, 0) }\n                let value := calldataload(4)\n                if iszero(eq(value, and(value, sub(shl(160, 1), 1))))\n                {\n                    revert(/** @src -1:-1:-1 */ 0, 0)\n                }\n                /// @src 0:1401:13011  \"contract ERC20 is Context, IERC20, IERC20Metadata {...\"\n                value0 := value\n                value1 := calldataload(36)\n            }\n            function abi_encode_bool(headStart, value0) -> tail\n            {\n                tail := add(headStart, 32)\n                mstore(headStart, iszero(iszero(value0)))\n            }\n            function abi_encode_uint256(headStart, value0) -> tail\n            {\n                tail := add(headStart, 32)\n                mstore(headStart, value0)\n            }\n            function abi_decode_addresst_addresst_uint256(dataEnd) -> value0, value1, value2\n            {\n                if slt(add(dataEnd, not(3)), 96) { revert(0, 0) }\n                let value := calldataload(4)\n                let _1 := sub(shl(160, 1), 1)\n                if iszero(eq(value, and(value, _1)))\n                {\n                    revert(/** @src -1:-1:-1 */ 0, 0)\n                }\n                /// @src 0:1401:13011  \"contract ERC20 is Context, IERC20, IERC20Metadata {...\"\n                value0 := value\n                let value_1 := calldataload(36)\n                if iszero(eq(value_1, and(value_1, _1)))\n                {\n                    revert(/** @src -1:-1:-1 */ 0, 0)\n                }\n                /// @src 0:1401:13011  \"contract ERC20 is Context, IERC20, IERC20Metadata {...\"\n                value1 := value_1\n                value2 := calldataload(68)\n            }\n            function abi_encode_uint8(headStart) -> tail\n            {\n                tail := add(headStart, 32)\n                mstore(headStart, /** @src 0:3173:3175  \"18\" */ 0x12)\n            }\n            /// @src 0:1401:13011  \"contract ERC20 is Context, IERC20, IERC20Metadata {...\"\n            function abi_decode_address(dataEnd) -> value0\n            {\n                if slt(add(dataEnd, not(3)), 32) { revert(0, 0) }\n                let value := calldataload(4)\n                if iszero(eq(value, and(value, sub(shl(160, 1), 1))))\n                {\n                    revert(/** @src -1:-1:-1 */ 0, 0)\n                }\n                /// @src 0:1401:13011  \"contract ERC20 is Context, IERC20, IERC20Metadata {...\"\n                value0 := value\n            }\n            function abi_decode_addresst_address(dataEnd) -> value0, value1\n            {\n                if slt(add(dataEnd, not(3)), 64) { revert(0, 0) }\n                let value := calldataload(4)\n                let _1 := sub(shl(160, 1), 1)\n                if iszero(eq(value, and(value, _1)))\n                {\n                    revert(/** @src -1:-1:-1 */ 0, 0)\n                }\n                /// @src 0:1401:13011  \"contract ERC20 is Context, IERC20, IERC20Metadata {...\"\n                value0 := value\n                let value_1 := calldataload(36)\n                if iszero(eq(value_1, and(value_1, _1)))\n                {\n                    revert(/** @src -1:-1:-1 */ 0, 0)\n                }\n                /// @src 0:1401:13011  \"contract ERC20 is Context, IERC20, IERC20Metadata {...\"\n                value1 := value_1\n            }\n            function array_dataslot_string_storage() -> data\n            {\n                mstore(0, /** @src 0:2240:2245  \"_name\" */ 0x03)\n                /// @src 0:1401:13011  \"contract ERC20 is Context, IERC20, IERC20Metadata {...\"\n                data := 87903029871075914254377627908054574944891091886930582284385770809450030037083\n            }\n            function array_dataslot_string_storage_4050() -> data\n            {\n                mstore(0, 4)\n                data := 62514009886607029107290561805838585334079798074568712924583230797734656856475\n            }\n            function finalize_allocation(memPtr, size)\n            {\n                let newFreePtr := add(memPtr, and(add(size, 31), not(31)))\n                if or(gt(newFreePtr, 0xffffffffffffffff), lt(newFreePtr, memPtr))\n                {\n                    mstore(0, shl(224, 0x4e487b71))\n                    mstore(4, 0x41)\n                    revert(0, 0x24)\n                }\n                mstore(64, newFreePtr)\n            }\n            function copy_array_from_storage_to_memory_string_2479() -> memPtr\n            {\n                memPtr := mload(64)\n                let ret := /** @src -1:-1:-1 */ 0\n                /// @src 0:1401:13011  \"contract ERC20 is Context, IERC20, IERC20Metadata {...\"\n                let slotValue := sload(/** @src 0:2240:2245  \"_name\" */ 0x03)\n                /// @src 0:1401:13011  \"contract ERC20 is Context, IERC20, IERC20Metadata {...\"\n                let length := /** @src -1:-1:-1 */ ret\n                /// @src 0:1401:13011  \"contract ERC20 is Context, IERC20, IERC20Metadata {...\"\n                let _1 := 1\n                length := shr(_1, slotValue)\n                let outOfPlaceEncoding := and(slotValue, _1)\n                if iszero(outOfPlaceEncoding) { length := and(length, 0x7f) }\n                let _2 := 32\n                if eq(outOfPlaceEncoding, lt(length, _2))\n                {\n                    mstore(/** @src -1:-1:-1 */ ret, /** @src 0:1401:13011  \"contract ERC20 is Context, IERC20, IERC20Metadata {...\" */ shl(224, 0x4e487b71))\n                    mstore(4, 0x22)\n                    revert(/** @src -1:-1:-1 */ ret, /** @src 0:1401:13011  \"contract ERC20 is Context, IERC20, IERC20Metadata {...\" */ 0x24)\n                }\n                let pos := array_storeLengthForEncoding_string(memPtr, length)\n                switch outOfPlaceEncoding\n                case 0 {\n                    mstore(pos, and(slotValue, not(255)))\n                    ret := add(pos, _2)\n                }\n                case 1 {\n                    let dataPos := array_dataslot_string_storage()\n                    let i := /** @src -1:-1:-1 */ 0\n                    /// @src 0:1401:13011  \"contract ERC20 is Context, IERC20, IERC20Metadata {...\"\n                    for { } lt(i, length) { i := add(i, _2) }\n                    {\n                        mstore(add(pos, i), sload(dataPos))\n                        dataPos := add(dataPos, _1)\n                    }\n                    ret := add(pos, i)\n                }\n                finalize_allocation(memPtr, sub(ret, memPtr))\n            }\n            function copy_array_from_storage_to_memory_string() -> memPtr\n            {\n                memPtr := mload(64)\n                let ret := /** @src -1:-1:-1 */ 0\n                /// @src 0:1401:13011  \"contract ERC20 is Context, IERC20, IERC20Metadata {...\"\n                let slotValue := sload(4)\n                let length := /** @src -1:-1:-1 */ ret\n                /// @src 0:1401:13011  \"contract ERC20 is Context, IERC20, IERC20Metadata {...\"\n                let _1 := 1\n                length := shr(_1, slotValue)\n                let outOfPlaceEncoding := and(slotValue, _1)\n                if iszero(outOfPlaceEncoding) { length := and(length, 0x7f) }\n                let _2 := 32\n                if eq(outOfPlaceEncoding, lt(length, _2))\n                {\n                    mstore(/** @src -1:-1:-1 */ ret, /** @src 0:1401:13011  \"contract ERC20 is Context, IERC20, IERC20Metadata {...\" */ shl(224, 0x4e487b71))\n                    mstore(4, 0x22)\n                    revert(/** @src -1:-1:-1 */ ret, /** @src 0:1401:13011  \"contract ERC20 is Context, IERC20, IERC20Metadata {...\" */ 0x24)\n                }\n                let pos := array_storeLengthForEncoding_string(memPtr, length)\n                switch outOfPlaceEncoding\n                case 0 {\n                    mstore(pos, and(slotValue, not(255)))\n                    ret := add(pos, _2)\n                }\n                case 1 {\n                    let dataPos := array_dataslot_string_storage_4050()\n                    let i := /** @src -1:-1:-1 */ 0\n                    /// @src 0:1401:13011  \"contract ERC20 is Context, IERC20, IERC20Metadata {...\"\n                    for { } lt(i, length) { i := add(i, _2) }\n                    {\n                        mstore(add(pos, i), sload(dataPos))\n                        dataPos := add(dataPos, _1)\n                    }\n                    ret := add(pos, i)\n                }\n                finalize_allocation(memPtr, sub(ret, memPtr))\n            }\n            function mapping_index_access_mapping_address_uint256_of_address_2492(key) -> dataSlot\n            {\n                mstore(0, and(key, sub(shl(160, 1), 1)))\n                mstore(0x20, /** @src 0:4089:4100  \"_allowances\" */ 0x01)\n                /// @src 0:1401:13011  \"contract ERC20 is Context, IERC20, IERC20Metadata {...\"\n                dataSlot := keccak256(0, 0x40)\n            }\n            function mapping_index_access_mapping_address_uint256_of_address_2493(key) -> dataSlot\n            {\n                mstore(/** @src 0:7615:7616  \"0\" */ 0x00, /** @src 0:1401:13011  \"contract ERC20 is Context, IERC20, IERC20Metadata {...\" */ and(key, sub(shl(160, 1), 1)))\n                mstore(0x20, /** @src 0:7615:7616  \"0\" */ 0x00)\n                /// @src 0:1401:13011  \"contract ERC20 is Context, IERC20, IERC20Metadata {...\"\n                dataSlot := keccak256(/** @src 0:7615:7616  \"0\" */ 0x00, /** @src 0:1401:13011  \"contract ERC20 is Context, IERC20, IERC20Metadata {...\" */ 0x40)\n            }\n            function mapping_index_access_mapping_address_uint256_of_address(slot, key) -> dataSlot\n            {\n                mstore(0, and(key, sub(shl(160, 1), 1)))\n                mstore(0x20, slot)\n                dataSlot := keccak256(0, 0x40)\n            }\n            /// @ast-id 98 @src 0:3406:3531  \"function balanceOf(address account) public view virtual override returns (uint256) {...\"\n            function fun_balanceOf(var_account) -> var\n            {\n                /// @src 0:1401:13011  \"contract ERC20 is Context, IERC20, IERC20Metadata {...\"\n                mstore(/** @src 0:3506:3515  \"_balances\" */ 0x00, /** @src 0:1401:13011  \"contract ERC20 is Context, IERC20, IERC20Metadata {...\" */ and(var_account, sub(shl(160, 1), 1)))\n                mstore(0x20, /** @src 0:3506:3515  \"_balances\" */ 0x00)\n                /// @src 0:3499:3524  \"return _balances[account]\"\n                var := /** @src 0:1401:13011  \"contract ERC20 is Context, IERC20, IERC20Metadata {...\" */ sload(keccak256(/** @src 0:3506:3515  \"_balances\" */ 0x00, /** @src 0:1401:13011  \"contract ERC20 is Context, IERC20, IERC20Metadata {...\" */ 0x40))\n            }\n            /// @ast-id 123 @src 0:3727:3916  \"function transfer(address to, uint256 amount) public virtual override returns (bool) {...\"\n            function fun_transfer(var_to, var_amount) -> var\n            {\n                /// @src 0:3881:3887  \"amount\"\n                fun__transfer(/** @src 3:719:729  \"msg.sender\" */ caller(), /** @src 0:3881:3887  \"amount\" */ var_to, var_amount)\n                /// @src 0:3898:3909  \"return true\"\n                var := /** @src 0:3905:3909  \"true\" */ 0x01\n            }\n            /// @ast-id 166 @src 0:4431:4628  \"function approve(address spender, uint256 amount) public virtual override returns (bool) {...\"\n            function fun_approve(var_spender, var_amount) -> var\n            {\n                /// @src 0:4593:4599  \"amount\"\n                fun__approve(/** @src 3:719:729  \"msg.sender\" */ caller(), /** @src 0:4593:4599  \"amount\" */ var_spender, var_amount)\n                /// @src 0:4610:4621  \"return true\"\n                var := /** @src 0:4617:4621  \"true\" */ 0x01\n            }\n            /// @ast-id 199 @src 0:5190:5476  \"function transferFrom(...\"\n            function fun_transferFrom(var_from, var_to, var_amount) -> var\n            {\n                /// @src 0:1401:13011  \"contract ERC20 is Context, IERC20, IERC20Metadata {...\"\n                mstore(/** @src -1:-1:-1 */ 0, /** @src 0:1401:13011  \"contract ERC20 is Context, IERC20, IERC20Metadata {...\" */ and(var_from, sub(shl(160, 1), 1)))\n                mstore(0x20, /** @src 0:4089:4100  \"_allowances\" */ 0x01)\n                /// @src 0:1401:13011  \"contract ERC20 is Context, IERC20, IERC20Metadata {...\"\n                let _1 := sload(/** @src 0:4089:4116  \"_allowances[owner][spender]\" */ mapping_index_access_mapping_address_uint256_of_address(/** @src 0:1401:13011  \"contract ERC20 is Context, IERC20, IERC20Metadata {...\" */ keccak256(/** @src -1:-1:-1 */ 0, /** @src 0:1401:13011  \"contract ERC20 is Context, IERC20, IERC20Metadata {...\" */ 0x40), /** @src 3:719:729  \"msg.sender\" */ caller()))\n                /// @src 0:11347:11590  \"if (currentAllowance != type(uint256).max) {...\"\n                if /** @src 0:11351:11388  \"currentAllowance != type(uint256).max\" */ iszero(eq(_1, /** @src 0:11371:11388  \"type(uint256).max\" */ not(0)))\n                /// @src 0:11347:11590  \"if (currentAllowance != type(uint256).max) {...\"\n                {\n                    /// @src 0:1401:13011  \"contract ERC20 is Context, IERC20, IERC20Metadata {...\"\n                    if /** @src 0:11412:11438  \"currentAllowance >= amount\" */ lt(_1, var_amount)\n                    /// @src 0:1401:13011  \"contract ERC20 is Context, IERC20, IERC20Metadata {...\"\n                    {\n                        let memPtr := mload(0x40)\n                        mstore(memPtr, shl(229, 4594637))\n                        mstore(add(memPtr, 4), 0x20)\n                        mstore(add(memPtr, 36), 29)\n                        mstore(add(memPtr, 68), \"ERC20: insufficient allowance\")\n                        revert(memPtr, 100)\n                    }\n                    /// @src 0:11539:11564  \"currentAllowance - amount\"\n                    fun__approve(var_from, /** @src 3:719:729  \"msg.sender\" */ caller(), /** @src 0:1401:13011  \"contract ERC20 is Context, IERC20, IERC20Metadata {...\" */ sub(/** @src 0:11539:11564  \"currentAllowance - amount\" */ _1, var_amount))\n                }\n                /// @src 0:5441:5447  \"amount\"\n                fun__transfer(var_from, var_to, var_amount)\n                /// @src 0:5458:5469  \"return true\"\n                var := /** @src 0:4089:4100  \"_allowances\" */ 0x01\n            }\n            /// @ast-id 228 @src 0:5871:6105  \"function increaseAllowance(address spender, uint256 addedValue) public virtual returns (bool) {...\"\n            function fun_increaseAllowance(var_spender, var_addedValue) -> var\n            {\n                /// @src 0:1401:13011  \"contract ERC20 is Context, IERC20, IERC20Metadata {...\"\n                mstore(/** @src -1:-1:-1 */ 0, /** @src 3:719:729  \"msg.sender\" */ caller())\n                /// @src 0:1401:13011  \"contract ERC20 is Context, IERC20, IERC20Metadata {...\"\n                mstore(0x20, /** @src 0:4089:4100  \"_allowances\" */ 0x01)\n                /// @src 0:1401:13011  \"contract ERC20 is Context, IERC20, IERC20Metadata {...\"\n                let _1 := sload(/** @src 0:4089:4116  \"_allowances[owner][spender]\" */ mapping_index_access_mapping_address_uint256_of_address(/** @src 0:1401:13011  \"contract ERC20 is Context, IERC20, IERC20Metadata {...\" */ keccak256(/** @src -1:-1:-1 */ 0, /** @src 0:1401:13011  \"contract ERC20 is Context, IERC20, IERC20Metadata {...\" */ 0x40), /** @src 0:6038:6063  \"allowance(owner, spender)\" */ var_spender))\n                /// @src 0:1401:13011  \"contract ERC20 is Context, IERC20, IERC20Metadata {...\"\n                if gt(_1, not(var_addedValue))\n                {\n                    mstore(/** @src -1:-1:-1 */ 0, /** @src 0:1401:13011  \"contract ERC20 is Context, IERC20, IERC20Metadata {...\" */ shl(224, 0x4e487b71))\n                    mstore(4, 0x11)\n                    revert(/** @src -1:-1:-1 */ 0, /** @src 0:1401:13011  \"contract ERC20 is Context, IERC20, IERC20Metadata {...\" */ 0x24)\n                }\n                /// @src 0:6038:6076  \"allowance(owner, spender) + addedValue\"\n                fun__approve(/** @src 3:719:729  \"msg.sender\" */ caller(), /** @src 0:6038:6076  \"allowance(owner, spender) + addedValue\" */ var_spender, /** @src 0:1401:13011  \"contract ERC20 is Context, IERC20, IERC20Metadata {...\" */ add(_1, var_addedValue))\n                /// @src 0:6087:6098  \"return true\"\n                var := /** @src 0:4089:4100  \"_allowances\" */ 0x01\n            }\n            /// @ast-id 269 @src 0:6592:7019  \"function decreaseAllowance(address spender, uint256 subtractedValue) public virtual returns (bool) {...\"\n            function fun_decreaseAllowance(var_spender, var_subtractedValue) -> var\n            {\n                /// @src 0:1401:13011  \"contract ERC20 is Context, IERC20, IERC20Metadata {...\"\n                mstore(/** @src -1:-1:-1 */ 0, /** @src 3:719:729  \"msg.sender\" */ caller())\n                /// @src 0:1401:13011  \"contract ERC20 is Context, IERC20, IERC20Metadata {...\"\n                mstore(0x20, /** @src 0:4089:4100  \"_allowances\" */ 0x01)\n                /// @src 0:1401:13011  \"contract ERC20 is Context, IERC20, IERC20Metadata {...\"\n                let _1 := sload(/** @src 0:4089:4116  \"_allowances[owner][spender]\" */ mapping_index_access_mapping_address_uint256_of_address(/** @src 0:1401:13011  \"contract ERC20 is Context, IERC20, IERC20Metadata {...\" */ keccak256(/** @src -1:-1:-1 */ 0, /** @src 0:1401:13011  \"contract ERC20 is Context, IERC20, IERC20Metadata {...\" */ 0x40), /** @src 0:6766:6791  \"allowance(owner, spender)\" */ var_spender))\n                /// @src 0:1401:13011  \"contract ERC20 is Context, IERC20, IERC20Metadata {...\"\n                if /** @src 0:6809:6844  \"currentAllowance >= subtractedValue\" */ lt(_1, var_subtractedValue)\n                /// @src 0:1401:13011  \"contract ERC20 is Context, IERC20, IERC20Metadata {...\"\n                {\n                    let memPtr := mload(0x40)\n                    mstore(memPtr, shl(229, 4594637))\n                    mstore(add(memPtr, 4), 0x20)\n                    mstore(add(memPtr, 36), 37)\n                    mstore(add(memPtr, 68), \"ERC20: decreased allowance below\")\n                    mstore(add(memPtr, 100), \" zero\")\n                    revert(memPtr, 132)\n                }\n                /// @src 0:6945:6979  \"currentAllowance - subtractedValue\"\n                fun__approve(/** @src 3:719:729  \"msg.sender\" */ caller(), /** @src 0:6945:6979  \"currentAllowance - subtractedValue\" */ var_spender, /** @src 0:1401:13011  \"contract ERC20 is Context, IERC20, IERC20Metadata {...\" */ sub(/** @src 0:6945:6979  \"currentAllowance - subtractedValue\" */ _1, var_subtractedValue))\n                /// @src 0:7001:7012  \"return true\"\n                var := /** @src 0:4089:4100  \"_allowances\" */ 0x01\n            }\n            /// @src 0:1401:13011  \"contract ERC20 is Context, IERC20, IERC20Metadata {...\"\n            function require_helper_stringliteral(condition)\n            {\n                if iszero(condition)\n                {\n                    let memPtr := mload(64)\n                    mstore(memPtr, shl(229, 4594637))\n                    mstore(add(memPtr, 4), 32)\n                    mstore(add(memPtr, 36), 35)\n                    mstore(add(memPtr, 68), \"ERC20: transfer to the zero addr\")\n                    mstore(add(memPtr, 100), \"ess\")\n                    revert(memPtr, 132)\n                }\n            }\n            function require_helper_stringliteral_4107(condition)\n            {\n                if iszero(condition)\n                {\n                    let memPtr := mload(64)\n                    mstore(memPtr, shl(229, 4594637))\n                    mstore(add(memPtr, 4), 32)\n                    mstore(add(memPtr, 36), 38)\n                    mstore(add(memPtr, 68), \"ERC20: transfer amount exceeds b\")\n                    mstore(add(memPtr, 100), \"alance\")\n                    revert(memPtr, 132)\n                }\n            }\n            /// @ast-id 346 @src 0:7473:8291  \"function _transfer(...\"\n            function fun__transfer(var_from, var_to, var_amount)\n            {\n                /// @src 0:1401:13011  \"contract ERC20 is Context, IERC20, IERC20Metadata {...\"\n                let _1 := sub(shl(160, 1), 1)\n                if /** @src 0:7599:7617  \"from != address(0)\" */ iszero(/** @src 0:1401:13011  \"contract ERC20 is Context, IERC20, IERC20Metadata {...\" */ and(/** @src 0:7599:7617  \"from != address(0)\" */ var_from, /** @src 0:1401:13011  \"contract ERC20 is Context, IERC20, IERC20Metadata {...\" */ _1))\n                {\n                    let memPtr := mload(64)\n                    mstore(memPtr, shl(229, 4594637))\n                    mstore(add(memPtr, 4), 32)\n                    mstore(add(memPtr, 36), 37)\n                    mstore(add(memPtr, 68), \"ERC20: transfer from the zero ad\")\n                    mstore(add(memPtr, 100), \"dress\")\n                    revert(memPtr, 132)\n                }\n                /// @src 0:7669:7733  \"require(to != address(0), \\\"ERC20: transfer to the zero address\\\")\"\n                require_helper_stringliteral(/** @src 0:7677:7693  \"to != address(0)\" */ iszero(iszero(/** @src 0:1401:13011  \"contract ERC20 is Context, IERC20, IERC20Metadata {...\" */ and(/** @src 0:7677:7693  \"to != address(0)\" */ var_to, /** @src 0:1401:13011  \"contract ERC20 is Context, IERC20, IERC20Metadata {...\" */ _1))))\n                let _2 := sload(/** @src 0:7815:7830  \"_balances[from]\" */ mapping_index_access_mapping_address_uint256_of_address_2493(var_from))\n                /// @src 0:7840:7912  \"require(fromBalance >= amount, \\\"ERC20: transfer amount exceeds balance\\\")\"\n                require_helper_stringliteral_4107(/** @src 0:7848:7869  \"fromBalance >= amount\" */ iszero(lt(_2, var_amount)))\n                /// @src 0:1401:13011  \"contract ERC20 is Context, IERC20, IERC20Metadata {...\"\n                sstore(/** @src 0:7946:7961  \"_balances[from]\" */ mapping_index_access_mapping_address_uint256_of_address_2493(var_from), /** @src 0:1401:13011  \"contract ERC20 is Context, IERC20, IERC20Metadata {...\" */ sub(/** @src 0:7964:7984  \"fromBalance - amount\" */ _2, var_amount))\n                /// @src 0:8161:8174  \"_balances[to]\"\n                let _3 := mapping_index_access_mapping_address_uint256_of_address_2493(var_to)\n                /// @src 0:1401:13011  \"contract ERC20 is Context, IERC20, IERC20Metadata {...\"\n                sstore(_3, add(sload(/** @src 0:8161:8184  \"_balances[to] += amount\" */ _3), /** @src 0:1401:13011  \"contract ERC20 is Context, IERC20, IERC20Metadata {...\" */ var_amount))\n                /// @src 0:8210:8236  \"Transfer(from, to, amount)\"\n                let _4 := /** @src 0:1401:13011  \"contract ERC20 is Context, IERC20, IERC20Metadata {...\" */ mload(64)\n                /// @src 0:8210:8236  \"Transfer(from, to, amount)\"\n                log3(_4, sub(abi_encode_uint256(_4, var_amount), _4), 0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef, var_from, var_to)\n            }\n            /// @ast-id 520 @src 0:10504:10874  \"function _approve(...\"\n            function fun__approve(var_owner, var_spender, var_amount)\n            {\n                /// @src 0:1401:13011  \"contract ERC20 is Context, IERC20, IERC20Metadata {...\"\n                let _1 := sub(shl(160, 1), 1)\n                if /** @src 0:10635:10654  \"owner != address(0)\" */ iszero(/** @src 0:1401:13011  \"contract ERC20 is Context, IERC20, IERC20Metadata {...\" */ and(/** @src 0:10635:10654  \"owner != address(0)\" */ var_owner, /** @src 0:1401:13011  \"contract ERC20 is Context, IERC20, IERC20Metadata {...\" */ _1))\n                {\n                    let memPtr := mload(64)\n                    mstore(memPtr, shl(229, 4594637))\n                    mstore(add(memPtr, 4), 32)\n                    mstore(add(memPtr, 36), 36)\n                    mstore(add(memPtr, 68), \"ERC20: approve from the zero add\")\n                    mstore(add(memPtr, 100), \"ress\")\n                    revert(memPtr, 132)\n                }\n                if /** @src 0:10713:10734  \"spender != address(0)\" */ iszero(/** @src 0:1401:13011  \"contract ERC20 is Context, IERC20, IERC20Metadata {...\" */ and(/** @src 0:10713:10734  \"spender != address(0)\" */ var_spender, /** @src 0:1401:13011  \"contract ERC20 is Context, IERC20, IERC20Metadata {...\" */ _1))\n                {\n                    let memPtr_1 := mload(64)\n                    mstore(memPtr_1, shl(229, 4594637))\n                    mstore(add(memPtr_1, 4), 32)\n                    mstore(add(memPtr_1, 36), 34)\n                    mstore(add(memPtr_1, 68), \"ERC20: approve to the zero addre\")\n                    mstore(add(memPtr_1, 100), \"ss\")\n                    revert(memPtr_1, 132)\n                }\n                sstore(/** @src 0:10784:10811  \"_allowances[owner][spender]\" */ mapping_index_access_mapping_address_uint256_of_address(/** @src 0:10784:10802  \"_allowances[owner]\" */ mapping_index_access_mapping_address_uint256_of_address_2492(var_owner), /** @src 0:10784:10811  \"_allowances[owner][spender]\" */ var_spender), /** @src 0:1401:13011  \"contract ERC20 is Context, IERC20, IERC20Metadata {...\" */ var_amount)\n                /// @src 0:10835:10867  \"Approval(owner, spender, amount)\"\n                let _2 := /** @src 0:1401:13011  \"contract ERC20 is Context, IERC20, IERC20Metadata {...\" */ mload(64)\n                /// @src 0:10835:10867  \"Approval(owner, spender, amount)\"\n                log3(_2, sub(abi_encode_uint256(_2, var_amount), _2), 0x8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925, var_owner, var_spender)\n            }\n        }\n        data \".metadata\" hex\"a3646970667358221220a2a92affd2933959207fb6dabf99be8ec943076acc3e1ff31ebc0da93aeb7d0c6c6578706572696d656e74616cf564736f6c63430008080041\"\n    }\n}\n","hash":"01000209e492bb82b76f7e234376e1f80401fe88e343431e76bd6598a2b9e4e5","factoryDependencies":{}}},"@openzeppelin/contracts/token/ERC20/IERC20.sol":{"IERC20":{"abi":[{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"spender","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Approval","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Transfer","type":"event"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"spender","type":"address"}],"name":"allowance","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"approve","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"balanceOf","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"totalSupply","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"transfer","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"transferFrom","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"}],"metadata":"{\"compiler\":{\"version\":\"0.8.8+commit.dddeac2f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC20 standard as defined in the EIP.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets `amount` as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the amount of tokens owned by `account`.\"},\"totalSupply()\":{\"details\":\"Returns the amount of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves `amount` tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves `amount` tokens from `from` to `to` using the allowance mechanism. `amount` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":\"IERC20\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x9750c6b834f7b43000631af5cc30001c5f547b3ceb3635488f140f60e897ea6b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5a7d5b1ef5d8d5889ad2ed89d8619c09383b80b72ab226e0fe7bde1636481e34\",\"dweb:/ipfs/QmebXWgtEfumQGBdVeM6c71McLixYXQP5Bk6kKXuoY4Bmr\"]}},\"version\":1}","evm":{"legacyAssembly":null,"assembly":null,"bytecode":null,"methodIdentifiers":{"allowance(address,address)":"dd62ed3e","approve(address,uint256)":"095ea7b3","balanceOf(address)":"70a08231","totalSupply()":"18160ddd","transfer(address,uint256)":"a9059cbb","transferFrom(address,address,uint256)":"23b872dd"}},"irOptimized":""}},"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol":{"IERC20Metadata":{"abi":[{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"spender","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Approval","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Transfer","type":"event"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"spender","type":"address"}],"name":"allowance","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"approve","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"balanceOf","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"decimals","outputs":[{"internalType":"uint8","name":"","type":"uint8"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"name","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"symbol","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"totalSupply","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"transfer","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"transferFrom","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"}],"metadata":"{\"compiler\":{\"version\":\"0.8.8+commit.dddeac2f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface for the optional metadata functions from the ERC20 standard. _Available since v4.1._\",\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets `amount` as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the amount of tokens owned by `account`.\"},\"decimals()\":{\"details\":\"Returns the decimals places of the token.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token.\"},\"totalSupply()\":{\"details\":\"Returns the amount of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves `amount` tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves `amount` tokens from `from` to `to` using the allowance mechanism. `amount` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":\"IERC20Metadata\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x9750c6b834f7b43000631af5cc30001c5f547b3ceb3635488f140f60e897ea6b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5a7d5b1ef5d8d5889ad2ed89d8619c09383b80b72ab226e0fe7bde1636481e34\",\"dweb:/ipfs/QmebXWgtEfumQGBdVeM6c71McLixYXQP5Bk6kKXuoY4Bmr\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0x8de418a5503946cabe331f35fe242d3201a73f67f77aaeb7110acb1f30423aca\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5a376d3dda2cb70536c0a45c208b29b34ac560c4cb4f513a42079f96ba47d2dd\",\"dweb:/ipfs/QmZQg6gn1sUpM8wHzwNvSnihumUCAhxD119MpXeKp8B9s8\"]}},\"version\":1}","evm":{"legacyAssembly":null,"assembly":null,"bytecode":null,"methodIdentifiers":{"allowance(address,address)":"dd62ed3e","approve(address,uint256)":"095ea7b3","balanceOf(address)":"70a08231","decimals()":"313ce567","name()":"06fdde03","symbol()":"95d89b41","totalSupply()":"18160ddd","transfer(address,uint256)":"a9059cbb","transferFrom(address,address,uint256)":"23b872dd"}},"irOptimized":""}},"@openzeppelin/contracts/utils/Context.sol":{"Context":{"abi":[],"metadata":"{\"compiler\":{\"version\":\"0.8.8+commit.dddeac2f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Context.sol\":\"Context\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92\",\"dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3\"]}},\"version\":1}","evm":{"legacyAssembly":null,"assembly":null,"bytecode":null,"methodIdentifiers":{}},"irOptimized":""}},"contracts/Greeter.sol":{"Greeter":{"abi":[{"inputs":[{"internalType":"string","name":"_greeting","type":"string"}],"stateMutability":"nonpayable","type":"constructor"},{"inputs":[],"name":"greet","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"string","name":"_greeting","type":"string"}],"name":"setGreeting","outputs":[],"stateMutability":"nonpayable","type":"function"}],"metadata":{"optimizer_settings":"M3B3","solc_metadata":"{\"compiler\":{\"version\":\"0.8.8+commit.dddeac2f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"string\",\"name\":\"_greeting\",\"type\":\"string\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"greet\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"_greeting\",\"type\":\"string\"}],\"name\":\"setGreeting\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/Greeter.sol\":\"Greeter\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"contracts/Greeter.sol\":{\"keccak256\":\"0x1e8978950f6aee785b5f66cdbf418d045607af335e968e2220c0a5ddb6c5a06e\",\"license\":\"Unlicense\",\"urls\":[\"bzz-raw://8d00ce89d226618dc41474f0f947483caa62cf958bbeb65ae725236e9c07afba\",\"dweb:/ipfs/QmWZUG5SHtnLhmTkpRGkCDTiCRgWhM8bKpiMJRo7TtVvnL\"]}},\"version\":1}","zk_version":"1.3.8"},"evm":{"legacyAssembly":null,"assembly":"\t.text\n\t.file\t\"Greeter.sol:Greeter\"\n\t.globl\t__entry\n__entry:\n.func_begin0:\n\tnop\tstack+=[1]\n\tptr.add\tr1, r0, stack[@ptr_calldata]\n\tshr.s\t96, r1, r1\n\tand\t@CPI0_0[0], r1, stack[@calldatasize]\n\tadd\t128, r0, r1\n\tst.1\t64, r1\n\tand!\t1, r2, r1\n\tjump.ne\t@.BB0_1\n\tadd\tstack[@calldatasize], r0, r1\n\tsub.s!\t4, r1, r1\n\tjump.lt\t@.BB0_2\n\tptr.add\tstack[@ptr_calldata], r0, r1\n\tld\tr1, r1\n\tshr.s\t224, r1, r1\n\tsub.s!\t@CPI0_4[0], r1, r2\n\tjump.eq\t@.BB0_39\n\tsub.s!\t@CPI0_5[0], r1, r1\n\tjump.ne\t@.BB0_2\n\tcontext.get_context_u128\tr1\n\tsub.s!\t0, r1, r1\n\tjump.ne\t@.BB0_2\n\tadd\tstack[@calldatasize], r0, r1\n\tsub.s\t4, r1, r2\n\tadd\t@CPI0_2[0], r0, r3\n\tsub.s!\t32, r2, r4\n\tadd\t0, r0, r4\n\tadd.lt\tr3, r0, r4\n\tand\t@CPI0_2[0], r2, r2\n\tsub.s!\t0, r2, r5\n\tadd.le\t0, r0, r3\n\tsub.s!\t@CPI0_2[0], r2, r2\n\tadd\tr4, r0, r2\n\tadd.eq\tr3, r0, r2\n\tsub.s!\t0, r2, r2\n\tjump.ne\t@.BB0_2\n\tptr.add\tstack[@ptr_calldata], r0, r2\n\tptr.add.s\t4, r2, r3\n\tld\tr3, r4\n\tsub.s!\t@CPI0_1[0], r4, r3\n\tjump.gt\t@.BB0_2\n\tadd\t35, r4, r3\n\tadd\t@CPI0_2[0], r0, r5\n\tsub!\tr3, r1, r6\n\tadd\t0, r0, r6\n\tadd.ge\tr5, r0, r6\n\tand\t@CPI0_2[0], r1, r1\n\tand\t@CPI0_2[0], r3, r3\n\tsub!\tr3, r1, r7\n\tadd.ge\t0, r0, r5\n\txor\tr3, r1, r1\n\tsub.s!\t@CPI0_2[0], r1, r1\n\tadd\tr6, r0, r1\n\tadd.eq\tr5, r0, r1\n\tsub.s!\t0, r1, r1\n\tjump.ne\t@.BB0_2\n\tadd\t4, r4, r1\n\tptr.add\tr2, r1, r1\n\tld\tr1, r2\n\tsub.s!\t@CPI0_1[0], r2, r1\n\tjump.gt\t@.BB0_5\n\tadd\t63, r2, r1\n\tsub.s\t32, r0, r3\n\tand\tr1, r3, r3\n\tld.1\t64, r1\n\tadd\tr1, r3, r3\n\tsub!\tr3, r1, r5\n\tadd\t0, r0, r5\n\tadd.lt\t1, r0, r5\n\tsub.s!\t@CPI0_1[0], r3, r6\n\tjump.gt\t@.BB0_5\n\tand!\t1, r5, r5\n\tjump.ne\t@.BB0_5\n\tst.1\t64, r3\n\tst.1.inc\tr1, r2, r3\n\tadd\t36, r4, r5\n\tadd\tr2, r5, r4\n\tadd\tstack[@calldatasize], r0, r6\n\tsub!\tr4, r6, r4\n\tjump.gt\t@.BB0_2\n\tand\t31, r2, r4\n\tptr.add\tstack[@ptr_calldata], r5, r5\n\tshr.s!\t5, r2, r6\n\tjump.eq\t@.BB0_42\n\tadd\tr0, r0, r7\n.BB0_36:\n\tshl.s\t5, r7, r8\n\tadd\tr3, r8, r9\n\tptr.add\tr5, r8, r8\n\tld\tr8, r8\n\tst.1\tr9, r8\n\tadd\t1, r7, r7\n\tsub!\tr7, r6, r8\n\tjump.lt\t@.BB0_36\n.BB0_42:\n\tsub.s!\t0, r4, r7\n\tjump.eq\t@.BB0_38\n\tshl.s\t5, r6, r6\n\tptr.add\tr5, r6, r5\n\tadd\tr3, r6, r6\n\tshl.s\t3, r4, r4\n\tld.1\tr6, r7\n\tshl\tr7, r4, r7\n\tshr\tr7, r4, r7\n\tld\tr5, r5\n\tsub\t256, r4, r4\n\tshr\tr5, r4, r5\n\tshl\tr5, r4, r4\n\tor\tr4, r7, r4\n\tst.1\tr6, r4\n.BB0_38:\n\tadd\tr3, r2, r2\n\tst.1\tr2, r0\n\tnear_call\tr0, @copy_byte_array_to_storage_from_string_to_string.6, @DEFAULT_UNWIND\n\tadd\t@CPI0_0[0], r0, r1\n\tld.1\t64, r2\n\tsub.s!\t@CPI0_0[0], r2, r3\n\tadd.lt\tr2, r0, r1\n\tshl.s\t64, r1, r1\n\tret.ok.to_label\tr1, @DEFAULT_FAR_RETURN\n.BB0_1:\n\tcontext.get_context_u128\tr1\n\tsub.s!\t0, r1, r1\n\tjump.ne\t@.BB0_2\n\tadd\tstack[@calldatasize], r0, r2\n\tadd\t31, r2, r3\n\tsub.s\t32, r0, r1\n\tand\tr3, r1, r5\n\tld.1\t64, r3\n\tadd\tr5, r3, r4\n\tsub!\tr4, r5, r5\n\tadd\t0, r0, r5\n\tadd.lt\t1, r0, r5\n\tsub.s!\t@CPI0_1[0], r4, r6\n\tjump.gt\t@.BB0_5\n\tand!\t1, r5, r5\n\tjump.ne\t@.BB0_5\n\tst.1\t64, r4\n\tand\t31, r2, r4\n\tptr.add\tstack[@ptr_calldata], r0, r5\n\tshr.s!\t5, r2, r6\n\tjump.eq\t@.BB0_43\n\tadd\tr0, r0, r7\n.BB0_8:\n\tshl.s\t5, r7, r8\n\tadd\tr3, r8, r9\n\tptr.add\tr5, r8, r8\n\tld\tr8, r8\n\tst.1\tr9, r8\n\tadd\t1, r7, r7\n\tsub!\tr7, r6, r8\n\tjump.lt\t@.BB0_8\n.BB0_43:\n\tsub.s!\t0, r4, r7\n\tjump.eq\t@.BB0_10\n\tshl.s\t5, r6, r6\n\tptr.add\tr5, r6, r5\n\tadd\tr3, r6, r6\n\tshl.s\t3, r4, r4\n\tld.1\tr6, r7\n\tshl\tr7, r4, r7\n\tshr\tr7, r4, r7\n\tld\tr5, r5\n\tsub\t256, r4, r4\n\tshr\tr5, r4, r5\n\tshl\tr5, r4, r4\n\tor\tr4, r7, r4\n\tst.1\tr6, r4\n.BB0_10:\n\tadd\t@CPI0_2[0], r0, r4\n\tsub.s!\t32, r2, r5\n\tadd\t0, r0, r5\n\tadd.lt\tr4, r0, r5\n\tand\t@CPI0_2[0], r2, r6\n\tsub.s!\t0, r6, r7\n\tadd.le\t0, r0, r4\n\tsub.s!\t@CPI0_2[0], r6, r6\n\tadd.ne\tr5, r0, r4\n\tsub.s!\t0, r4, r4\n\tjump.ne\t@.BB0_2\n\tld.1\tr3, r5\n\tsub.s!\t@CPI0_1[0], r5, r4\n\tjump.gt\t@.BB0_2\n\tadd\tr3, r2, r4\n\tadd\tr5, r3, r2\n\tadd\t31, r2, r3\n\tadd\t@CPI0_2[0], r0, r5\n\tsub!\tr3, r4, r6\n\tadd\t0, r0, r6\n\tadd.ge\tr5, r0, r6\n\tand\t@CPI0_2[0], r3, r3\n\tand\t@CPI0_2[0], r4, r7\n\tsub!\tr3, r7, r8\n\tadd.ge\t0, r0, r5\n\txor\tr3, r7, r3\n\tsub.s!\t@CPI0_2[0], r3, r3\n\tadd\tr6, r0, r3\n\tadd.eq\tr5, r0, r3\n\tsub.s!\t0, r3, r3\n\tjump.ne\t@.BB0_2\n\tld.1\tr2, r3\n\tsub.s!\t@CPI0_1[0], r3, r5\n\tjump.gt\t@.BB0_5\n\tadd\t63, r3, r5\n\tand\tr5, r1, r5\n\tld.1\t64, r1\n\tadd\tr1, r5, r5\n\tsub!\tr5, r1, r6\n\tadd\t0, r0, r6\n\tadd.lt\t1, r0, r6\n\tsub.s!\t@CPI0_1[0], r5, r7\n\tjump.gt\t@.BB0_5\n\tand!\t1, r6, r6\n\tjump.ne\t@.BB0_5\n\tst.1\t64, r5\n\tst.1\tr1, r3\n\tadd\t32, r3, r5\n\tadd\tr5, r2, r6\n\tsub!\tr6, r4, r4\n\tjump.gt\t@.BB0_2\n\tsub.s!\t0, r3, r4\n\tjump.eq\t@.BB0_22\n\tadd\tr0, r0, r4\n.BB0_19:\n\tadd\t32, r4, r4\n\tadd\tr4, r1, r6\n\tadd\tr4, r2, r7\n\tld.1\tr7, r7\n\tst.1\tr6, r7\n\tsub!\tr4, r3, r6\n\tjump.lt\t@.BB0_19\n\tsub!\tr4, r3, r2\n\tjump.le\t@.BB0_22\n\tadd\tr5, r1, r2\n\tst.1\tr2, r0\n.BB0_22:\n\tnear_call\tr0, @copy_byte_array_to_storage_from_string_to_string, @DEFAULT_UNWIND\n\tadd\t32, r0, r1\n\tst.2\t256, r1\n\tst.2\t288, r0\n\tadd\t@CPI0_3[0], r0, r1\n\tret.ok.to_label\tr1, @DEFAULT_FAR_RETURN\n.BB0_5:\n\tadd\t@CPI0_6[0], r0, r1\n\tst.1\t0, r1\n\tadd\t65, r0, r1\n\tst.1\t4, r1\n\tadd\t@CPI0_7[0], r0, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB0_39:\n\tcontext.get_context_u128\tr1\n\tsub.s!\t0, r1, r1\n\tjump.ne\t@.BB0_2\n\tsub.s\t4, r0, r1\n\tadd\tstack[@calldatasize], r1, r1\n\tadd\t@CPI0_2[0], r0, r2\n\tsub.s!\t0, r1, r3\n\tadd\t0, r0, r3\n\tadd.lt\tr2, r0, r3\n\tand\t@CPI0_2[0], r1, r1\n\tsub.s!\t0, r1, r4\n\tadd.le\t0, r0, r2\n\tsub.s!\t@CPI0_2[0], r1, r1\n\tadd\tr3, r0, r1\n\tadd.eq\tr2, r0, r1\n\tsub.s!\t0, r1, r1\n\tjump.eq\t@.BB0_41\n.BB0_2:\n\tadd\tr0, r0, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB0_41:\n\tnear_call\tr0, @copy_array_from_storage_to_memory_string, @DEFAULT_UNWIND\n\tadd\tr1, r0, r2\n\tld.1\t64, r1\n\tadd\tr1, r0, stack-[1]\n\tnear_call\tr0, @abi_encode_string, @DEFAULT_UNWIND\n\tadd\tstack-[1], r0, r4\n\tsub\tr1, r4, r1\n\tadd\t@CPI0_0[0], r0, r2\n\tsub.s!\t@CPI0_0[0], r1, r3\n\tadd.ge\tr2, r0, r1\n\tsub.s!\t@CPI0_0[0], r4, r3\n\tadd.lt\tr4, r0, r2\n\tshl.s\t64, r2, r2\n\tshl.s\t96, r1, r1\n\tor\tr1, r2, r1\n\tret.ok.to_label\tr1, @DEFAULT_FAR_RETURN\n.func_end0:\n\ncopy_byte_array_to_storage_from_string_to_string:\n.func_begin1:\n\tnop\tstack+=[4]\n\tld.1.inc\tr1, r4, r6\n\tsub.s!\t@CPI1_0[0], r4, r2\n\tjump.ge\t@.BB1_1\n\tsload\tr0, r3\n\tand!\t1, r3, r2\n\tshr.s\t1, r3, r5\n\tand\t127, r5, r3\n\tadd.eq\tr3, r0, r5\n\tsub.s!\t31, r5, r3\n\tadd\t0, r0, r3\n\tadd.gt\t1, r0, r3\n\tand\t1, r3, r3\n\tsub!\tr2, r3, r2\n\tjump.ne\t@.BB1_3\n\tadd\tr1, r0, stack-[3]\n\tsub.s!\t32, r5, r1\n\tadd\tr4, r0, stack-[4]\n\tjump.lt\t@.BB1_10\n\tadd\tr5, r0, stack-[1]\n\tadd\tr6, r0, stack-[2]\n\tst.1\t0, r0\n\tadd\t@CPI1_1[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI1_1[0], r2, r3\n\tadd.lt\tr2, r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI1_2[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB1_6\n\tadd\tstack-[4], r0, r4\n\tadd\t31, r4, r2\n\tshr.s\t5, r2, r2\n\tsub.s!\t32, r4, r3\n\tadd.lt\t0, r0, r2\n\tld\tr1, r3\n\tadd\tstack-[1], r0, r1\n\tadd\t31, r1, r1\n\tshr.s\t5, r1, r1\n\tadd\tr3, r1, r1\n\tadd\tr3, r2, r2\n\tsub!\tr2, r1, r3\n\tadd\tstack-[2], r0, r6\n\tjump.ge\t@.BB1_10\n.BB1_9:\n\tsstore\tr2, r0\n\tadd\t1, r2, r2\n\tsub!\tr2, r1, r3\n\tjump.lt\t@.BB1_9\n.BB1_10:\n\tsub.s!\t31, r4, r1\n\tjump.le\t@.BB1_19\n\tst.1\t0, r0\n\tadd\t@CPI1_1[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI1_1[0], r2, r3\n\tadd.lt\tr2, r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI1_2[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB1_6\n\tsub.s\t32, r0, r2\n\tadd\tstack-[4], r0, r6\n\tand!\tr6, r2, r3\n\tadd\t32, r0, r2\n\tld\tr1, r1\n\tadd\tstack-[3], r0, r7\n\tjump.eq\t@.BB1_16\n\tadd\t32, r0, r2\n\tadd\tr0, r0, r4\n.BB1_15:\n\tadd\tr2, r7, r5\n\tld.1\tr5, r5\n\tsstore\tr1, r5\n\tadd\t32, r2, r2\n\tadd\t1, r1, r1\n\tadd\t32, r4, r4\n\tsub!\tr4, r3, r5\n\tjump.lt\t@.BB1_15\n.BB1_16:\n\tsub!\tr3, r6, r3\n\tjump.ge\t@.BB1_18\n\tshl.s\t3, r6, r3\n\tand\t248, r3, r3\n\tsub.s\t1, r0, r4\n\tshr\tr4, r3, r3\n\txor\tr3, r4, r3\n\tadd\tr2, r7, r2\n\tld.1\tr2, r2\n\tand\tr2, r3, r2\n\tsstore\tr1, r2\n.BB1_18:\n\tshl.s\t1, r6, r1\n\tor\t1, r1, r1\n\tjump\t@.BB1_11\n.BB1_19:\n\tsub.s!\t0, r4, r1\n\tadd\tr0, r0, r1\n\tjump.eq\t@.BB1_11\n\tshl.s\t3, r4, r1\n\tsub.s\t1, r0, r2\n\tshr\tr2, r1, r1\n\txor\tr1, r2, r1\n\tld.1\tr6, r2\n\tand\tr2, r1, r1\n\tshl.s\t1, r4, r2\n\tor\tr1, r2, r1\n.BB1_11:\n\tsstore\tr0, r1\n\tret\n.BB1_1:\n\tadd\t@CPI1_3[0], r0, r1\n\tst.1\t0, r1\n\tadd\t65, r0, r1\n\tst.1\t4, r1\n\tadd\t@CPI1_4[0], r0, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB1_3:\n\tadd\t@CPI1_3[0], r0, r1\n\tst.1\t0, r1\n\tadd\t34, r0, r1\n\tst.1\t4, r1\n\tadd\t@CPI1_4[0], r0, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB1_6:\n\tadd\tr0, r0, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.func_end1:\n\nabi_encode_string:\n.func_begin2:\n\tadd\t32, r0, r3\n\tst.1.inc\tr1, r3, r4\n\tld.1\tr2, r3\n\tst.1\tr4, r3\n\tsub.s!\t0, r3, r4\n\tadd\t64, r1, r1\n\tjump.eq\t@.BB2_4\n\tadd\tr0, r0, r4\n.BB2_2:\n\tadd\tr1, r4, r5\n\tadd\t32, r4, r4\n\tadd\tr4, r2, r6\n\tld.1\tr6, r6\n\tst.1\tr5, r6\n\tsub!\tr4, r3, r5\n\tjump.lt\t@.BB2_2\n\tsub!\tr4, r3, r2\n\tjump.le\t@.BB2_4\n\tadd\tr1, r3, r2\n\tst.1\tr2, r0\n\tjump\t@.BB2_6\n.BB2_4:\n.BB2_6:\n\tadd\t31, r3, r2\n\tsub.s\t32, r0, r3\n\tand\tr2, r3, r2\n\tadd\tr1, r2, r1\n\tret\n.func_end2:\n\ncopy_array_from_storage_to_memory_string:\n.func_begin3:\n\tsload\tr0, r4\n\tand!\t1, r4, r5\n\tshr.s\t1, r4, r1\n\tand\t127, r1, r2\n\tadd.ne\tr1, r0, r2\n\tsub.s!\t31, r2, r1\n\tadd\t0, r0, r1\n\tadd.gt\t1, r0, r1\n\tand\t1, r1, r1\n\tsub!\tr5, r1, r1\n\tjump.ne\t@.BB3_1\n\tld.1\t64, r1\n\tst.1.inc\tr1, r2, r3\n\tsub.s!\t0, r5, r5\n\tjump.eq\t@.BB3_7\n\tst.1\t0, r0\n\tsub.s!\t0, r2, r4\n\tadd\tr0, r0, r4\n\tjump.eq\t@.BB3_11\n\tadd\t@CPI3_0[0], r0, r5\n\tadd\tr0, r0, r4\n.BB3_10:\n\tadd\tr3, r4, r6\n\tsload\tr5, r7\n\tst.1\tr6, r7\n\tadd\t1, r5, r5\n\tadd\t32, r4, r4\n\tsub!\tr4, r2, r6\n\tjump.lt\t@.BB3_10\n.BB3_11:\n\tadd\tr3, r4, r2\n\tjump\t@.BB3_3\n.BB3_7:\n\tsub.s\t256, r0, r2\n\tand\tr4, r2, r2\n\tst.1\tr3, r2\n\tadd\t64, r1, r2\n.BB3_3:\n\tsub\tr2, r1, r2\n\tadd\t31, r2, r2\n\tsub.s\t32, r0, r3\n\tand\tr2, r3, r3\n\tadd\tr3, r1, r2\n\tsub!\tr2, r3, r3\n\tadd\t0, r0, r3\n\tadd.lt\t1, r0, r3\n\tsub.s!\t@CPI3_1[0], r2, r4\n\tjump.gt\t@.BB3_5\n\tand!\t1, r3, r3\n\tjump.ne\t@.BB3_5\n\tst.1\t64, r2\n\tret\n.BB3_1:\n\tadd\t@CPI3_2[0], r0, r1\n\tst.1\t0, r1\n\tadd\t34, r0, r1\n\tst.1\t4, r1\n\tadd\t@CPI3_3[0], r0, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB3_5:\n\tadd\t@CPI3_2[0], r0, r1\n\tst.1\t0, r1\n\tadd\t65, r0, r1\n\tst.1\t4, r1\n\tadd\t@CPI3_3[0], r0, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.func_end3:\n\ncopy_byte_array_to_storage_from_string_to_string.6:\n.func_begin4:\n\tld.1.inc\tr1, r2, r3\n\tsub.s!\t@CPI4_0[0], r2, r4\n\tjump.ge\t@.BB4_1\n\tsload\tr0, r4\n\tand!\t1, r4, r5\n\tshr.s\t1, r4, r4\n\tand\t127, r4, r6\n\tadd.eq\tr6, r0, r4\n\tsub.s!\t31, r4, r6\n\tadd\t0, r0, r6\n\tadd.gt\t1, r0, r6\n\tand\t1, r6, r6\n\tsub!\tr5, r6, r5\n\tjump.ne\t@.BB4_3\n\tsub.s!\t32, r4, r5\n\tjump.lt\t@.BB4_8\n\tadd\t31, r2, r5\n\tshr.s\t5, r5, r5\n\tadd\t@CPI4_1[0], r5, r5\n\tadd\t@CPI4_1[0], r0, r6\n\tsub.s!\t32, r2, r7\n\tadd.lt\tr6, r0, r5\n\tst.1\t0, r0\n\tadd\t31, r4, r4\n\tshr.s\t5, r4, r4\n\tadd\t@CPI4_1[0], r4, r4\n\tsub!\tr5, r4, r6\n\tjump.ge\t@.BB4_8\n.BB4_7:\n\tsstore\tr5, r0\n\tadd\t1, r5, r5\n\tsub!\tr5, r4, r6\n\tjump.lt\t@.BB4_7\n.BB4_8:\n\tsub.s!\t31, r2, r4\n\tjump.le\t@.BB4_16\n\tsub.s\t32, r0, r3\n\tand!\tr2, r3, r5\n\tadd\t@CPI4_1[0], r0, r3\n\tadd\t32, r0, r4\n\tst.1\t0, r0\n\tjump.eq\t@.BB4_13\n\tadd\t32, r0, r4\n\tadd\t@CPI4_1[0], r0, r3\n\tadd\tr0, r0, r6\n.BB4_12:\n\tadd\tr4, r1, r7\n\tld.1\tr7, r7\n\tsstore\tr3, r7\n\tadd\t32, r4, r4\n\tadd\t1, r3, r3\n\tadd\t32, r6, r6\n\tsub!\tr6, r5, r7\n\tjump.lt\t@.BB4_12\n.BB4_13:\n\tsub!\tr5, r2, r5\n\tjump.ge\t@.BB4_15\n\tshl.s\t3, r2, r5\n\tand\t248, r5, r5\n\tsub.s\t1, r0, r6\n\tshr\tr6, r5, r5\n\txor\tr5, r6, r5\n\tadd\tr4, r1, r1\n\tld.1\tr1, r1\n\tand\tr1, r5, r1\n\tsstore\tr3, r1\n.BB4_15:\n\tshl.s\t1, r2, r1\n\tor\t1, r1, r1\n\tjump\t@.BB4_9\n.BB4_16:\n\tsub.s!\t0, r2, r1\n\tadd\tr0, r0, r1\n\tjump.eq\t@.BB4_9\n\tshl.s\t3, r2, r1\n\tsub.s\t1, r0, r4\n\tshr\tr4, r1, r1\n\txor\tr1, r4, r1\n\tld.1\tr3, r3\n\tand\tr3, r1, r1\n\tshl.s\t1, r2, r2\n\tor\tr1, r2, r1\n.BB4_9:\n\tsstore\tr0, r1\n\tret\n.BB4_1:\n\tadd\t@CPI4_2[0], r0, r1\n\tst.1\t0, r1\n\tadd\t65, r0, r1\n\tst.1\t4, r1\n\tadd\t@CPI4_3[0], r0, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB4_3:\n\tadd\t@CPI4_2[0], r0, r1\n\tst.1\t0, r1\n\tadd\t34, r0, r1\n\tst.1\t4, r1\n\tadd\t@CPI4_3[0], r0, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.func_end4:\n\n__staticcall:\n.func_begin5:\n.tmp0:\n\tfar_call.static\tr1, r2, @.BB5_2\n.tmp1:\n\tadd\t1, r0, r2\n\tret\n.BB5_2:\n.tmp2:\n\tadd\tr0, r0, r2\n\tret\n.func_end5:\n\n\t.data\n\t.p2align\t5\ncalldatasize:\n\t.cell 0\n\n\t.p2align\t5\nptr_calldata:\n.cell\t0\n\n\t.note.GNU-stack\n\t.rodata\nCPI0_0:\nCPI1_1:\n\t.cell 4294967295\nCPI0_1:\nCPI3_1:\n\t.cell 18446744073709551615\nCPI0_2:\n\t.cell -57896044618658097711785492504343953926634992332820282019728792003956564819968\nCPI0_3:\n\t.cell 53919893334301279589334030174039261352344891250716429051063678533632\nCPI0_4:\n\t.cell 3484299799\nCPI0_5:\n\t.cell 2752735330\nCPI0_6:\nCPI1_3:\nCPI3_2:\nCPI4_2:\n\t.cell 35408467139433450592217433187231851964531694900788300625387963629091585785856\nCPI0_7:\nCPI1_4:\nCPI3_3:\nCPI4_3:\n\t.cell 2852213850513516153367582212096\nCPI1_0:\nCPI4_0:\n\t.cell 18446744073709551616\nCPI1_2:\n\t.cell 904625697166532776746648320380374280103671757735618107014721178055227736064\nCPI3_0:\nCPI4_1:\n\t.cell 18569430475105882587588266137607568536673111973893317399460219858819262702947\n","bytecode":{"object":""},"methodIdentifiers":{"greet()":"cfae3217","setGreeting(string)":"a4136862"}},"irOptimized":"/*=====================================================*\n *                       WARNING                       *\n *  Solidity to Yul compilation is still EXPERIMENTAL  *\n *       It can result in LOSS OF FUNDS or worse       *\n *                !USE AT YOUR OWN RISK!               *\n *=====================================================*/\n\n/// @use-src 4:\"contracts/Greeter.sol\"\nobject \"Greeter_744\" {\n    code {\n        {\n            /// @src 4:73:404  \"contract Greeter {...\"\n            mstore(64, 128)\n            if callvalue() { revert(0, 0) }\n            let programSize := datasize(\"Greeter_744\")\n            let argSize := sub(codesize(), programSize)\n            let memoryDataOffset := allocate_memory(argSize)\n            codecopy(memoryDataOffset, programSize, argSize)\n            let _1 := add(memoryDataOffset, argSize)\n            let _2 := 32\n            if slt(sub(_1, memoryDataOffset), _2)\n            {\n                revert(/** @src -1:-1:-1 */ 0, 0)\n            }\n            /// @src 4:73:404  \"contract Greeter {...\"\n            let offset := mload(memoryDataOffset)\n            let _3 := sub(shl(64, 1), 1)\n            if gt(offset, _3)\n            {\n                revert(/** @src -1:-1:-1 */ 0, 0)\n            }\n            /// @src 4:73:404  \"contract Greeter {...\"\n            let _4 := add(memoryDataOffset, offset)\n            if iszero(slt(add(_4, 0x1f), _1))\n            {\n                revert(/** @src -1:-1:-1 */ 0, 0)\n            }\n            /// @src 4:73:404  \"contract Greeter {...\"\n            let _5 := mload(_4)\n            if gt(_5, _3) { panic_error_0x41() }\n            let array := allocate_memory(add(and(add(_5, 0x1f), not(31)), _2))\n            mstore(array, _5)\n            if gt(add(add(_4, _5), _2), _1)\n            {\n                revert(/** @src -1:-1:-1 */ 0, 0)\n            }\n            /// @src 4:73:404  \"contract Greeter {...\"\n            let i := /** @src -1:-1:-1 */ 0\n            /// @src 4:73:404  \"contract Greeter {...\"\n            for { } lt(i, _5) { i := add(i, _2) }\n            {\n                mstore(add(add(array, i), _2), mload(add(add(_4, i), _2)))\n            }\n            if gt(i, _5)\n            {\n                mstore(add(add(array, _5), _2), /** @src -1:-1:-1 */ 0)\n            }\n            /// @src 4:73:404  \"contract Greeter {...\"\n            copy_byte_array_to_storage_from_string_to_string(array)\n            let _6 := mload(64)\n            let _7 := datasize(\"Greeter_744_deployed\")\n            codecopy(_6, dataoffset(\"Greeter_744_deployed\"), _7)\n            return(_6, _7)\n        }\n        function panic_error_0x41()\n        {\n            mstore(0, shl(224, 0x4e487b71))\n            mstore(4, 0x41)\n            revert(0, 0x24)\n        }\n        function allocate_memory(size) -> memPtr\n        {\n            memPtr := mload(64)\n            let newFreePtr := add(memPtr, and(add(size, 31), not(31)))\n            if or(gt(newFreePtr, sub(shl(64, 1), 1)), lt(newFreePtr, memPtr)) { panic_error_0x41() }\n            mstore(64, newFreePtr)\n        }\n        function extract_byte_array_length(data) -> length\n        {\n            length := shr(1, data)\n            let outOfPlaceEncoding := and(data, 1)\n            if iszero(outOfPlaceEncoding) { length := and(length, 0x7f) }\n            if eq(outOfPlaceEncoding, lt(length, 32))\n            {\n                mstore(0, shl(224, 0x4e487b71))\n                mstore(4, 0x22)\n                revert(0, 0x24)\n            }\n        }\n        function array_dataslot_string_storage() -> data\n        {\n            mstore(/** @src 4:178:198  \"greeting = _greeting\" */ 0x00, 0x00)\n            /// @src 4:73:404  \"contract Greeter {...\"\n            data := keccak256(/** @src 4:178:198  \"greeting = _greeting\" */ 0x00, /** @src 4:73:404  \"contract Greeter {...\" */ 0x20)\n        }\n        function clean_up_bytearray_end_slots_string_storage(len, startIndex)\n        {\n            let array := /** @src 4:178:198  \"greeting = _greeting\" */ 0x00\n            /// @src 4:73:404  \"contract Greeter {...\"\n            if gt(len, 31)\n            {\n                mstore(/** @src 4:178:198  \"greeting = _greeting\" */ array, array)\n                /// @src 4:73:404  \"contract Greeter {...\"\n                let data := keccak256(/** @src 4:178:198  \"greeting = _greeting\" */ array, /** @src 4:73:404  \"contract Greeter {...\" */ 0x20)\n                let deleteStart := add(data, shr(5, add(startIndex, 31)))\n                if lt(startIndex, 0x20) { deleteStart := data }\n                let _1 := add(data, shr(5, add(len, 31)))\n                let start := deleteStart\n                for { } lt(start, _1) { start := add(start, 1) }\n                {\n                    sstore(start, /** @src 4:178:198  \"greeting = _greeting\" */ array)\n                }\n            }\n        }\n        /// @src 4:73:404  \"contract Greeter {...\"\n        function extract_used_part_and_set_length_of_short_byte_array(data, len) -> used\n        {\n            used := or(and(data, not(shr(shl(3, len), not(0)))), shl(1, len))\n        }\n        function copy_byte_array_to_storage_from_string_to_string(src)\n        {\n            let newLen := mload(src)\n            if gt(newLen, sub(shl(64, 1), 1)) { panic_error_0x41() }\n            /// @src 4:178:198  \"greeting = _greeting\"\n            let _1 := 0x00\n            /// @src 4:73:404  \"contract Greeter {...\"\n            clean_up_bytearray_end_slots_string_storage(extract_byte_array_length(sload(/** @src 4:178:198  \"greeting = _greeting\" */ _1)), /** @src 4:73:404  \"contract Greeter {...\" */ newLen)\n            let srcOffset := /** @src 4:178:198  \"greeting = _greeting\" */ _1\n            /// @src 4:73:404  \"contract Greeter {...\"\n            let srcOffset_1 := 0x20\n            srcOffset := srcOffset_1\n            switch gt(newLen, 31)\n            case 1 {\n                let loopEnd := and(newLen, not(31))\n                let dstPtr := array_dataslot_string_storage()\n                let i := /** @src 4:178:198  \"greeting = _greeting\" */ _1\n                /// @src 4:73:404  \"contract Greeter {...\"\n                for { } lt(i, loopEnd) { i := add(i, srcOffset_1) }\n                {\n                    sstore(dstPtr, mload(add(src, srcOffset)))\n                    dstPtr := add(dstPtr, 1)\n                    srcOffset := add(srcOffset, srcOffset_1)\n                }\n                if lt(loopEnd, newLen)\n                {\n                    let lastValue := mload(add(src, srcOffset))\n                    sstore(dstPtr, and(lastValue, not(shr(and(shl(3, newLen), 248), not(0)))))\n                }\n                sstore(/** @src 4:178:198  \"greeting = _greeting\" */ _1, /** @src 4:73:404  \"contract Greeter {...\" */ add(shl(1, newLen), 1))\n            }\n            default {\n                let value := /** @src 4:178:198  \"greeting = _greeting\" */ _1\n                /// @src 4:73:404  \"contract Greeter {...\"\n                if newLen\n                {\n                    value := mload(add(src, srcOffset))\n                }\n                sstore(/** @src 4:178:198  \"greeting = _greeting\" */ _1, /** @src 4:73:404  \"contract Greeter {...\" */ extract_used_part_and_set_length_of_short_byte_array(value, newLen))\n            }\n        }\n    }\n    /// @use-src 4:\"contracts/Greeter.sol\"\n    object \"Greeter_744_deployed\" {\n        code {\n            {\n                /// @src 4:73:404  \"contract Greeter {...\"\n                mstore(64, 128)\n                if iszero(lt(calldatasize(), 4))\n                {\n                    let _1 := 0\n                    switch shr(224, calldataload(_1))\n                    case 0xa4136862 {\n                        if callvalue() { revert(_1, _1) }\n                        if slt(add(calldatasize(), not(3)), 32) { revert(_1, _1) }\n                        let offset := calldataload(4)\n                        let _2 := 0xffffffffffffffff\n                        if gt(offset, _2) { revert(_1, _1) }\n                        if iszero(slt(add(offset, 35), calldatasize())) { revert(_1, _1) }\n                        let _3 := calldataload(add(4, offset))\n                        if gt(_3, _2) { panic_error_0x41() }\n                        let memPtr := mload(64)\n                        finalize_allocation(memPtr, add(and(add(_3, 0x1f), not(31)), 32))\n                        mstore(memPtr, _3)\n                        if gt(add(add(offset, _3), 36), calldatasize()) { revert(_1, _1) }\n                        calldatacopy(add(memPtr, 32), add(offset, 36), _3)\n                        mstore(add(add(memPtr, _3), 32), _1)\n                        copy_byte_array_to_storage_from_string_to_string(memPtr)\n                        return(mload(64), _1)\n                    }\n                    case 0xcfae3217 {\n                        if callvalue() { revert(_1, _1) }\n                        abi_decode(calldatasize())\n                        let converted := copy_array_from_storage_to_memory_string()\n                        let memPos := mload(64)\n                        return(memPos, sub(abi_encode_string(memPos, converted), memPos))\n                    }\n                }\n                revert(0, 0)\n            }\n            function panic_error_0x41()\n            {\n                mstore(0, shl(224, 0x4e487b71))\n                mstore(4, 0x41)\n                revert(0, 0x24)\n            }\n            function finalize_allocation(memPtr, size)\n            {\n                let newFreePtr := add(memPtr, and(add(size, 31), not(31)))\n                if or(gt(newFreePtr, 0xffffffffffffffff), lt(newFreePtr, memPtr)) { panic_error_0x41() }\n                mstore(64, newFreePtr)\n            }\n            function abi_decode(dataEnd)\n            {\n                if slt(add(dataEnd, not(3)), 0) { revert(0, 0) }\n            }\n            function abi_encode_string(headStart, value0) -> tail\n            {\n                let _1 := 32\n                mstore(headStart, _1)\n                let length := mload(value0)\n                mstore(add(headStart, _1), length)\n                let i := 0\n                for { } lt(i, length) { i := add(i, _1) }\n                {\n                    mstore(add(add(headStart, i), 64), mload(add(add(value0, i), _1)))\n                }\n                if gt(i, length)\n                {\n                    mstore(add(add(headStart, length), 64), 0)\n                }\n                tail := add(add(headStart, and(add(length, 31), not(31))), 64)\n            }\n            function extract_byte_array_length(data) -> length\n            {\n                length := shr(1, data)\n                let outOfPlaceEncoding := and(data, 1)\n                if iszero(outOfPlaceEncoding) { length := and(length, 0x7f) }\n                if eq(outOfPlaceEncoding, lt(length, 32))\n                {\n                    mstore(0, shl(224, 0x4e487b71))\n                    mstore(4, 0x22)\n                    revert(0, 0x24)\n                }\n            }\n            function array_dataslot_string_storage() -> data\n            {\n                mstore(0, 0)\n                data := 18569430475105882587588266137607568536673111973893317399460219858819262702947\n            }\n            function copy_array_from_storage_to_memory_string() -> memPtr\n            {\n                memPtr := mload(64)\n                let ret := 0\n                let slotValue := sload(ret)\n                let length := extract_byte_array_length(slotValue)\n                mstore(memPtr, length)\n                let _1 := 0x20\n                let _2 := 1\n                switch and(slotValue, _2)\n                case 0 {\n                    mstore(add(memPtr, _1), and(slotValue, not(255)))\n                    ret := add(memPtr, 64)\n                }\n                case 1 {\n                    mstore(0, 0)\n                    let dataPos := 18569430475105882587588266137607568536673111973893317399460219858819262702947\n                    let i := 0\n                    for { } lt(i, length) { i := add(i, _1) }\n                    {\n                        mstore(add(add(memPtr, i), _1), sload(dataPos))\n                        dataPos := add(dataPos, _2)\n                    }\n                    ret := add(add(memPtr, i), _1)\n                }\n                finalize_allocation(memPtr, sub(ret, memPtr))\n            }\n            function clean_up_bytearray_end_slots_string_storage(len, startIndex)\n            {\n                if gt(len, 31)\n                {\n                    let _1 := 0\n                    mstore(_1, _1)\n                    let _2 := 18569430475105882587588266137607568536673111973893317399460219858819262702947\n                    let deleteStart := add(_2, shr(5, add(startIndex, 31)))\n                    if lt(startIndex, 0x20) { deleteStart := _2 }\n                    let _3 := add(_2, shr(5, add(len, 31)))\n                    let start := deleteStart\n                    for { } lt(start, _3) { start := add(start, 1) }\n                    { sstore(start, _1) }\n                }\n            }\n            function extract_used_part_and_set_length_of_short_byte_array(data, len) -> used\n            {\n                used := or(and(data, not(shr(shl(3, len), not(0)))), shl(1, len))\n            }\n            function copy_byte_array_to_storage_from_string_to_string(src)\n            {\n                let newLen := mload(src)\n                if gt(newLen, 0xffffffffffffffff) { panic_error_0x41() }\n                let _1 := 0\n                clean_up_bytearray_end_slots_string_storage(extract_byte_array_length(sload(_1)), newLen)\n                let srcOffset := _1\n                let srcOffset_1 := 0x20\n                srcOffset := srcOffset_1\n                switch gt(newLen, 31)\n                case 1 {\n                    let loopEnd := and(newLen, not(31))\n                    let dstPtr := array_dataslot_string_storage()\n                    let i := _1\n                    for { } lt(i, loopEnd) { i := add(i, srcOffset_1) }\n                    {\n                        sstore(dstPtr, mload(add(src, srcOffset)))\n                        dstPtr := add(dstPtr, 1)\n                        srcOffset := add(srcOffset, srcOffset_1)\n                    }\n                    if lt(loopEnd, newLen)\n                    {\n                        let lastValue := mload(add(src, srcOffset))\n                        sstore(dstPtr, and(lastValue, not(shr(and(shl(3, newLen), 248), not(0)))))\n                    }\n                    sstore(_1, add(shl(1, newLen), 1))\n                }\n                default {\n                    let value := _1\n                    if newLen\n                    {\n                        value := mload(add(src, srcOffset))\n                    }\n                    sstore(_1, extract_used_part_and_set_length_of_short_byte_array(value, newLen))\n                }\n            }\n        }\n        data \".metadata\" hex\"a36469706673582212206b02818cf72c2694d71724b2fa8a57f1113c6bcef36c5103683404c0510567196c6578706572696d656e74616cf564736f6c63430008080041\"\n    }\n}\n","hash":"0100009d4839e9020b13d83bf873e4265dcdc90f682a5cbab4f121926cbf32ad","factoryDependencies":{}}},"contracts/ISLEToken.sol":{"ISLEToken":{"abi":[{"inputs":[],"stateMutability":"nonpayable","type":"constructor"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"spender","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Approval","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Transfer","type":"event"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"spender","type":"address"}],"name":"allowance","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"approve","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"balanceOf","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"decimals","outputs":[{"internalType":"uint8","name":"","type":"uint8"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"subtractedValue","type":"uint256"}],"name":"decreaseAllowance","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"addedValue","type":"uint256"}],"name":"increaseAllowance","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"name","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"symbol","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"totalSupply","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"transfer","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"transferFrom","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"}],"metadata":{"optimizer_settings":"M3B3","solc_metadata":"{\"compiler\":{\"version\":\"0.8.8+commit.dddeac2f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"subtractedValue\",\"type\":\"uint256\"}],\"name\":\"decreaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"addedValue\",\"type\":\"uint256\"}],\"name\":\"increaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"See {IERC20-allowance}.\"},\"approve(address,uint256)\":{\"details\":\"See {IERC20-approve}. NOTE: If `amount` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address.\"},\"balanceOf(address)\":{\"details\":\"See {IERC20-balanceOf}.\"},\"decimals()\":{\"details\":\"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the value {ERC20} uses, unless this function is overridden; NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}.\"},\"decreaseAllowance(address,uint256)\":{\"details\":\"Atomically decreases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address. - `spender` must have allowance for the caller of at least `subtractedValue`.\"},\"increaseAllowance(address,uint256)\":{\"details\":\"Atomically increases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token, usually a shorter version of the name.\"},\"totalSupply()\":{\"details\":\"See {IERC20-totalSupply}.\"},\"transfer(address,uint256)\":{\"details\":\"See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `amount`.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `amount`. - the caller must have allowance for ``from``'s tokens of at least `amount`.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/ISLEToken.sol\":\"ISLEToken\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts/token/ERC20/ERC20.sol\":{\"keccak256\":\"0x4ffc0547c02ad22925310c585c0f166f8759e2648a09e9b489100c42f15dd98d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://15f52f51413a9de1ff191e2f6367c62178e1df7806d7880fe857a98b0b66253d\",\"dweb:/ipfs/QmaQG1fwfgUt5E9nu2cccFiV47B2V78MM1tCy1qB7n4MsH\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x9750c6b834f7b43000631af5cc30001c5f547b3ceb3635488f140f60e897ea6b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5a7d5b1ef5d8d5889ad2ed89d8619c09383b80b72ab226e0fe7bde1636481e34\",\"dweb:/ipfs/QmebXWgtEfumQGBdVeM6c71McLixYXQP5Bk6kKXuoY4Bmr\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0x8de418a5503946cabe331f35fe242d3201a73f67f77aaeb7110acb1f30423aca\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5a376d3dda2cb70536c0a45c208b29b34ac560c4cb4f513a42079f96ba47d2dd\",\"dweb:/ipfs/QmZQg6gn1sUpM8wHzwNvSnihumUCAhxD119MpXeKp8B9s8\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92\",\"dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3\"]},\"contracts/ISLEToken.sol\":{\"keccak256\":\"0x55f0abbb7ec903cbb071b5a4af5098a60cba390faf49f2a0620546ff34e96624\",\"license\":\"Unlicense\",\"urls\":[\"bzz-raw://bc71023794f289ffbcd7e532522fd741e3cb2bae314142b9d42f0f9c3b65216a\",\"dweb:/ipfs/QmUXv4D3m1NJ8bJ32SKQaPaeZ6XRudoNx9M8Qa3MSxLuVF\"]}},\"version\":1}","zk_version":"1.3.8"},"evm":{"legacyAssembly":null,"assembly":"\t.text\n\t.file\t\"ISLEToken.sol:ISLEToken\"\n\t.globl\t__entry\n__entry:\n.func_begin0:\n\tnop\tstack+=[10]\n\tptr.add\tr1, r0, stack[@ptr_calldata]\n\tshr.s\t96, r1, r1\n\tand\t@CPI0_0[0], r1, stack[@calldatasize]\n\tadd\t128, r0, r1\n\tst.1\t64, r1\n\tand!\t1, r2, r1\n\tjump.ne\t@.BB0_1\n\tadd\tstack[@calldatasize], r0, r1\n\tsub.s!\t4, r1, r1\n\tjump.lt\t@.BB0_2\n\tptr.add\tstack[@ptr_calldata], r0, r1\n\tld\tr1, r1\n\tshr.s\t224, r1, r1\n\tsub.s!\t@CPI0_10[0], r1, r2\n\tjump.le\t@.BB0_83\n\tsub.s!\t@CPI0_11[0], r1, r2\n\tjump.gt\t@.BB0_93\n\tsub.s!\t@CPI0_15[0], r1, r2\n\tjump.eq\t@.BB0_109\n\tsub.s!\t@CPI0_16[0], r1, r2\n\tjump.eq\t@.BB0_111\n\tsub.s!\t@CPI0_17[0], r1, r1\n\tjump.ne\t@.BB0_2\n\tcontext.get_context_u128\tr1\n\tsub.s!\t0, r1, r1\n\tjump.ne\t@.BB0_2\n\tsub.s\t4, r0, r1\n\tadd\tstack[@calldatasize], r1, r1\n\tadd\t@CPI0_25[0], r0, r2\n\tsub.s!\t0, r1, r3\n\tadd\t0, r0, r3\n\tadd.lt\tr2, r0, r3\n\tand\t@CPI0_25[0], r1, r1\n\tsub.s!\t0, r1, r4\n\tadd.le\t0, r0, r2\n\tsub.s!\t@CPI0_25[0], r1, r1\n\tadd\tr3, r0, r1\n\tadd.eq\tr2, r0, r1\n\tsub.s!\t0, r1, r1\n\tjump.ne\t@.BB0_2\n\tnear_call\tr0, @copy_array_from_storage_to_memory_string.2, @DEFAULT_UNWIND\n\tadd\tr1, r0, r2\n\tld.1\t64, r1\n\tadd\tr1, r0, stack-[10]\n\tnear_call\tr0, @abi_encode_string, @DEFAULT_UNWIND\n\tadd\tstack-[10], r0, r4\n\tsub\tr1, r4, r1\n\tadd\t@CPI0_0[0], r0, r2\n\tsub.s!\t@CPI0_0[0], r1, r3\n\tadd.ge\tr2, r0, r1\n\tsub.s!\t@CPI0_0[0], r4, r3\n\tadd.lt\tr4, r0, r2\n\tshl.s\t64, r2, r2\n\tshl.s\t96, r1, r1\n\tor\tr1, r2, r1\n\tret.ok.to_label\tr1, @DEFAULT_FAR_RETURN\n.BB0_1:\n\tcontext.get_context_u128\tr1\n\tsub.s!\t0, r1, r1\n\tjump.ne\t@.BB0_2\n\tadd\t5, r0, r5\n\tsload\tr5, r1\n\tand!\t1, r1, r2\n\tshr.s\t1, r1, r3\n\tand\t127, r3, r4\n\tadd.ne\tr3, r0, r4\n\tsub.s!\t31, r4, r3\n\tadd\t0, r0, r3\n\tadd.gt\t1, r0, r3\n\tand\t1, r3, r3\n\tsub!\tr2, r3, r3\n\tjump.eq\t@.BB0_5\n.BB0_4:\n\tadd\t@CPI0_8[0], r0, r1\n\tst.1\t0, r1\n\tadd\t34, r0, r1\n\tst.1\t4, r1\n\tadd\t@CPI0_9[0], r0, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB0_5:\n\tld.1\t64, r10\n\tst.1.inc\tr10, r4, r11\n\tsub.s!\t0, r2, r2\n\tjump.eq\t@.BB0_8\n\tadd\tr4, r0, stack-[7]\n\tadd\tr11, r0, stack-[8]\n\tadd\tr10, r0, stack-[9]\n\tadd\tr5, r0, stack-[10]\n\tst.1\t0, r5\n\tadd\t@CPI0_0[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI0_0[0], r2, r3\n\tadd.lt\tr2, r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI0_1[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_2\n\tadd\tstack-[7], r0, r6\n\tsub.s!\t0, r6, r2\n\tjump.ne\t@.BB0_12\n\tadd\tr0, r0, r1\n\tadd\tstack-[10], r0, r5\n\tadd\tstack-[9], r0, r10\n\tadd\tstack-[8], r0, r11\n\tjump\t@.BB0_14\n.BB0_83:\n\tsub.s!\t@CPI0_18[0], r1, r2\n\tjump.le\t@.BB0_84\n\tsub.s!\t@CPI0_19[0], r1, r2\n\tjump.eq\t@.BB0_101\n\tsub.s!\t@CPI0_20[0], r1, r2\n\tjump.eq\t@.BB0_104\n\tsub.s!\t@CPI0_21[0], r1, r1\n\tjump.ne\t@.BB0_2\n\tcontext.get_context_u128\tr1\n\tsub.s!\t0, r1, r1\n\tjump.ne\t@.BB0_2\n\tsub.s\t4, r0, r1\n\tadd\tstack[@calldatasize], r1, r1\n\tadd\t@CPI0_25[0], r0, r2\n\tsub.s!\t0, r1, r3\n\tadd\t0, r0, r3\n\tadd.lt\tr2, r0, r3\n\tand\t@CPI0_25[0], r1, r1\n\tsub.s!\t0, r1, r4\n\tadd.le\t0, r0, r2\n\tsub.s!\t@CPI0_25[0], r1, r1\n\tadd\tr3, r0, r1\n\tadd.eq\tr2, r0, r1\n\tsub.s!\t0, r1, r1\n\tjump.ne\t@.BB0_2\n\tld.1\t64, r1\n\tadd\t18, r0, r2\n\tst.1\tr1, r2\n\tadd\t@CPI0_0[0], r0, r2\n\tsub.s!\t@CPI0_0[0], r1, r3\n\tadd.ge\tr2, r0, r1\n\tshl.s\t64, r1, r1\n\tor\t@CPI0_24[0], r1, r1\n\tret.ok.to_label\tr1, @DEFAULT_FAR_RETURN\n.BB0_93:\n\tsub.s!\t@CPI0_12[0], r1, r2\n\tjump.eq\t@.BB0_116\n\tsub.s!\t@CPI0_13[0], r1, r2\n\tjump.eq\t@.BB0_118\n\tsub.s!\t@CPI0_14[0], r1, r1\n\tjump.ne\t@.BB0_2\n\tcontext.get_context_u128\tr1\n\tsub.s!\t0, r1, r1\n\tjump.ne\t@.BB0_2\n\tadd\tstack[@calldatasize], r0, r1\n\tnear_call\tr0, @abi_decode_addresst_address, @DEFAULT_UNWIND\n\tadd\tr2, r0, stack-[10]\n\tnear_call\tr0, @mapping_index_access_mapping_address_uint256_of_address_2492, @DEFAULT_UNWIND\n\tadd\tstack-[10], r0, r2\n\tnear_call\tr0, @mapping_index_access_mapping_address_uint256_of_address, @DEFAULT_UNWIND\n\tsload\tr1, r1\n\tld.1\t64, r2\n\tst.1\tr2, r1\n\tadd\t@CPI0_0[0], r0, r1\n\tsub.s!\t@CPI0_0[0], r2, r3\n\tadd.lt\tr2, r0, r1\n\tshl.s\t64, r1, r1\n\tor\t@CPI0_24[0], r1, r1\n\tret.ok.to_label\tr1, @DEFAULT_FAR_RETURN\n.BB0_8:\n\tsub.s\t256, r0, r2\n\tand\tr1, r2, r1\n\tst.1\tr11, r1\n\tadd\t64, r10, r1\n\tjump\t@.BB0_6\n.BB0_84:\n\tsub.s!\t@CPI0_22[0], r1, r2\n\tjump.eq\t@.BB0_96\n\tsub.s!\t@CPI0_23[0], r1, r1\n\tjump.ne\t@.BB0_2\n\tcontext.get_context_u128\tr1\n\tsub.s!\t0, r1, r1\n\tjump.ne\t@.BB0_2\n\tadd\tstack[@calldatasize], r0, r1\n\tnear_call\tr0, @abi_decode_addresst_uint256, @DEFAULT_UNWIND\n\tnear_call\tr0, @fun_approve, @DEFAULT_UNWIND\n\tadd\t1, r0, r1\n\tld.1\t64, r2\n\tst.1\tr2, r1\n\tadd\t@CPI0_0[0], r0, r1\n\tsub.s!\t@CPI0_0[0], r2, r3\n\tadd.lt\tr2, r0, r1\n\tshl.s\t64, r1, r1\n\tor\t@CPI0_24[0], r1, r1\n\tret.ok.to_label\tr1, @DEFAULT_FAR_RETURN\n.BB0_109:\n\tcontext.get_context_u128\tr1\n\tsub.s!\t0, r1, r1\n\tjump.ne\t@.BB0_2\n\tadd\tstack[@calldatasize], r0, r1\n\tnear_call\tr0, @abi_decode_addresst_uint256, @DEFAULT_UNWIND\n\tnear_call\tr0, @fun_increaseAllowance, @DEFAULT_UNWIND\n\tadd\t1, r0, r1\n\tld.1\t64, r2\n\tst.1\tr2, r1\n\tadd\t@CPI0_0[0], r0, r1\n\tsub.s!\t@CPI0_0[0], r2, r3\n\tadd.lt\tr2, r0, r1\n\tshl.s\t64, r1, r1\n\tor\t@CPI0_24[0], r1, r1\n\tret.ok.to_label\tr1, @DEFAULT_FAR_RETURN\n.BB0_111:\n\tcontext.get_context_u128\tr1\n\tsub.s!\t0, r1, r1\n\tjump.ne\t@.BB0_2\n\tadd\tstack[@calldatasize], r0, r1\n\tnear_call\tr0, @abi_decode_address, @DEFAULT_UNWIND\n\tnear_call\tr0, @fun_balanceOf, @DEFAULT_UNWIND\n\tld.1\t64, r2\n\tst.1\tr2, r1\n\tadd\t@CPI0_0[0], r0, r1\n\tsub.s!\t@CPI0_0[0], r2, r3\n\tadd.lt\tr2, r0, r1\n\tshl.s\t64, r1, r1\n\tor\t@CPI0_24[0], r1, r1\n\tret.ok.to_label\tr1, @DEFAULT_FAR_RETURN\n.BB0_101:\n\tcontext.get_context_u128\tr1\n\tsub.s!\t0, r1, r1\n\tjump.ne\t@.BB0_2\n\tsub.s\t4, r0, r1\n\tadd\tstack[@calldatasize], r1, r1\n\tadd\t@CPI0_25[0], r0, r2\n\tsub.s!\t0, r1, r3\n\tadd\t0, r0, r3\n\tadd.lt\tr2, r0, r3\n\tand\t@CPI0_25[0], r1, r1\n\tsub.s!\t0, r1, r4\n\tadd.le\t0, r0, r2\n\tsub.s!\t@CPI0_25[0], r1, r1\n\tadd\tr3, r0, r1\n\tadd.eq\tr2, r0, r1\n\tsub.s!\t0, r1, r1\n\tjump.ne\t@.BB0_2\n\tadd\t2, r0, r1\n\tsload\tr1, r1\n\tld.1\t64, r2\n\tst.1\tr2, r1\n\tadd\t@CPI0_0[0], r0, r1\n\tsub.s!\t@CPI0_0[0], r2, r3\n\tadd.lt\tr2, r0, r1\n\tshl.s\t64, r1, r1\n\tor\t@CPI0_24[0], r1, r1\n\tret.ok.to_label\tr1, @DEFAULT_FAR_RETURN\n.BB0_104:\n\tcontext.get_context_u128\tr1\n\tsub.s!\t0, r1, r1\n\tjump.ne\t@.BB0_2\n\tadd\tstack[@calldatasize], r0, r1\n\tnear_call\tr0, @abi_decode_addresst_addresst_uint256, @DEFAULT_UNWIND\n\tnear_call\tr0, @fun_transferFrom, @DEFAULT_UNWIND\n\tadd\t1, r0, r1\n\tld.1\t64, r2\n\tst.1\tr2, r1\n\tadd\t@CPI0_0[0], r0, r1\n\tsub.s!\t@CPI0_0[0], r2, r3\n\tadd.lt\tr2, r0, r1\n\tshl.s\t64, r1, r1\n\tor\t@CPI0_24[0], r1, r1\n\tret.ok.to_label\tr1, @DEFAULT_FAR_RETURN\n.BB0_116:\n\tcontext.get_context_u128\tr1\n\tsub.s!\t0, r1, r1\n\tjump.ne\t@.BB0_2\n\tadd\tstack[@calldatasize], r0, r1\n\tnear_call\tr0, @abi_decode_addresst_uint256, @DEFAULT_UNWIND\n\tnear_call\tr0, @fun_decreaseAllowance, @DEFAULT_UNWIND\n\tadd\t1, r0, r1\n\tld.1\t64, r2\n\tst.1\tr2, r1\n\tadd\t@CPI0_0[0], r0, r1\n\tsub.s!\t@CPI0_0[0], r2, r3\n\tadd.lt\tr2, r0, r1\n\tshl.s\t64, r1, r1\n\tor\t@CPI0_24[0], r1, r1\n\tret.ok.to_label\tr1, @DEFAULT_FAR_RETURN\n.BB0_118:\n\tcontext.get_context_u128\tr1\n\tsub.s!\t0, r1, r1\n\tjump.ne\t@.BB0_2\n\tadd\tstack[@calldatasize], r0, r1\n\tnear_call\tr0, @abi_decode_addresst_uint256, @DEFAULT_UNWIND\n\tnear_call\tr0, @fun_transfer, @DEFAULT_UNWIND\n\tadd\t1, r0, r1\n\tld.1\t64, r2\n\tst.1\tr2, r1\n\tadd\t@CPI0_0[0], r0, r1\n\tsub.s!\t@CPI0_0[0], r2, r3\n\tadd.lt\tr2, r0, r1\n\tshl.s\t64, r1, r1\n\tor\t@CPI0_24[0], r1, r1\n\tret.ok.to_label\tr1, @DEFAULT_FAR_RETURN\n.BB0_96:\n\tcontext.get_context_u128\tr1\n\tsub.s!\t0, r1, r1\n\tjump.ne\t@.BB0_2\n\tsub.s\t4, r0, r1\n\tadd\tstack[@calldatasize], r1, r1\n\tadd\t@CPI0_25[0], r0, r2\n\tsub.s!\t0, r1, r3\n\tadd\t0, r0, r3\n\tadd.lt\tr2, r0, r3\n\tand\t@CPI0_25[0], r1, r1\n\tsub.s!\t0, r1, r4\n\tadd.le\t0, r0, r2\n\tsub.s!\t@CPI0_25[0], r1, r1\n\tadd\tr3, r0, r1\n\tadd.eq\tr2, r0, r1\n\tsub.s!\t0, r1, r1\n\tjump.ne\t@.BB0_2\n\tnear_call\tr0, @copy_array_from_storage_to_memory_string_2479, @DEFAULT_UNWIND\n\tadd\tr1, r0, r2\n\tld.1\t64, r1\n\tadd\tr1, r0, stack-[10]\n\tnear_call\tr0, @abi_encode_string, @DEFAULT_UNWIND\n\tadd\tstack-[10], r0, r4\n\tsub\tr1, r4, r1\n\tadd\t@CPI0_0[0], r0, r2\n\tsub.s!\t@CPI0_0[0], r1, r3\n\tadd.ge\tr2, r0, r1\n\tsub.s!\t@CPI0_0[0], r4, r3\n\tadd.lt\tr4, r0, r2\n\tshl.s\t64, r2, r2\n\tshl.s\t96, r1, r1\n\tor\tr1, r2, r1\n\tret.ok.to_label\tr1, @DEFAULT_FAR_RETURN\n.BB0_12:\n\tld\tr1, r2\n\tadd\tr0, r0, r1\n\tadd\tstack-[10], r0, r5\n\tadd\tstack-[9], r0, r10\n\tadd\tstack-[8], r0, r11\n.BB0_13:\n\tadd\tr1, r11, r3\n\tsload\tr2, r4\n\tst.1\tr3, r4\n\tadd\t1, r2, r2\n\tadd\t32, r1, r1\n\tsub!\tr1, r6, r3\n\tjump.lt\t@.BB0_13\n.BB0_14:\n\tadd\tr1, r11, r1\n.BB0_6:\n\tsub\tr1, r10, r1\n\tadd\t31, r1, r1\n\tsub.s\t32, r0, r8\n\tand\tr1, r8, r1\n\tadd\tr1, r10, r7\n\tsub!\tr7, r1, r1\n\tadd\t0, r0, r1\n\tadd.lt\t1, r0, r1\n\tsub.s!\t@CPI0_2[0], r7, r2\n\tjump.gt\t@.BB0_15\n\tand!\t1, r1, r1\n\tjump.ne\t@.BB0_15\n\tst.1\t64, r7\n\tadd\t6, r0, r6\n\tsload\tr6, r1\n\tand!\t1, r1, r2\n\tshr.s\t1, r1, r3\n\tand\t127, r3, r4\n\tadd.ne\tr3, r0, r4\n\tsub.s!\t31, r4, r3\n\tadd\t0, r0, r3\n\tadd.gt\t1, r0, r3\n\txor\tr1, r3, r3\n\tand!\t1, r3, r3\n\tjump.ne\t@.BB0_4\n\tst.1.inc\tr7, r4, r9\n\tsub.s!\t0, r2, r2\n\tjump.eq\t@.BB0_20\n\tadd\tr4, r0, stack-[3]\n\tadd\tr11, r0, stack-[8]\n\tadd\tr10, r0, stack-[9]\n\tadd\tr9, r0, stack-[5]\n\tadd\tr8, r0, stack-[4]\n\tadd\tr7, r0, stack-[6]\n\tadd\tr5, r0, stack-[10]\n\tadd\tr6, r0, stack-[7]\n\tst.1\t0, r6\n\tadd\t@CPI0_0[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI0_0[0], r2, r3\n\tadd.lt\tr2, r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI0_1[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_2\n\tadd\tstack-[3], r0, r8\n\tsub.s!\t0, r8, r2\n\tjump.ne\t@.BB0_24\n\tadd\tr0, r0, r1\n\tadd\tstack-[10], r0, r5\n\tadd\tstack-[7], r0, r6\n\tadd\tstack-[6], r0, r7\n\tadd\tstack-[5], r0, r9\n\tadd\tstack-[9], r0, r10\n\tadd\tstack-[8], r0, r11\n\tjump\t@.BB0_26\n.BB0_20:\n\tsub.s\t256, r0, r2\n\tand\tr1, r2, r1\n\tst.1\tr9, r1\n\tadd\t64, r7, r1\n\tjump\t@.BB0_18\n.BB0_24:\n\tld\tr1, r2\n\tadd\tr0, r0, r1\n\tadd\tstack-[10], r0, r5\n\tadd\tstack-[7], r0, r6\n\tadd\tstack-[6], r0, r7\n\tadd\tstack-[5], r0, r9\n\tadd\tstack-[9], r0, r10\n\tadd\tstack-[8], r0, r11\n.BB0_25:\n\tadd\tr1, r9, r3\n\tsload\tr2, r4\n\tst.1\tr3, r4\n\tadd\t1, r2, r2\n\tadd\t32, r1, r1\n\tsub!\tr1, r8, r3\n\tjump.lt\t@.BB0_25\n.BB0_26:\n\tadd\tr1, r9, r1\n\tadd\tstack-[4], r0, r8\n.BB0_18:\n\tsub\tr1, r7, r1\n\tadd\t31, r1, r1\n\tand\tr1, r8, r2\n\tadd\tr2, r7, r1\n\tsub!\tr1, r2, r2\n\tadd\t0, r0, r2\n\tadd.lt\t1, r0, r2\n\tsub.s!\t@CPI0_2[0], r1, r3\n\tjump.gt\t@.BB0_15\n\tand!\t1, r2, r2\n\tjump.ne\t@.BB0_15\n\tst.1\t64, r1\n\tld.1\tr10, r12\n\tsub.s!\t@CPI0_2[0], r12, r1\n\tjump.le\t@.BB0_28\n.BB0_15:\n\tadd\t@CPI0_8[0], r0, r1\n\tst.1\t0, r1\n\tadd\t65, r0, r1\n\tst.1\t4, r1\n\tadd\t@CPI0_9[0], r0, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB0_28:\n\tadd\t3, r0, r4\n\tsload\tr4, r1\n\tand!\t1, r1, r2\n\tshr.s\t1, r1, r2\n\tand\t127, r2, r3\n\tadd.ne\tr2, r0, r3\n\tsub.s!\t31, r3, r2\n\tadd\t0, r0, r2\n\tadd.gt\t1, r0, r2\n\txor\tr1, r2, r1\n\tand!\t1, r1, r1\n\tjump.ne\t@.BB0_4\n\tsub.s!\t32, r3, r1\n\tadd\tr5, r0, stack-[10]\n\tadd\tr6, r0, stack-[7]\n\tadd\tr7, r0, stack-[6]\n\tadd\tr8, r0, stack-[4]\n\tadd\tr9, r0, stack-[5]\n\tjump.lt\t@.BB0_34\n\tadd\tr3, r0, stack-[1]\n\tadd\tr12, r0, stack-[2]\n\tadd\tr11, r0, stack-[8]\n\tadd\tr10, r0, stack-[9]\n\tadd\tr4, r0, stack-[3]\n\tst.1\t0, r4\n\tadd\t@CPI0_0[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI0_0[0], r2, r3\n\tadd.lt\tr2, r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI0_1[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_2\n\tadd\tstack-[2], r0, r12\n\tadd\t31, r12, r2\n\tshr.s\t5, r2, r2\n\tsub.s!\t32, r12, r3\n\tadd.lt\t0, r0, r2\n\tld\tr1, r3\n\tadd\tstack-[1], r0, r1\n\tadd\t31, r1, r1\n\tshr.s\t5, r1, r1\n\tadd\tr3, r1, r1\n\tadd\tr3, r2, r2\n\tsub!\tr2, r1, r3\n\tadd\tstack-[10], r0, r5\n\tadd\tstack-[7], r0, r6\n\tadd\tstack-[6], r0, r7\n\tadd\tstack-[4], r0, r8\n\tadd\tstack-[5], r0, r9\n\tadd\tstack-[9], r0, r10\n\tadd\tstack-[8], r0, r11\n\tadd\tstack-[3], r0, r4\n\tjump.ge\t@.BB0_34\n.BB0_33:\n\tsstore\tr2, r0\n\tadd\t1, r2, r2\n\tsub!\tr2, r1, r3\n\tjump.lt\t@.BB0_33\n.BB0_34:\n\tsub.s!\t31, r12, r1\n\tjump.le\t@.BB0_78\n\tadd\tr12, r0, stack-[2]\n\tadd\tr10, r0, stack-[9]\n\tadd\tr4, r0, stack-[3]\n\tst.1\t0, r4\n\tadd\t@CPI0_0[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI0_0[0], r2, r3\n\tadd.lt\tr2, r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI0_1[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_2\n\tadd\tstack-[4], r0, r8\n\tadd\tstack-[2], r0, r11\n\tand!\tr11, r8, r3\n\tadd\t32, r0, r2\n\tld\tr1, r1\n\tadd\tstack-[9], r0, r10\n\tjump.eq\t@.BB0_75\n\tadd\t32, r0, r2\n\tadd\tr0, r0, r4\n.BB0_74:\n\tadd\tr2, r10, r5\n\tld.1\tr5, r5\n\tsstore\tr1, r5\n\tadd\t32, r2, r2\n\tadd\t1, r1, r1\n\tadd\t32, r4, r4\n\tsub!\tr4, r3, r5\n\tjump.lt\t@.BB0_74\n.BB0_75:\n\tsub!\tr3, r11, r3\n\tadd\tstack-[7], r0, r6\n\tadd\tstack-[6], r0, r7\n\tadd\tstack-[5], r0, r9\n\tjump.ge\t@.BB0_77\n\tshl.s\t3, r11, r3\n\tand\t248, r3, r3\n\tsub.s\t1, r0, r4\n\tshr\tr4, r3, r3\n\txor\tr3, r4, r3\n\tadd\tr2, r10, r2\n\tld.1\tr2, r2\n\tand\tr2, r3, r2\n\tsstore\tr1, r2\n.BB0_77:\n\tadd\t1, r0, r1\n\tshl.s\t1, r11, r2\n\tadd\tstack-[10], r0, r5\n\tadd\tstack-[3], r0, r4\n\tjump\t@.BB0_35\n.BB0_78:\n\tsub.s!\t0, r12, r1\n\tadd\tr0, r0, r1\n\tjump.eq\t@.BB0_80\n\tld.1\tr11, r1\n.BB0_80:\n\tshl.s\t3, r12, r2\n\tsub.s\t1, r0, r3\n\tshr\tr3, r2, r2\n\txor\tr2, r3, r2\n\tand\tr1, r2, r2\n\tshl.s\t1, r12, r1\n.BB0_35:\n\tor\tr2, r1, r1\n\tsstore\tr4, r1\n\tld.1\tr7, r10\n\tsub.s!\t@CPI0_2[0], r10, r1\n\tjump.gt\t@.BB0_15\n\tadd\t4, r0, r4\n\tsload\tr4, r1\n\tand!\t1, r1, r2\n\tshr.s\t1, r1, r2\n\tand\t127, r2, r3\n\tadd.ne\tr2, r0, r3\n\tsub.s!\t31, r3, r2\n\tadd\t0, r0, r2\n\tadd.gt\t1, r0, r2\n\txor\tr1, r2, r1\n\tand!\t1, r1, r1\n\tjump.ne\t@.BB0_4\n\tsub.s!\t32, r3, r1\n\tjump.lt\t@.BB0_42\n\tadd\tr3, r0, stack-[3]\n\tadd\tr10, r0, stack-[9]\n\tadd\tr4, r0, stack-[8]\n\tst.1\t0, r4\n\tadd\t@CPI0_0[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI0_0[0], r2, r3\n\tadd.lt\tr2, r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI0_1[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_2\n\tadd\tstack-[9], r0, r10\n\tadd\t31, r10, r2\n\tshr.s\t5, r2, r2\n\tsub.s!\t32, r10, r3\n\tadd.lt\t0, r0, r2\n\tld\tr1, r3\n\tadd\tstack-[3], r0, r1\n\tadd\t31, r1, r1\n\tshr.s\t5, r1, r1\n\tadd\tr3, r1, r1\n\tadd\tr3, r2, r2\n\tsub!\tr2, r1, r3\n\tadd\tstack-[10], r0, r5\n\tadd\tstack-[5], r0, r9\n\tadd\tstack-[8], r0, r4\n\tjump.ge\t@.BB0_42\n.BB0_41:\n\tsstore\tr2, r0\n\tadd\t1, r2, r2\n\tsub!\tr2, r1, r3\n\tjump.lt\t@.BB0_41\n.BB0_42:\n\tsub.s!\t32, r10, r1\n\tjump.lt\t@.BB0_50\n\tadd\tr10, r0, stack-[9]\n\tadd\tr4, r0, stack-[8]\n\tst.1\t0, r4\n\tadd\t@CPI0_0[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI0_0[0], r2, r3\n\tadd.lt\tr2, r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI0_1[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_2\n\tadd\tstack-[4], r0, r2\n\tadd\tstack-[9], r0, r3\n\tand!\tr3, r2, r3\n\tadd\t32, r0, r2\n\tld\tr1, r1\n\tadd\tstack-[6], r0, r6\n\tjump.eq\t@.BB0_47\n\tadd\t32, r0, r2\n\tadd\tr0, r0, r4\n.BB0_46:\n\tadd\tr2, r6, r5\n\tld.1\tr5, r5\n\tsstore\tr1, r5\n\tadd\t32, r2, r2\n\tadd\t1, r1, r1\n\tadd\t32, r4, r4\n\tsub!\tr4, r3, r5\n\tjump.lt\t@.BB0_46\n.BB0_47:\n\tadd\tstack-[9], r0, r5\n\tsub!\tr3, r5, r3\n\tjump.ge\t@.BB0_49\n\tshl.s\t3, r5, r3\n\tand\t248, r3, r3\n\tsub.s\t1, r0, r4\n\tshr\tr4, r3, r3\n\txor\tr3, r4, r3\n\tadd\tstack-[6], r0, r4\n\tadd\tr2, r4, r2\n\tld.1\tr2, r2\n\tand\tr2, r3, r2\n\tsstore\tr1, r2\n.BB0_49:\n\tshl.s\t1, r5, r1\n\tor\t1, r1, r1\n\tadd\tstack-[10], r0, r5\n\tadd\tstack-[8], r0, r4\n\tjump\t@.BB0_52\n.BB0_50:\n\tsub.s!\t0, r10, r1\n\tadd\tr0, r0, r1\n\tjump.eq\t@.BB0_52\n\tshl.s\t3, r10, r1\n\tsub.s\t1, r0, r2\n\tshr\tr2, r1, r1\n\txor\tr1, r2, r1\n\tld.1\tr9, r2\n\tand\tr2, r1, r1\n\tshl.s\t1, r10, r2\n\tor\tr1, r2, r1\n.BB0_52:\n\tsstore\tr4, r1\n\tsload\tr5, r1\n\tand!\t1, r1, r2\n\tshr.s\t1, r1, r2\n\tand\t127, r2, r3\n\tadd.ne\tr2, r0, r3\n\tsub.s!\t31, r3, r2\n\tadd\t0, r0, r2\n\tadd.gt\t1, r0, r2\n\txor\tr1, r2, r1\n\tand!\t1, r1, r1\n\tjump.ne\t@.BB0_4\n\tadd\tr3, r0, stack-[9]\n\tsub.s!\t32, r3, r1\n\tjump.lt\t@.BB0_58\n\tst.1\t0, r5\n\tadd\t@CPI0_0[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI0_0[0], r2, r3\n\tadd.lt\tr2, r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI0_1[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_2\n\tld\tr1, r1\n\tadd\tstack-[9], r0, r2\n\tadd\t31, r2, r2\n\tshr.s\t5, r2, r2\n\tadd\tr1, r2, r2\n\tsub!\tr1, r2, r3\n\tadd\tstack-[10], r0, r5\n\tjump.ge\t@.BB0_58\n.BB0_57:\n\tsstore\tr1, r0\n\tadd\t1, r1, r1\n\tsub!\tr1, r2, r3\n\tjump.lt\t@.BB0_57\n.BB0_58:\n\tadd\t@CPI0_3[0], r0, r1\n\tsstore\tr5, r1\n\tadd\tstack-[7], r0, r1\n\tsload\tr1, r1\n\tand!\t1, r1, r2\n\tshr.s\t1, r1, r2\n\tand\t127, r2, r3\n\tadd.eq\tr3, r0, r2\n\tadd\tr2, r0, stack-[10]\n\tsub.s!\t31, r2, r2\n\tadd\t0, r0, r2\n\tadd.gt\t1, r0, r2\n\txor\tr1, r2, r1\n\tand!\t1, r1, r1\n\tjump.ne\t@.BB0_4\n\tadd\tstack-[10], r0, r1\n\tsub.s!\t32, r1, r1\n\tjump.lt\t@.BB0_64\n\tadd\tstack-[7], r0, r1\n\tst.1\t0, r1\n\tadd\t@CPI0_0[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI0_0[0], r2, r3\n\tadd.lt\tr2, r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI0_1[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_2\n\tld\tr1, r1\n\tadd\tstack-[10], r0, r2\n\tadd\t31, r2, r2\n\tshr.s\t5, r2, r2\n\tadd\tr1, r2, r2\n\tsub!\tr1, r2, r3\n\tjump.ge\t@.BB0_64\n.BB0_63:\n\tsstore\tr1, r0\n\tadd\t1, r1, r1\n\tsub!\tr1, r2, r3\n\tjump.lt\t@.BB0_63\n.BB0_64:\n\tadd\t@CPI0_4[0], r0, r1\n\tadd\tstack-[7], r0, r2\n\tsstore\tr2, r1\n\tadd\t7, r0, r1\n\tsload\tr1, r2\n\tsub.s\t256, r0, r3\n\tand\tr2, r3, r2\n\tor\t10, r2, r2\n\tsstore\tr1, r2\n\tsload\tr1, r1\n\tand\t255, r1, r2\n\tsub.s!\t78, r2, r1\n\tjump.ge\t@.BB0_65\n\tadd\t1, r0, r1\n\tsub.s!\t0, r2, r3\n\tjump.eq\t@.BB0_70\n\tadd\t10, r0, r3\n\tadd\t1, r0, r1\n.BB0_68:\n\tand!\t1, r2, r4\n\tadd\tr3, r0, r4\n\tadd.eq\t1, r0, r4\n\tmul\tr4, r1, r1, r4\n\tshr.s\t1, r2, r4\n\tmul\tr3, r3, r3, r5\n\tsub.s!\t1, r2, r2\n\tadd\tr4, r0, r2\n\tjump.gt\t@.BB0_68\n\tsub.s!\t@CPI0_5[0], r1, r2\n\tjump.le\t@.BB0_70\n.BB0_65:\n\tadd\t@CPI0_8[0], r0, r1\n\tst.1\t0, r1\n\tadd\t17, r0, r1\n\tst.1\t4, r1\n\tadd\t@CPI0_9[0], r0, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB0_2:\n\tadd\tr0, r0, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB0_70:\n\tmul\t@CPI0_6[0], r1, r1, r2\n\tadd\t8, r0, r2\n\tsstore\tr2, r1\n\tsload\tr2, r2\n\tcontext.caller\tr1\n\tnear_call\tr0, @fun_mint, @DEFAULT_UNWIND\n\tadd\t32, r0, r1\n\tst.2\t256, r1\n\tst.2\t288, r0\n\tadd\t@CPI0_7[0], r0, r1\n\tret.ok.to_label\tr1, @DEFAULT_FAR_RETURN\n.func_end0:\n\nfun_mint:\n.func_begin1:\n\tnop\tstack+=[2]\n\tand!\t@CPI1_0[0], r1, r5\n\tjump.eq\t@.BB1_1\n\tadd\tr1, r0, stack-[2]\n\tsub.s\t1, r0, r1\n\txor\tr2, r1, r4\n\tadd\t2, r0, r1\n\tsload\tr1, r3\n\tsub!\tr3, r4, r4\n\tjump.gt\t@.BB1_3\n\tadd\tr2, r0, stack-[1]\n\tadd\tr3, r2, r3\n\tsstore\tr1, r3\n\tst.1\t0, r5\n\tst.1\t32, r0\n\tadd\t@CPI1_1[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI1_1[0], r2, r3\n\tadd.lt\tr2, r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI1_2[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB1_5\n\tld\tr1, r1\n\tsload\tr1, r2\n\tadd\tstack-[1], r0, r3\n\tadd\tr2, r3, r2\n\tsstore\tr1, r2\n\tld.1\t64, r1\n\tst.1\tr1, r3\n\tadd\t@CPI1_1[0], r0, r2\n\tcontext.gas_left\tr3\n\tsub.s!\t@CPI1_1[0], r3, r4\n\tadd.ge\tr2, r0, r3\n\tsub.s!\t@CPI1_1[0], r1, r4\n\tadd.ge\tr2, r0, r1\n\tshl.s\t64, r1, r1\n\tshl.s\t192, r3, r2\n\tor\tr2, r1, r1\n\tor\t@CPI1_3[0], r1, r1\n\tadd\t32781, r0, r2\n\tadd\t3, r0, r3\n\tadd\t@CPI1_4[0], r0, r4\n\tadd\tr0, r0, r5\n\tadd\tstack-[2], r0, r6\n\tnear_call\tr0, @__farcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r1\n\tjump.eq\t@.BB1_5\n\tret\n.BB1_5:\n\tadd\tr0, r0, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB1_1:\n\tld.1\t64, r1\n\tadd\t68, r1, r2\n\tadd\t@CPI1_7[0], r0, r3\n\tst.1\tr2, r3\n\tadd\t36, r1, r2\n\tadd\t31, r0, r3\n\tst.1\tr2, r3\n\tadd\t@CPI1_8[0], r0, r2\n\tst.1\tr1, r2\n\tadd\t4, r1, r2\n\tadd\t32, r0, r3\n\tst.1\tr2, r3\n\tadd\t@CPI1_1[0], r0, r2\n\tsub.s!\t@CPI1_1[0], r1, r3\n\tadd.ge\tr2, r0, r1\n\tshl.s\t64, r1, r1\n\tor\t@CPI1_9[0], r1, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB1_3:\n\tadd\t@CPI1_5[0], r0, r1\n\tst.1\t0, r1\n\tadd\t17, r0, r1\n\tst.1\t4, r1\n\tadd\t@CPI1_6[0], r0, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.func_end1:\n\nabi_encode_string:\n.func_begin2:\n\tadd\t32, r0, r3\n\tst.1.inc\tr1, r3, r4\n\tld.1\tr2, r3\n\tst.1\tr4, r3\n\tsub.s!\t0, r3, r4\n\tadd\t64, r1, r1\n\tjump.eq\t@.BB2_4\n\tadd\tr0, r0, r4\n.BB2_2:\n\tadd\tr1, r4, r5\n\tadd\t32, r4, r4\n\tadd\tr4, r2, r6\n\tld.1\tr6, r6\n\tst.1\tr5, r6\n\tsub!\tr4, r3, r5\n\tjump.lt\t@.BB2_2\n\tsub!\tr4, r3, r2\n\tjump.le\t@.BB2_4\n\tadd\tr1, r3, r2\n\tst.1\tr2, r0\n\tjump\t@.BB2_6\n.BB2_4:\n.BB2_6:\n\tadd\t31, r3, r2\n\tsub.s\t32, r0, r3\n\tand\tr2, r3, r2\n\tadd\tr1, r2, r1\n\tret\n.func_end2:\n\nabi_decode_addresst_uint256:\n.func_begin3:\n\tsub.s\t4, r1, r1\n\tadd\t@CPI3_0[0], r0, r2\n\tsub.s!\t63, r1, r3\n\tadd\t0, r0, r3\n\tadd.gt\tr2, r0, r3\n\tand\t@CPI3_0[0], r1, r1\n\tsub.s!\t0, r1, r4\n\tadd.ge\t0, r0, r2\n\tsub.s!\t@CPI3_0[0], r1, r1\n\tadd\tr3, r0, r1\n\tadd.eq\tr2, r0, r1\n\tsub.s!\t0, r1, r1\n\tjump.eq\t@.BB3_1\n\tptr.add\tstack[@ptr_calldata], r0, r2\n\tptr.add.s\t4, r2, r1\n\tld\tr1, r1\n\tsub.s!\t@CPI3_1[0], r1, r3\n\tjump.gt\t@.BB3_1\n\tptr.add.s\t36, r2, r2\n\tld\tr2, r2\n\tret\n.BB3_1:\n\tadd\tr0, r0, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.func_end3:\n\nabi_decode_addresst_addresst_uint256:\n.func_begin4:\n\tsub.s\t4, r1, r1\n\tadd\t@CPI4_0[0], r0, r2\n\tsub.s!\t95, r1, r3\n\tadd\t0, r0, r3\n\tadd.gt\tr2, r0, r3\n\tand\t@CPI4_0[0], r1, r1\n\tsub.s!\t0, r1, r4\n\tadd.ge\t0, r0, r2\n\tsub.s!\t@CPI4_0[0], r1, r1\n\tadd\tr3, r0, r1\n\tadd.eq\tr2, r0, r1\n\tsub.s!\t0, r1, r1\n\tjump.eq\t@.BB4_1\n\tptr.add\tstack[@ptr_calldata], r0, r3\n\tptr.add.s\t4, r3, r1\n\tld\tr1, r1\n\tsub.s!\t@CPI4_1[0], r1, r2\n\tjump.gt\t@.BB4_1\n\tptr.add.s\t36, r3, r2\n\tld\tr2, r2\n\tsub.s!\t@CPI4_1[0], r2, r4\n\tjump.gt\t@.BB4_1\n\tptr.add.s\t68, r3, r3\n\tld\tr3, r3\n\tret\n.BB4_1:\n\tadd\tr0, r0, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.func_end4:\n\nabi_decode_address:\n.func_begin5:\n\tsub.s\t4, r1, r1\n\tadd\t@CPI5_0[0], r0, r2\n\tsub.s!\t31, r1, r3\n\tadd\t0, r0, r3\n\tadd.gt\tr2, r0, r3\n\tand\t@CPI5_0[0], r1, r1\n\tsub.s!\t0, r1, r4\n\tadd.ge\t0, r0, r2\n\tsub.s!\t@CPI5_0[0], r1, r1\n\tadd\tr3, r0, r1\n\tadd.eq\tr2, r0, r1\n\tsub.s!\t0, r1, r1\n\tjump.eq\t@.BB5_1\n\tadd\t4, r0, r1\n\tptr.add\tstack[@ptr_calldata], r1, r1\n\tld\tr1, r1\n\tsub.s!\t@CPI5_1[0], r1, r2\n\tjump.gt\t@.BB5_1\n\tret\n.BB5_1:\n\tadd\tr0, r0, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.func_end5:\n\nabi_decode_addresst_address:\n.func_begin6:\n\tsub.s\t4, r1, r1\n\tadd\t@CPI6_0[0], r0, r2\n\tsub.s!\t63, r1, r3\n\tadd\t0, r0, r3\n\tadd.gt\tr2, r0, r3\n\tand\t@CPI6_0[0], r1, r1\n\tsub.s!\t0, r1, r4\n\tadd.ge\t0, r0, r2\n\tsub.s!\t@CPI6_0[0], r1, r1\n\tadd\tr3, r0, r1\n\tadd.eq\tr2, r0, r1\n\tsub.s!\t0, r1, r1\n\tjump.eq\t@.BB6_1\n\tptr.add\tstack[@ptr_calldata], r0, r2\n\tptr.add.s\t4, r2, r1\n\tld\tr1, r1\n\tsub.s!\t@CPI6_1[0], r1, r3\n\tjump.gt\t@.BB6_1\n\tptr.add.s\t36, r2, r2\n\tld\tr2, r2\n\tsub.s!\t@CPI6_1[0], r2, r3\n\tjump.gt\t@.BB6_1\n\tret\n.BB6_1:\n\tadd\tr0, r0, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.func_end6:\n\ncopy_array_from_storage_to_memory_string_2479:\n.func_begin7:\n\tadd\t3, r0, r5\n\tsload\tr5, r4\n\tand!\t1, r4, r6\n\tshr.s\t1, r4, r1\n\tand\t127, r1, r2\n\tadd.ne\tr1, r0, r2\n\tsub.s!\t31, r2, r1\n\tadd\t0, r0, r1\n\tadd.gt\t1, r0, r1\n\tand\t1, r1, r1\n\tsub!\tr6, r1, r1\n\tjump.ne\t@.BB7_1\n\tld.1\t64, r1\n\tst.1.inc\tr1, r2, r3\n\tsub.s!\t0, r6, r6\n\tjump.ne\t@.BB7_9\n\tsub.s\t256, r0, r2\n\tand\tr4, r2, r2\n\tst.1\tr3, r2\n\tadd\t64, r0, r4\n\tjump\t@.BB7_4\n.BB7_9:\n\tst.1\t0, r5\n\tadd\t32, r0, r4\n\tsub.s!\t0, r2, r5\n\tjump.eq\t@.BB7_4\n\tadd\t@CPI7_0[0], r0, r4\n\tadd\tr0, r0, r6\n.BB7_11:\n\tadd\tr6, r0, r5\n\tadd\tr5, r3, r6\n\tsload\tr4, r7\n\tst.1\tr6, r7\n\tadd\t1, r4, r4\n\tadd\t32, r5, r6\n\tsub!\tr6, r2, r7\n\tjump.lt\t@.BB7_11\n\tadd\t95, r5, r2\n\tsub.s\t32, r0, r3\n\tand\tr2, r3, r4\n.BB7_4:\n\tadd\tr4, r1, r2\n\tsub!\tr2, r4, r3\n\tadd\t0, r0, r3\n\tadd.lt\t1, r0, r3\n\tsub.s!\t@CPI7_1[0], r2, r4\n\tjump.gt\t@.BB7_6\n\tand!\t1, r3, r3\n\tjump.ne\t@.BB7_6\n\tst.1\t64, r2\n\tret\n.BB7_1:\n\tadd\t@CPI7_2[0], r0, r1\n\tst.1\t0, r1\n\tadd\t34, r0, r1\n\tst.1\t4, r1\n\tadd\t@CPI7_3[0], r0, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB7_6:\n\tadd\t@CPI7_2[0], r0, r1\n\tst.1\t0, r1\n\tadd\t65, r0, r1\n\tst.1\t4, r1\n\tadd\t@CPI7_3[0], r0, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.func_end7:\n\ncopy_array_from_storage_to_memory_string.2:\n.func_begin8:\n\tadd\t4, r0, r5\n\tsload\tr5, r4\n\tand!\t1, r4, r6\n\tshr.s\t1, r4, r1\n\tand\t127, r1, r2\n\tadd.ne\tr1, r0, r2\n\tsub.s!\t31, r2, r1\n\tadd\t0, r0, r1\n\tadd.gt\t1, r0, r1\n\tand\t1, r1, r1\n\tsub!\tr6, r1, r1\n\tjump.ne\t@.BB8_1\n\tld.1\t64, r1\n\tst.1.inc\tr1, r2, r3\n\tsub.s!\t0, r6, r6\n\tjump.ne\t@.BB8_9\n\tsub.s\t256, r0, r2\n\tand\tr4, r2, r2\n\tst.1\tr3, r2\n\tadd\t64, r0, r4\n\tjump\t@.BB8_4\n.BB8_9:\n\tst.1\t0, r5\n\tadd\t32, r0, r4\n\tsub.s!\t0, r2, r5\n\tjump.eq\t@.BB8_4\n\tadd\t@CPI8_0[0], r0, r4\n\tadd\tr0, r0, r6\n.BB8_11:\n\tadd\tr6, r0, r5\n\tadd\tr5, r3, r6\n\tsload\tr4, r7\n\tst.1\tr6, r7\n\tadd\t1, r4, r4\n\tadd\t32, r5, r6\n\tsub!\tr6, r2, r7\n\tjump.lt\t@.BB8_11\n\tadd\t95, r5, r2\n\tsub.s\t32, r0, r3\n\tand\tr2, r3, r4\n.BB8_4:\n\tadd\tr4, r1, r2\n\tsub!\tr2, r4, r3\n\tadd\t0, r0, r3\n\tadd.lt\t1, r0, r3\n\tsub.s!\t@CPI8_1[0], r2, r4\n\tjump.gt\t@.BB8_6\n\tand!\t1, r3, r3\n\tjump.ne\t@.BB8_6\n\tst.1\t64, r2\n\tret\n.BB8_1:\n\tadd\t@CPI8_2[0], r0, r1\n\tst.1\t0, r1\n\tadd\t34, r0, r1\n\tst.1\t4, r1\n\tadd\t@CPI8_3[0], r0, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB8_6:\n\tadd\t@CPI8_2[0], r0, r1\n\tst.1\t0, r1\n\tadd\t65, r0, r1\n\tst.1\t4, r1\n\tadd\t@CPI8_3[0], r0, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.func_end8:\n\nmapping_index_access_mapping_address_uint256_of_address_2492:\n.func_begin9:\n\tand\t@CPI9_0[0], r1, r1\n\tst.1\t0, r1\n\tadd\t1, r0, r1\n\tst.1\t32, r1\n\tadd\t@CPI9_1[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI9_1[0], r2, r3\n\tadd.lt\tr2, r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI9_2[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB9_1\n\tld\tr1, r1\n\tret\n.BB9_1:\n\tadd\tr0, r0, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.func_end9:\n\nmapping_index_access_mapping_address_uint256_of_address:\n.func_begin10:\n\tand\t@CPI10_0[0], r2, r2\n\tst.1\t0, r2\n\tst.1\t32, r1\n\tadd\t@CPI10_1[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI10_1[0], r2, r3\n\tadd.lt\tr2, r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI10_2[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB10_1\n\tld\tr1, r1\n\tret\n.BB10_1:\n\tadd\tr0, r0, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.func_end10:\n\nfun_balanceOf:\n.func_begin11:\n\tand\t@CPI11_0[0], r1, r1\n\tst.1\t0, r1\n\tst.1\t32, r0\n\tadd\t@CPI11_1[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI11_1[0], r2, r3\n\tadd.lt\tr2, r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI11_2[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB11_1\n\tld\tr1, r1\n\tsload\tr1, r1\n\tret\n.BB11_1:\n\tadd\tr0, r0, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.func_end11:\n\nfun_transfer:\n.func_begin12:\n\tnop\tstack+=[6]\n\tadd\tr2, r0, stack-[6]\n\tcontext.caller\tr2\n\tand!\t@CPI12_0[0], r2, r3\n\tjump.eq\t@.BB12_1\n\tadd\tr2, r0, stack-[2]\n\tadd\tr1, r0, stack-[3]\n\tand!\t@CPI12_0[0], r1, r1\n\tadd\tr1, r0, stack-[5]\n\tjump.eq\t@.BB12_3\n\tadd\tr3, r0, stack-[4]\n\tst.1\t0, r3\n\tst.1\t32, r0\n\tadd\t@CPI12_1[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI12_1[0], r2, r3\n\tadd.lt\tr2, r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI12_2[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB12_5\n\tld\tr1, r1\n\tsload\tr1, r2\n\tadd\tstack-[6], r0, r1\n\tadd\tr2, r0, stack-[1]\n\tsub!\tr2, r1, r1\n\tjump.lt\t@.BB12_7\n\tadd\tstack-[4], r0, r1\n\tst.1\t0, r1\n\tst.1\t32, r0\n\tadd\t@CPI12_1[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI12_1[0], r2, r3\n\tadd.lt\tr2, r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI12_2[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB12_5\n\tadd\tstack-[6], r0, r2\n\tadd\tstack-[1], r0, r3\n\tsub\tr3, r2, r2\n\tld\tr1, r1\n\tsstore\tr1, r2\n\tadd\tstack-[5], r0, r1\n\tst.1\t0, r1\n\tst.1\t32, r0\n\tadd\t@CPI12_1[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI12_1[0], r2, r3\n\tadd.lt\tr2, r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI12_2[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB12_5\n\tld\tr1, r1\n\tsload\tr1, r2\n\tadd\tstack-[6], r0, r3\n\tadd\tr2, r3, r2\n\tsstore\tr1, r2\n\tld.1\t64, r1\n\tst.1\tr1, r3\n\tadd\t@CPI12_1[0], r0, r2\n\tcontext.gas_left\tr3\n\tsub.s!\t@CPI12_1[0], r3, r4\n\tadd.ge\tr2, r0, r3\n\tsub.s!\t@CPI12_1[0], r1, r4\n\tadd.ge\tr2, r0, r1\n\tshl.s\t64, r1, r1\n\tshl.s\t192, r3, r2\n\tor\tr2, r1, r1\n\tor\t@CPI12_3[0], r1, r1\n\tadd\t32781, r0, r2\n\tadd\t3, r0, r3\n\tadd\t@CPI12_4[0], r0, r4\n\tadd\tstack-[2], r0, r5\n\tadd\tstack-[3], r0, r6\n\tnear_call\tr0, @__farcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r1\n\tjump.eq\t@.BB12_5\n\tret\n.BB12_5:\n\tadd\tr0, r0, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB12_1:\n\tld.1\t64, r1\n\tadd\t100, r1, r2\n\tadd\t@CPI12_11[0], r0, r3\n\tst.1\tr2, r3\n\tadd\t68, r1, r2\n\tadd\t@CPI12_12[0], r0, r3\n\tst.1\tr2, r3\n\tadd\t36, r1, r2\n\tadd\t37, r0, r3\n\tst.1\tr2, r3\n\tadd\t@CPI12_7[0], r0, r2\n\tst.1\tr1, r2\n\tadd\t4, r1, r2\n\tadd\t32, r0, r3\n\tst.1\tr2, r3\n\tadd\t@CPI12_1[0], r0, r2\n\tsub.s!\t@CPI12_1[0], r1, r3\n\tadd.ge\tr2, r0, r1\n\tshl.s\t64, r1, r1\n\tor\t@CPI12_8[0], r1, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB12_3:\n\tld.1\t64, r1\n\tadd\t100, r1, r2\n\tadd\t@CPI12_9[0], r0, r3\n\tst.1\tr2, r3\n\tadd\t68, r1, r2\n\tadd\t@CPI12_10[0], r0, r3\n\tst.1\tr2, r3\n\tadd\t36, r1, r2\n\tadd\t35, r0, r3\n\tst.1\tr2, r3\n\tadd\t@CPI12_7[0], r0, r2\n\tst.1\tr1, r2\n\tadd\t4, r1, r2\n\tadd\t32, r0, r3\n\tst.1\tr2, r3\n\tadd\t@CPI12_1[0], r0, r2\n\tsub.s!\t@CPI12_1[0], r1, r3\n\tadd.ge\tr2, r0, r1\n\tshl.s\t64, r1, r1\n\tor\t@CPI12_8[0], r1, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB12_7:\n\tld.1\t64, r1\n\tadd\t100, r1, r2\n\tadd\t@CPI12_5[0], r0, r3\n\tst.1\tr2, r3\n\tadd\t68, r1, r2\n\tadd\t@CPI12_6[0], r0, r3\n\tst.1\tr2, r3\n\tadd\t36, r1, r2\n\tadd\t38, r0, r3\n\tst.1\tr2, r3\n\tadd\t@CPI12_7[0], r0, r2\n\tst.1\tr1, r2\n\tadd\t4, r1, r2\n\tadd\t32, r0, r3\n\tst.1\tr2, r3\n\tadd\t@CPI12_1[0], r0, r2\n\tsub.s!\t@CPI12_1[0], r1, r3\n\tadd.ge\tr2, r0, r1\n\tshl.s\t64, r1, r1\n\tor\t@CPI12_8[0], r1, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.func_end12:\n\nfun_approve:\n.func_begin13:\n\tnop\tstack+=[4]\n\tcontext.caller\tr3\n\tand!\t@CPI13_0[0], r3, r4\n\tjump.eq\t@.BB13_1\n\tadd\tr2, r0, stack-[1]\n\tadd\tr3, r0, stack-[2]\n\tadd\tr1, r0, stack-[3]\n\tand!\t@CPI13_0[0], r1, r1\n\tadd\tr1, r0, stack-[4]\n\tjump.eq\t@.BB13_3\n\tst.1\t0, r4\n\tadd\t1, r0, r1\n\tst.1\t32, r1\n\tadd\t@CPI13_1[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI13_1[0], r2, r3\n\tadd.lt\tr2, r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI13_2[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB13_5\n\tld\tr1, r1\n\tadd\tstack-[4], r0, r2\n\tst.1\t0, r2\n\tst.1\t32, r1\n\tadd\t@CPI13_1[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI13_1[0], r2, r3\n\tadd.lt\tr2, r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI13_2[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB13_5\n\tld\tr1, r1\n\tadd\tstack-[1], r0, r2\n\tsstore\tr1, r2\n\tld.1\t64, r1\n\tst.1\tr1, r2\n\tadd\t@CPI13_1[0], r0, r2\n\tcontext.gas_left\tr3\n\tsub.s!\t@CPI13_1[0], r3, r4\n\tadd.ge\tr2, r0, r3\n\tsub.s!\t@CPI13_1[0], r1, r4\n\tadd.ge\tr2, r0, r1\n\tshl.s\t64, r1, r1\n\tshl.s\t192, r3, r2\n\tor\tr2, r1, r1\n\tor\t@CPI13_3[0], r1, r1\n\tadd\t32781, r0, r2\n\tadd\t3, r0, r3\n\tadd\t@CPI13_4[0], r0, r4\n\tadd\tstack-[2], r0, r5\n\tadd\tstack-[3], r0, r6\n\tnear_call\tr0, @__farcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r1\n\tjump.eq\t@.BB13_5\n\tret\n.BB13_5:\n\tadd\tr0, r0, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB13_1:\n\tld.1\t64, r1\n\tadd\t100, r1, r2\n\tadd\t@CPI13_9[0], r0, r3\n\tst.1\tr2, r3\n\tadd\t68, r1, r2\n\tadd\t@CPI13_10[0], r0, r3\n\tst.1\tr2, r3\n\tadd\t36, r1, r2\n\tadd\t36, r0, r3\n\tst.1\tr2, r3\n\tadd\t@CPI13_7[0], r0, r2\n\tst.1\tr1, r2\n\tadd\t4, r1, r2\n\tadd\t32, r0, r3\n\tst.1\tr2, r3\n\tadd\t@CPI13_1[0], r0, r2\n\tsub.s!\t@CPI13_1[0], r1, r3\n\tadd.ge\tr2, r0, r1\n\tshl.s\t64, r1, r1\n\tor\t@CPI13_8[0], r1, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB13_3:\n\tld.1\t64, r1\n\tadd\t100, r1, r2\n\tadd\t@CPI13_5[0], r0, r3\n\tst.1\tr2, r3\n\tadd\t68, r1, r2\n\tadd\t@CPI13_6[0], r0, r3\n\tst.1\tr2, r3\n\tadd\t36, r1, r2\n\tadd\t34, r0, r3\n\tst.1\tr2, r3\n\tadd\t@CPI13_7[0], r0, r2\n\tst.1\tr1, r2\n\tadd\t4, r1, r2\n\tadd\t32, r0, r3\n\tst.1\tr2, r3\n\tadd\t@CPI13_1[0], r0, r2\n\tsub.s!\t@CPI13_1[0], r1, r3\n\tadd.ge\tr2, r0, r1\n\tshl.s\t64, r1, r1\n\tor\t@CPI13_8[0], r1, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.func_end13:\n\nfun_transferFrom:\n.func_begin14:\n\tnop\tstack+=[8]\n\tadd\tr3, r0, stack-[8]\n\tadd\tr2, r0, stack-[6]\n\tadd\tr1, r0, stack-[5]\n\tand\t@CPI14_0[0], r1, r1\n\tadd\tr1, r0, stack-[7]\n\tst.1\t0, r1\n\tadd\t1, r0, r1\n\tadd\tr1, r0, stack-[3]\n\tst.1\t32, r1\n\tadd\t@CPI14_1[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI14_1[0], r2, r3\n\tadd.lt\tr2, r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI14_2[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB14_1\n\tld\tr1, r1\n\tcontext.caller\tr2\n\tadd\tr2, r0, stack-[2]\n\tand\t@CPI14_0[0], r2, r2\n\tadd\tr2, r0, stack-[4]\n\tst.1\t0, r2\n\tst.1\t32, r1\n\tadd\t@CPI14_1[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI14_1[0], r2, r3\n\tadd.lt\tr2, r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI14_2[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB14_1\n\tld\tr1, r1\n\tsload\tr1, r2\n\tsub.s\t1, r0, r1\n\tsub!\tr2, r1, r1\n\tjump.eq\t@.BB14_5\n\tadd\tstack-[8], r0, r1\n\tsub!\tr2, r1, r1\n\tjump.lt\t@.BB14_16\n\tadd\tstack-[7], r0, r1\n\tsub.s!\t0, r1, r1\n\tjump.eq\t@.BB14_18\n\tadd\tr2, r0, stack-[1]\n\tadd\tstack-[4], r0, r1\n\tsub.s!\t0, r1, r1\n\tjump.eq\t@.BB14_20\n\tadd\tstack-[7], r0, r1\n\tst.1\t0, r1\n\tadd\tstack-[3], r0, r1\n\tst.1\t32, r1\n\tadd\t@CPI14_1[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI14_1[0], r2, r3\n\tadd.lt\tr2, r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI14_2[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB14_1\n\tld\tr1, r1\n\tadd\tstack-[4], r0, r2\n\tst.1\t0, r2\n\tst.1\t32, r1\n\tadd\t@CPI14_1[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI14_1[0], r2, r3\n\tadd.lt\tr2, r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI14_2[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB14_1\n\tadd\tstack-[8], r0, r2\n\tadd\tstack-[1], r0, r3\n\tsub\tr3, r2, r2\n\tld\tr1, r1\n\tsstore\tr1, r2\n\tld.1\t64, r1\n\tst.1\tr1, r2\n\tadd\t@CPI14_1[0], r0, r2\n\tcontext.gas_left\tr3\n\tsub.s!\t@CPI14_1[0], r3, r4\n\tadd.ge\tr2, r0, r3\n\tsub.s!\t@CPI14_1[0], r1, r4\n\tadd.ge\tr2, r0, r1\n\tshl.s\t64, r1, r1\n\tshl.s\t192, r3, r2\n\tor\tr2, r1, r1\n\tor\t@CPI14_3[0], r1, r1\n\tadd\t32781, r0, r2\n\tadd\t3, r0, r3\n\tadd\t@CPI14_4[0], r0, r4\n\tadd\tstack-[5], r0, r5\n\tadd\tstack-[2], r0, r6\n\tnear_call\tr0, @__farcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r1\n\tjump.ne\t@.BB14_7\n\tjump\t@.BB14_1\n.BB14_5:\n\tadd\tstack-[7], r0, r1\n\tsub.s!\t0, r1, r1\n\tjump.eq\t@.BB14_6\n.BB14_7:\n\tadd\tstack-[6], r0, r1\n\tand!\t@CPI14_0[0], r1, r1\n\tadd\tr1, r0, stack-[4]\n\tjump.eq\t@.BB14_8\n\tadd\tstack-[7], r0, r1\n\tst.1\t0, r1\n\tst.1\t32, r0\n\tadd\t@CPI14_1[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI14_1[0], r2, r3\n\tadd.lt\tr2, r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI14_2[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB14_1\n\tld\tr1, r1\n\tsload\tr1, r2\n\tadd\tstack-[8], r0, r1\n\tadd\tr2, r0, stack-[3]\n\tsub!\tr2, r1, r1\n\tjump.lt\t@.BB14_11\n\tadd\tstack-[7], r0, r1\n\tst.1\t0, r1\n\tst.1\t32, r0\n\tadd\t@CPI14_1[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI14_1[0], r2, r3\n\tadd.lt\tr2, r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI14_2[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB14_1\n\tadd\tstack-[8], r0, r2\n\tadd\tstack-[3], r0, r3\n\tsub\tr3, r2, r2\n\tld\tr1, r1\n\tsstore\tr1, r2\n\tadd\tstack-[4], r0, r1\n\tst.1\t0, r1\n\tst.1\t32, r0\n\tadd\t@CPI14_1[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI14_1[0], r2, r3\n\tadd.lt\tr2, r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI14_2[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB14_1\n\tld\tr1, r1\n\tsload\tr1, r2\n\tadd\tstack-[8], r0, r3\n\tadd\tr2, r3, r2\n\tsstore\tr1, r2\n\tld.1\t64, r1\n\tst.1\tr1, r3\n\tadd\t@CPI14_1[0], r0, r2\n\tcontext.gas_left\tr3\n\tsub.s!\t@CPI14_1[0], r3, r4\n\tadd.ge\tr2, r0, r3\n\tsub.s!\t@CPI14_1[0], r1, r4\n\tadd.ge\tr2, r0, r1\n\tshl.s\t64, r1, r1\n\tshl.s\t192, r3, r2\n\tor\tr2, r1, r1\n\tor\t@CPI14_3[0], r1, r1\n\tadd\t32781, r0, r2\n\tadd\t3, r0, r3\n\tadd\t@CPI14_13[0], r0, r4\n\tadd\tstack-[5], r0, r5\n\tadd\tstack-[6], r0, r6\n\tnear_call\tr0, @__farcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r1\n\tjump.eq\t@.BB14_1\n\tret\n.BB14_1:\n\tadd\tr0, r0, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB14_8:\n\tld.1\t64, r1\n\tadd\t100, r1, r2\n\tadd\t@CPI14_16[0], r0, r3\n\tst.1\tr2, r3\n\tadd\t68, r1, r2\n\tadd\t@CPI14_17[0], r0, r3\n\tst.1\tr2, r3\n\tadd\t36, r1, r2\n\tadd\t35, r0, r3\n\tst.1\tr2, r3\n\tadd\t@CPI14_7[0], r0, r2\n\tst.1\tr1, r2\n\tadd\t4, r1, r2\n\tadd\t32, r0, r3\n\tst.1\tr2, r3\n\tadd\t@CPI14_1[0], r0, r2\n\tsub.s!\t@CPI14_1[0], r1, r3\n\tadd.ge\tr2, r0, r1\n\tshl.s\t64, r1, r1\n\tor\t@CPI14_8[0], r1, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB14_11:\n\tld.1\t64, r1\n\tadd\t100, r1, r2\n\tadd\t@CPI14_14[0], r0, r3\n\tst.1\tr2, r3\n\tadd\t68, r1, r2\n\tadd\t@CPI14_15[0], r0, r3\n\tst.1\tr2, r3\n\tadd\t36, r1, r2\n\tadd\t38, r0, r3\n\tst.1\tr2, r3\n\tadd\t@CPI14_7[0], r0, r2\n\tst.1\tr1, r2\n\tadd\t4, r1, r2\n\tadd\t32, r0, r3\n\tst.1\tr2, r3\n\tadd\t@CPI14_1[0], r0, r2\n\tsub.s!\t@CPI14_1[0], r1, r3\n\tadd.ge\tr2, r0, r1\n\tshl.s\t64, r1, r1\n\tor\t@CPI14_8[0], r1, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB14_16:\n\tld.1\t64, r1\n\tadd\t68, r1, r2\n\tadd\t@CPI14_11[0], r0, r3\n\tst.1\tr2, r3\n\tadd\t36, r1, r2\n\tadd\t29, r0, r3\n\tst.1\tr2, r3\n\tadd\t@CPI14_7[0], r0, r2\n\tst.1\tr1, r2\n\tadd\t4, r1, r2\n\tadd\t32, r0, r3\n\tst.1\tr2, r3\n\tadd\t@CPI14_1[0], r0, r2\n\tsub.s!\t@CPI14_1[0], r1, r3\n\tadd.ge\tr2, r0, r1\n\tshl.s\t64, r1, r1\n\tor\t@CPI14_12[0], r1, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB14_18:\n\tld.1\t64, r1\n\tadd\t100, r1, r2\n\tadd\t@CPI14_9[0], r0, r3\n\tst.1\tr2, r3\n\tadd\t68, r1, r2\n\tadd\t@CPI14_10[0], r0, r3\n\tst.1\tr2, r3\n\tadd\t36, r1, r2\n\tadd\t36, r0, r3\n\tst.1\tr2, r3\n\tadd\t@CPI14_7[0], r0, r2\n\tst.1\tr1, r2\n\tadd\t4, r1, r2\n\tadd\t32, r0, r3\n\tst.1\tr2, r3\n\tadd\t@CPI14_1[0], r0, r2\n\tsub.s!\t@CPI14_1[0], r1, r3\n\tadd.ge\tr2, r0, r1\n\tshl.s\t64, r1, r1\n\tor\t@CPI14_8[0], r1, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB14_20:\n\tld.1\t64, r1\n\tadd\t100, r1, r2\n\tadd\t@CPI14_5[0], r0, r3\n\tst.1\tr2, r3\n\tadd\t68, r1, r2\n\tadd\t@CPI14_6[0], r0, r3\n\tst.1\tr2, r3\n\tadd\t36, r1, r2\n\tadd\t34, r0, r3\n\tst.1\tr2, r3\n\tadd\t@CPI14_7[0], r0, r2\n\tst.1\tr1, r2\n\tadd\t4, r1, r2\n\tadd\t32, r0, r3\n\tst.1\tr2, r3\n\tadd\t@CPI14_1[0], r0, r2\n\tsub.s!\t@CPI14_1[0], r1, r3\n\tadd.ge\tr2, r0, r1\n\tshl.s\t64, r1, r1\n\tor\t@CPI14_8[0], r1, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB14_6:\n\tld.1\t64, r1\n\tadd\t100, r1, r2\n\tadd\t@CPI14_18[0], r0, r3\n\tst.1\tr2, r3\n\tadd\t68, r1, r2\n\tadd\t@CPI14_19[0], r0, r3\n\tst.1\tr2, r3\n\tadd\t36, r1, r2\n\tadd\t37, r0, r3\n\tst.1\tr2, r3\n\tadd\t@CPI14_7[0], r0, r2\n\tst.1\tr1, r2\n\tadd\t4, r1, r2\n\tadd\t32, r0, r3\n\tst.1\tr2, r3\n\tadd\t@CPI14_1[0], r0, r2\n\tsub.s!\t@CPI14_1[0], r1, r3\n\tadd.ge\tr2, r0, r1\n\tshl.s\t64, r1, r1\n\tor\t@CPI14_8[0], r1, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.func_end14:\n\nfun_increaseAllowance:\n.func_begin15:\n\tnop\tstack+=[6]\n\tadd\tr2, r0, stack-[5]\n\tadd\tr1, r0, stack-[6]\n\tcontext.caller\tr1\n\tadd\tr1, r0, stack-[4]\n\tst.1\t0, r1\n\tadd\t1, r0, r1\n\tadd\tr1, r0, stack-[2]\n\tst.1\t32, r1\n\tadd\t@CPI15_0[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI15_0[0], r2, r3\n\tadd.lt\tr2, r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI15_1[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB15_1\n\tld\tr1, r1\n\tadd\tstack-[6], r0, r2\n\tand\t@CPI15_2[0], r2, r2\n\tadd\tr2, r0, stack-[3]\n\tst.1\t0, r2\n\tst.1\t32, r1\n\tadd\t@CPI15_0[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI15_0[0], r2, r3\n\tadd.lt\tr2, r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI15_1[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB15_1\n\tsub.s\t1, r0, r2\n\tadd\tstack-[5], r0, r3\n\txor\tr3, r2, r2\n\tld\tr1, r1\n\tsload\tr1, r3\n\tsub!\tr3, r2, r1\n\tjump.gt\t@.BB15_4\n\tadd\tstack-[4], r0, r1\n\tand!\t@CPI15_2[0], r1, r1\n\tjump.eq\t@.BB15_6\n\tadd\tr3, r0, stack-[1]\n\tadd\tstack-[3], r0, r2\n\tsub.s!\t0, r2, r2\n\tjump.eq\t@.BB15_8\n\tst.1\t0, r1\n\tadd\tstack-[2], r0, r1\n\tst.1\t32, r1\n\tadd\t@CPI15_0[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI15_0[0], r2, r3\n\tadd.lt\tr2, r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI15_1[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB15_1\n\tld\tr1, r1\n\tadd\tstack-[3], r0, r2\n\tst.1\t0, r2\n\tst.1\t32, r1\n\tadd\t@CPI15_0[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI15_0[0], r2, r3\n\tadd.lt\tr2, r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI15_1[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB15_1\n\tadd\tstack-[5], r0, r2\n\tadd\tstack-[1], r0, r3\n\tadd\tr3, r2, r2\n\tld\tr1, r1\n\tsstore\tr1, r2\n\tld.1\t64, r1\n\tst.1\tr1, r2\n\tadd\t@CPI15_0[0], r0, r2\n\tcontext.gas_left\tr3\n\tsub.s!\t@CPI15_0[0], r3, r4\n\tadd.ge\tr2, r0, r3\n\tsub.s!\t@CPI15_0[0], r1, r4\n\tadd.ge\tr2, r0, r1\n\tshl.s\t64, r1, r1\n\tshl.s\t192, r3, r2\n\tor\tr2, r1, r1\n\tor\t@CPI15_3[0], r1, r1\n\tadd\t32781, r0, r2\n\tadd\t3, r0, r3\n\tadd\t@CPI15_4[0], r0, r4\n\tadd\tstack-[4], r0, r5\n\tadd\tstack-[6], r0, r6\n\tnear_call\tr0, @__farcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r1\n\tjump.eq\t@.BB15_1\n\tret\n.BB15_1:\n\tadd\tr0, r0, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB15_4:\n\tadd\t@CPI15_11[0], r0, r1\n\tst.1\t0, r1\n\tadd\t17, r0, r1\n\tst.1\t4, r1\n\tadd\t@CPI15_12[0], r0, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB15_6:\n\tld.1\t64, r1\n\tadd\t100, r1, r2\n\tadd\t@CPI15_9[0], r0, r3\n\tst.1\tr2, r3\n\tadd\t68, r1, r2\n\tadd\t@CPI15_10[0], r0, r3\n\tst.1\tr2, r3\n\tadd\t36, r1, r2\n\tadd\t36, r0, r3\n\tst.1\tr2, r3\n\tadd\t@CPI15_7[0], r0, r2\n\tst.1\tr1, r2\n\tadd\t4, r1, r2\n\tadd\t32, r0, r3\n\tst.1\tr2, r3\n\tadd\t@CPI15_0[0], r0, r2\n\tsub.s!\t@CPI15_0[0], r1, r3\n\tadd.ge\tr2, r0, r1\n\tshl.s\t64, r1, r1\n\tor\t@CPI15_8[0], r1, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB15_8:\n\tld.1\t64, r1\n\tadd\t100, r1, r2\n\tadd\t@CPI15_5[0], r0, r3\n\tst.1\tr2, r3\n\tadd\t68, r1, r2\n\tadd\t@CPI15_6[0], r0, r3\n\tst.1\tr2, r3\n\tadd\t36, r1, r2\n\tadd\t34, r0, r3\n\tst.1\tr2, r3\n\tadd\t@CPI15_7[0], r0, r2\n\tst.1\tr1, r2\n\tadd\t4, r1, r2\n\tadd\t32, r0, r3\n\tst.1\tr2, r3\n\tadd\t@CPI15_0[0], r0, r2\n\tsub.s!\t@CPI15_0[0], r1, r3\n\tadd.ge\tr2, r0, r1\n\tshl.s\t64, r1, r1\n\tor\t@CPI15_8[0], r1, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.func_end15:\n\nfun_decreaseAllowance:\n.func_begin16:\n\tnop\tstack+=[6]\n\tadd\tr2, r0, stack-[5]\n\tadd\tr1, r0, stack-[6]\n\tcontext.caller\tr1\n\tadd\tr1, r0, stack-[4]\n\tst.1\t0, r1\n\tadd\t1, r0, r1\n\tadd\tr1, r0, stack-[2]\n\tst.1\t32, r1\n\tadd\t@CPI16_0[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI16_0[0], r2, r3\n\tadd.lt\tr2, r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI16_1[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB16_1\n\tld\tr1, r1\n\tadd\tstack-[6], r0, r2\n\tand\t@CPI16_2[0], r2, r2\n\tadd\tr2, r0, stack-[3]\n\tst.1\t0, r2\n\tst.1\t32, r1\n\tadd\t@CPI16_0[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI16_0[0], r2, r3\n\tadd.lt\tr2, r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI16_1[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB16_1\n\tld\tr1, r1\n\tsload\tr1, r2\n\tadd\tstack-[5], r0, r1\n\tsub!\tr2, r1, r1\n\tjump.lt\t@.BB16_4\n\tadd\tstack-[4], r0, r1\n\tand!\t@CPI16_2[0], r1, r1\n\tjump.eq\t@.BB16_6\n\tadd\tr2, r0, stack-[1]\n\tadd\tstack-[3], r0, r2\n\tsub.s!\t0, r2, r2\n\tjump.eq\t@.BB16_8\n\tst.1\t0, r1\n\tadd\tstack-[2], r0, r1\n\tst.1\t32, r1\n\tadd\t@CPI16_0[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI16_0[0], r2, r3\n\tadd.lt\tr2, r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI16_1[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB16_1\n\tld\tr1, r1\n\tadd\tstack-[3], r0, r2\n\tst.1\t0, r2\n\tst.1\t32, r1\n\tadd\t@CPI16_0[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI16_0[0], r2, r3\n\tadd.lt\tr2, r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI16_1[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB16_1\n\tadd\tstack-[5], r0, r2\n\tadd\tstack-[1], r0, r3\n\tsub\tr3, r2, r2\n\tld\tr1, r1\n\tsstore\tr1, r2\n\tld.1\t64, r1\n\tst.1\tr1, r2\n\tadd\t@CPI16_0[0], r0, r2\n\tcontext.gas_left\tr3\n\tsub.s!\t@CPI16_0[0], r3, r4\n\tadd.ge\tr2, r0, r3\n\tsub.s!\t@CPI16_0[0], r1, r4\n\tadd.ge\tr2, r0, r1\n\tshl.s\t64, r1, r1\n\tshl.s\t192, r3, r2\n\tor\tr2, r1, r1\n\tor\t@CPI16_3[0], r1, r1\n\tadd\t32781, r0, r2\n\tadd\t3, r0, r3\n\tadd\t@CPI16_4[0], r0, r4\n\tadd\tstack-[4], r0, r5\n\tadd\tstack-[6], r0, r6\n\tnear_call\tr0, @__farcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r1\n\tjump.eq\t@.BB16_1\n\tret\n.BB16_1:\n\tadd\tr0, r0, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB16_4:\n\tld.1\t64, r1\n\tadd\t100, r1, r2\n\tadd\t@CPI16_11[0], r0, r3\n\tst.1\tr2, r3\n\tadd\t68, r1, r2\n\tadd\t@CPI16_12[0], r0, r3\n\tst.1\tr2, r3\n\tadd\t36, r1, r2\n\tadd\t37, r0, r3\n\tst.1\tr2, r3\n\tadd\t@CPI16_7[0], r0, r2\n\tst.1\tr1, r2\n\tadd\t4, r1, r2\n\tadd\t32, r0, r3\n\tst.1\tr2, r3\n\tadd\t@CPI16_0[0], r0, r2\n\tsub.s!\t@CPI16_0[0], r1, r3\n\tadd.ge\tr2, r0, r1\n\tshl.s\t64, r1, r1\n\tor\t@CPI16_8[0], r1, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB16_6:\n\tld.1\t64, r1\n\tadd\t100, r1, r2\n\tadd\t@CPI16_9[0], r0, r3\n\tst.1\tr2, r3\n\tadd\t68, r1, r2\n\tadd\t@CPI16_10[0], r0, r3\n\tst.1\tr2, r3\n\tadd\t36, r1, r2\n\tadd\t36, r0, r3\n\tst.1\tr2, r3\n\tadd\t@CPI16_7[0], r0, r2\n\tst.1\tr1, r2\n\tadd\t4, r1, r2\n\tadd\t32, r0, r3\n\tst.1\tr2, r3\n\tadd\t@CPI16_0[0], r0, r2\n\tsub.s!\t@CPI16_0[0], r1, r3\n\tadd.ge\tr2, r0, r1\n\tshl.s\t64, r1, r1\n\tor\t@CPI16_8[0], r1, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB16_8:\n\tld.1\t64, r1\n\tadd\t100, r1, r2\n\tadd\t@CPI16_5[0], r0, r3\n\tst.1\tr2, r3\n\tadd\t68, r1, r2\n\tadd\t@CPI16_6[0], r0, r3\n\tst.1\tr2, r3\n\tadd\t36, r1, r2\n\tadd\t34, r0, r3\n\tst.1\tr2, r3\n\tadd\t@CPI16_7[0], r0, r2\n\tst.1\tr1, r2\n\tadd\t4, r1, r2\n\tadd\t32, r0, r3\n\tst.1\tr2, r3\n\tadd\t@CPI16_0[0], r0, r2\n\tsub.s!\t@CPI16_0[0], r1, r3\n\tadd.ge\tr2, r0, r1\n\tshl.s\t64, r1, r1\n\tor\t@CPI16_8[0], r1, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.func_end16:\n\n__farcall:\n.func_begin17:\n.tmp0:\n\tfar_call\tr1, r2, @.BB17_2\n.tmp1:\n\tadd\t1, r0, r2\n\tret\n.BB17_2:\n.tmp2:\n\tadd\tr0, r0, r2\n\tret\n.func_end17:\n\n__staticcall:\n.func_begin18:\n.tmp3:\n\tfar_call.static\tr1, r2, @.BB18_2\n.tmp4:\n\tadd\t1, r0, r2\n\tret\n.BB18_2:\n.tmp5:\n\tadd\tr0, r0, r2\n\tret\n.func_end18:\n\n\t.data\n\t.p2align\t5\ncalldatasize:\n\t.cell 0\n\n\t.p2align\t5\nptr_calldata:\n.cell\t0\n\n\t.note.GNU-stack\n\t.rodata\nCPI0_0:\nCPI1_1:\nCPI9_1:\nCPI10_1:\nCPI11_1:\nCPI12_1:\nCPI13_1:\nCPI14_1:\nCPI15_0:\nCPI16_0:\n\t.cell 4294967295\nCPI0_1:\nCPI1_3:\nCPI12_3:\nCPI13_3:\nCPI14_3:\nCPI15_3:\nCPI16_3:\n\t.cell 904625697166532776746648320380374280103671757735618107014721178055227736064\nCPI0_2:\nCPI7_1:\nCPI8_1:\n\t.cell 18446744073709551615\nCPI0_3:\n\t.cell 33166012649318456340207502841665352819299433475202619036857758343474255495198\nCPI0_4:\n\t.cell 33166012658360399058878589974888436010124542220634211649481536981566840897552\nCPI0_5:\n\t.cell 115792089237316195423570985008687907853269984665640564039457584007913\nCPI0_6:\n\t.cell 1000000000\nCPI0_7:\n\t.cell 53919893334301279589334030174039261352344891250716429051063678533632\nCPI0_8:\nCPI1_5:\nCPI7_2:\nCPI8_2:\nCPI15_11:\n\t.cell 35408467139433450592217433187231851964531694900788300625387963629091585785856\nCPI0_9:\nCPI1_6:\nCPI7_3:\nCPI8_3:\nCPI15_12:\n\t.cell 2852213850513516153367582212096\nCPI0_10:\n\t.cell 961581904\nCPI0_11:\n\t.cell 2757214934\nCPI0_12:\n\t.cell 2757214935\nCPI0_13:\n\t.cell 2835717307\nCPI0_14:\n\t.cell 3714247998\nCPI0_15:\n\t.cell 961581905\nCPI0_16:\n\t.cell 1889567281\nCPI0_17:\n\t.cell 2514000705\nCPI0_18:\n\t.cell 404098524\nCPI0_19:\n\t.cell 404098525\nCPI0_20:\n\t.cell 599290589\nCPI0_21:\n\t.cell 826074471\nCPI0_22:\n\t.cell 117300739\nCPI0_23:\n\t.cell 157198259\nCPI0_24:\n\t.cell 2535301200456458802993406410752\nCPI0_25:\nCPI3_0:\nCPI4_0:\nCPI5_0:\nCPI6_0:\n\t.cell -57896044618658097711785492504343953926634992332820282019728792003956564819968\nCPI1_0:\nCPI3_1:\nCPI4_1:\nCPI5_1:\nCPI6_1:\nCPI9_0:\nCPI10_0:\nCPI11_0:\nCPI12_0:\nCPI13_0:\nCPI14_0:\nCPI15_2:\nCPI16_2:\n\t.cell 1461501637330902918203684832716283019655932542975\nCPI1_2:\nCPI9_2:\nCPI10_2:\nCPI11_2:\nCPI12_2:\nCPI13_2:\nCPI14_2:\nCPI15_1:\nCPI16_1:\n\t.cell 904625697166532776746648320380374280103671760270919307471179981048634146816\nCPI1_4:\nCPI12_4:\nCPI14_13:\n\t.cell -15402802100530019096323380498944738953123845089667699673314898783681816316945\nCPI1_7:\n\t.cell 31354931781638678563069525067809233856775101976563302031013534919694566519552\nCPI1_8:\nCPI12_7:\nCPI13_7:\nCPI14_7:\nCPI15_7:\nCPI16_7:\n\t.cell 3963877391197344453575983046348115674221700746820753546331534351508065746944\nCPI1_9:\nCPI14_12:\n\t.cell 7922816251426433759354395033600\nCPI7_0:\n\t.cell -27889059366240281169193357100633332908378892778709981755071813198463099602853\nCPI8_0:\n\t.cell -53278079350709166316280423202849322519190186591071851114874353210178472783461\nCPI12_5:\nCPI14_14:\n\t.cell 44065838241030143116324720188876985940908656145555552347773292252211112312832\nCPI12_6:\nCPI14_15:\n\t.cell 31354931781638678607228669297131712859100820671745083778533502622993977909346\nCPI12_8:\nCPI13_8:\nCPI14_8:\nCPI15_8:\nCPI16_8:\n\t.cell 10458117451882892562347801444352\nCPI12_9:\nCPI14_16:\n\t.cell 45887578820189300338443374388718498632482616163288499555830078344056365121536\nCPI12_10:\nCPI14_17:\n\t.cell 31354931781638678607228669297131712859126084785867252355217498662940140921970\nCPI12_11:\nCPI14_18:\n\t.cell 45433405612597180762055095701412804886438245671210399661410036396145969725440\nCPI12_12:\nCPI14_19:\n\t.cell 31354931781638678607228669297131712859107492772550336241160036866987736981860\nCPI13_4:\nCPI14_4:\nCPI15_4:\nCPI16_4:\n\t.cell -52305948261162578668367882225327028569797882979485679342215860919519743330011\nCPI13_5:\nCPI14_5:\nCPI15_5:\nCPI16_5:\n\t.cell 52219164999525148860834357634456956735281286572158918307284071279203377479680\nCPI13_6:\nCPI14_6:\nCPI15_6:\nCPI16_6:\n\t.cell 31354931781638678487916134672869638488806705378895508030211234510262059168357\nCPI13_9:\nCPI14_9:\nCPI15_9:\nCPI16_9:\n\t.cell 51742913093258732729005998692887265601192425265805909375210916622055285719040\nCPI13_10:\nCPI14_10:\nCPI15_10:\nCPI16_10:\n\t.cell 31354931781638678487916134672869638484047149969764982831501014746446650500196\nCPI14_11:\n\t.cell 31354931781638678538084197150757782427756587561754988975511141185730285404160\nCPI16_11:\n\t.cell 14690266658072097593480850647027335513285713462661904985951319567533531463680\nCPI16_12:\n\t.cell 31354931781638678506476475496475743842680577777870365728514456330491174612855\n","bytecode":{"object":""},"methodIdentifiers":{"allowance(address,address)":"dd62ed3e","approve(address,uint256)":"095ea7b3","balanceOf(address)":"70a08231","decimals()":"313ce567","decreaseAllowance(address,uint256)":"a457c2d7","increaseAllowance(address,uint256)":"39509351","name()":"06fdde03","symbol()":"95d89b41","totalSupply()":"18160ddd","transfer(address,uint256)":"a9059cbb","transferFrom(address,address,uint256)":"23b872dd"}},"irOptimized":"/*=====================================================*\n *                       WARNING                       *\n *  Solidity to Yul compilation is still EXPERIMENTAL  *\n *       It can result in LOSS OF FUNDS or worse       *\n *                !USE AT YOUR OWN RISK!               *\n *=====================================================*/\n\n/// @use-src 0:\"@openzeppelin/contracts/token/ERC20/ERC20.sol\", 1:\"@openzeppelin/contracts/token/ERC20/IERC20.sol\", 2:\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\", 3:\"@openzeppelin/contracts/utils/Context.sol\", 5:\"contracts/ISLEToken.sol\"\nobject \"ISLEToken_784\" {\n    code {\n        {\n            /// @src 5:126:439  \"contract ISLEToken is ERC20 {...\"\n            mstore(64, 128)\n            if callvalue() { revert(0, 0) }\n            /// @src 5:370:375  \"_name\"\n            let _mpos := /** @src 5:126:439  \"contract ISLEToken is ERC20 {...\" */ copy_array_from_storage_to_memory_string_1585()\n            let _1 := copy_array_from_storage_to_memory_string()\n            let newLen := mload(_mpos)\n            if gt(newLen, sub(shl(64, 1), 1)) { panic_error_0x41() }\n            clean_up_bytearray_end_slots_bytes_storage_ptr(extract_byte_array_length(sload(/** @src 0:2042:2055  \"_name = name_\" */ 0x03)), /** @src 5:126:439  \"contract ISLEToken is ERC20 {...\" */ newLen)\n            let srcOffset := 0\n            let srcOffset_1 := 0x20\n            srcOffset := srcOffset_1\n            switch gt(newLen, 31)\n            case 1 {\n                let loopEnd := and(newLen, not(31))\n                let dstPtr := array_dataslot_string_storage_1588()\n                let i := 0\n                for { } lt(i, loopEnd) { i := add(i, srcOffset_1) }\n                {\n                    sstore(dstPtr, mload(add(_mpos, srcOffset)))\n                    dstPtr := add(dstPtr, 1)\n                    srcOffset := add(srcOffset, srcOffset_1)\n                }\n                if lt(loopEnd, newLen)\n                {\n                    let lastValue := mload(add(_mpos, srcOffset))\n                    sstore(dstPtr, and(lastValue, not(shr(and(shl(/** @src 0:2042:2055  \"_name = name_\" */ 0x03, /** @src 5:126:439  \"contract ISLEToken is ERC20 {...\" */ newLen), 248), not(0)))))\n                }\n                sstore(/** @src 0:2042:2055  \"_name = name_\" */ 0x03, /** @src 5:126:439  \"contract ISLEToken is ERC20 {...\" */ add(shl(1, newLen), 1))\n            }\n            default {\n                let value := 0\n                if newLen\n                {\n                    value := mload(add(_mpos, srcOffset))\n                }\n                sstore(/** @src 0:2042:2055  \"_name = name_\" */ 0x03, /** @src 5:126:439  \"contract ISLEToken is ERC20 {...\" */ extract_used_part_and_set_length_of_short_byte_array(value, newLen))\n            }\n            copy_byte_array_to_storage_from_string_to_string(_1)\n            copy_literal_to_storage_cf5cab749b1a5443309dab22c1b0e01c7e18e2a88c5a3a7e54af9efa1e12b967()\n            copy_literal_to_storage_85896b2be249f532252f026c406e4f849072075007c151e1dcd203014bbfbf68()\n            /// @src 5:267:269  \"10\"\n            update_storage_value_offsett_rational_by_to_uint8()\n            /// @src 5:305:339  \"1000000000 * (10 ** uint256(_dec))\"\n            update_storage_value_offsett_uint256_to_uint256(checked_mul_uint256(/** @src 5:319:338  \"10 ** uint256(_dec)\" */ checked_exp_rational_by_uint256(/** @src 5:325:338  \"uint256(_dec)\" */ extract_from_storage_value_offsett_uint8(/** @src 5:126:439  \"contract ISLEToken is ERC20 {...\" */ extract_from_storage_value_offsett_uint8(sload(/** @src 5:267:269  \"10\" */ 0x07))))))\n            /// @src 5:415:427  \"_totalSupply\"\n            fun_mint(/** @src 5:403:413  \"msg.sender\" */ caller(), /** @src 5:126:439  \"contract ISLEToken is ERC20 {...\" */ sload(/** @src 5:305:339  \"1000000000 * (10 ** uint256(_dec))\" */ 0x08))\n            /// @src 5:126:439  \"contract ISLEToken is ERC20 {...\"\n            let _2 := mload(64)\n            let _3 := datasize(\"ISLEToken_784_deployed\")\n            codecopy(_2, dataoffset(\"ISLEToken_784_deployed\"), _3)\n            return(_2, _3)\n        }\n        function extract_byte_array_length(data) -> length\n        {\n            length := shr(1, data)\n            let outOfPlaceEncoding := and(data, 1)\n            if iszero(outOfPlaceEncoding) { length := and(length, 0x7f) }\n            if eq(outOfPlaceEncoding, lt(length, 32))\n            {\n                mstore(0, shl(224, 0x4e487b71))\n                mstore(4, 0x22)\n                revert(0, 0x24)\n            }\n        }\n        function array_dataslot_string_storage_1588() -> data\n        {\n            mstore(0, /** @src 0:2042:2055  \"_name = name_\" */ 0x03)\n            /// @src 5:126:439  \"contract ISLEToken is ERC20 {...\"\n            data := keccak256(0, 0x20)\n        }\n        function array_dataslot_string_storage() -> data\n        {\n            mstore(0, /** @src 0:2065:2082  \"_symbol = symbol_\" */ 0x04)\n            /// @src 5:126:439  \"contract ISLEToken is ERC20 {...\"\n            data := keccak256(0, 0x20)\n        }\n        function panic_error_0x41()\n        {\n            mstore(0, shl(224, 0x4e487b71))\n            mstore(4, 0x41)\n            revert(0, 0x24)\n        }\n        function copy_array_from_storage_to_memory_string_1585() -> memPtr\n        {\n            memPtr := mload(64)\n            let ret := /** @src -1:-1:-1 */ 0\n            /// @src 5:126:439  \"contract ISLEToken is ERC20 {...\"\n            let slotValue := sload(/** @src 5:370:375  \"_name\" */ 0x05)\n            /// @src 5:126:439  \"contract ISLEToken is ERC20 {...\"\n            let length := extract_byte_array_length(slotValue)\n            mstore(memPtr, length)\n            let _1 := 0x20\n            let _2 := 1\n            switch and(slotValue, _2)\n            case 0 {\n                mstore(add(memPtr, _1), and(slotValue, not(255)))\n                ret := add(memPtr, 64)\n            }\n            case 1 {\n                mstore(/** @src -1:-1:-1 */ 0, /** @src 5:370:375  \"_name\" */ 0x05)\n                /// @src 5:126:439  \"contract ISLEToken is ERC20 {...\"\n                let dataPos := keccak256(/** @src -1:-1:-1 */ 0, /** @src 5:126:439  \"contract ISLEToken is ERC20 {...\" */ _1)\n                let i := /** @src -1:-1:-1 */ 0\n                /// @src 5:126:439  \"contract ISLEToken is ERC20 {...\"\n                for { } lt(i, length) { i := add(i, _1) }\n                {\n                    mstore(add(add(memPtr, i), _1), sload(dataPos))\n                    dataPos := add(dataPos, _2)\n                }\n                ret := add(add(memPtr, i), _1)\n            }\n            let newFreePtr := add(memPtr, and(add(sub(ret, memPtr), 31), not(31)))\n            if or(gt(newFreePtr, sub(shl(64, 1), 1)), lt(newFreePtr, memPtr)) { panic_error_0x41() }\n            mstore(64, newFreePtr)\n        }\n        function copy_array_from_storage_to_memory_string() -> memPtr\n        {\n            memPtr := mload(64)\n            let ret := /** @src -1:-1:-1 */ 0\n            /// @src 5:126:439  \"contract ISLEToken is ERC20 {...\"\n            let slotValue := sload(/** @src 5:377:384  \"_symbol\" */ 0x06)\n            /// @src 5:126:439  \"contract ISLEToken is ERC20 {...\"\n            let length := extract_byte_array_length(slotValue)\n            mstore(memPtr, length)\n            let _1 := 0x20\n            let _2 := 1\n            switch and(slotValue, _2)\n            case 0 {\n                mstore(add(memPtr, _1), and(slotValue, not(255)))\n                ret := add(memPtr, 64)\n            }\n            case 1 {\n                mstore(/** @src -1:-1:-1 */ 0, /** @src 5:377:384  \"_symbol\" */ 0x06)\n                /// @src 5:126:439  \"contract ISLEToken is ERC20 {...\"\n                let dataPos := keccak256(/** @src -1:-1:-1 */ 0, /** @src 5:126:439  \"contract ISLEToken is ERC20 {...\" */ _1)\n                let i := /** @src -1:-1:-1 */ 0\n                /// @src 5:126:439  \"contract ISLEToken is ERC20 {...\"\n                for { } lt(i, length) { i := add(i, _1) }\n                {\n                    mstore(add(add(memPtr, i), _1), sload(dataPos))\n                    dataPos := add(dataPos, _2)\n                }\n                ret := add(add(memPtr, i), _1)\n            }\n            let newFreePtr := add(memPtr, and(add(sub(ret, memPtr), 31), not(31)))\n            if or(gt(newFreePtr, sub(shl(64, 1), 1)), lt(newFreePtr, memPtr)) { panic_error_0x41() }\n            mstore(64, newFreePtr)\n        }\n        function clear_storage_range_bytes1(start, end)\n        {\n            for { } lt(start, end) { start := add(start, 1) }\n            { sstore(start, 0) }\n        }\n        function clean_up_bytearray_end_slots_bytes_storage_ptr(len, startIndex)\n        {\n            if gt(len, 31)\n            {\n                mstore(/** @src -1:-1:-1 */ 0, /** @src 0:2042:2055  \"_name = name_\" */ 0x03)\n                /// @src 5:126:439  \"contract ISLEToken is ERC20 {...\"\n                let data := keccak256(/** @src -1:-1:-1 */ 0, /** @src 5:126:439  \"contract ISLEToken is ERC20 {...\" */ 0x20)\n                let deleteStart := add(data, shr(5, add(startIndex, 31)))\n                if lt(startIndex, 0x20) { deleteStart := data }\n                clear_storage_range_bytes1(deleteStart, add(data, shr(5, add(len, 31))))\n            }\n        }\n        function clean_up_bytearray_end_slots_bytes_storage_ptr_3734(len, startIndex)\n        {\n            if gt(len, 31)\n            {\n                mstore(/** @src -1:-1:-1 */ 0, /** @src 0:2065:2082  \"_symbol = symbol_\" */ 0x04)\n                /// @src 5:126:439  \"contract ISLEToken is ERC20 {...\"\n                let data := keccak256(/** @src -1:-1:-1 */ 0, /** @src 5:126:439  \"contract ISLEToken is ERC20 {...\" */ 0x20)\n                let deleteStart := add(data, shr(5, add(startIndex, 31)))\n                if lt(startIndex, 0x20) { deleteStart := data }\n                clear_storage_range_bytes1(deleteStart, add(data, shr(5, add(len, 31))))\n            }\n        }\n        function copy_literal_to_storage_cf5cab749b1a5443309dab22c1b0e01c7e18e2a88c5a3a7e54af9efa1e12b967()\n        {\n            let _1 := extract_byte_array_length(sload(/** @src 5:370:375  \"_name\" */ 0x05))\n            /// @src 5:126:439  \"contract ISLEToken is ERC20 {...\"\n            if gt(_1, 31)\n            {\n                mstore(/** @src -1:-1:-1 */ 0, /** @src 5:370:375  \"_name\" */ 0x05)\n                /// @src 5:126:439  \"contract ISLEToken is ERC20 {...\"\n                let data := keccak256(/** @src -1:-1:-1 */ 0, /** @src 5:126:439  \"contract ISLEToken is ERC20 {...\" */ 0x20)\n                clear_storage_range_bytes1(data, add(data, shr(/** @src 5:370:375  \"_name\" */ 0x05, /** @src 5:126:439  \"contract ISLEToken is ERC20 {...\" */ add(_1, 31))))\n            }\n            sstore(/** @src 5:370:375  \"_name\" */ 0x05, /** @src 5:126:439  \"contract ISLEToken is ERC20 {...\" */ add(\"ISLE Token v0.0\", 30))\n        }\n        function copy_literal_to_storage_85896b2be249f532252f026c406e4f849072075007c151e1dcd203014bbfbf68()\n        {\n            let _1 := extract_byte_array_length(sload(/** @src 5:377:384  \"_symbol\" */ 0x06))\n            /// @src 5:126:439  \"contract ISLEToken is ERC20 {...\"\n            if gt(_1, 31)\n            {\n                mstore(/** @src -1:-1:-1 */ 0, /** @src 5:377:384  \"_symbol\" */ 0x06)\n                /// @src 5:126:439  \"contract ISLEToken is ERC20 {...\"\n                let data := keccak256(/** @src -1:-1:-1 */ 0, /** @src 5:126:439  \"contract ISLEToken is ERC20 {...\" */ 0x20)\n                clear_storage_range_bytes1(data, add(data, shr(5, add(_1, 31))))\n            }\n            sstore(/** @src 5:377:384  \"_symbol\" */ 0x06, /** @src 5:126:439  \"contract ISLEToken is ERC20 {...\" */ add(\"ISLEv0.0\", 16))\n        }\n        function update_storage_value_offsett_rational_by_to_uint8()\n        {\n            sstore(/** @src 5:267:269  \"10\" */ 0x07, /** @src 5:126:439  \"contract ISLEToken is ERC20 {...\" */ or(and(sload(/** @src 5:267:269  \"10\" */ 0x07), /** @src 5:126:439  \"contract ISLEToken is ERC20 {...\" */ not(255)), /** @src 5:267:269  \"10\" */ 0x0a))\n        }\n        /// @src 5:126:439  \"contract ISLEToken is ERC20 {...\"\n        function extract_from_storage_value_offsett_uint8(slot_value) -> value\n        {\n            value := and(slot_value, 0xff)\n        }\n        function panic_error_0x11()\n        {\n            mstore(0, shl(224, 0x4e487b71))\n            mstore(4, 0x11)\n            revert(0, 0x24)\n        }\n        function checked_exp_rational_by_uint256(exponent) -> power\n        {\n            if gt(exponent, 77) { panic_error_0x11() }\n            power := exp(10, exponent)\n        }\n        function checked_mul_uint256(y) -> product\n        {\n            if and(1, gt(y, 0x044b82fa09b5a52cb98b405447c4a98187eebb22f008d5d64f9c394ae9)) { panic_error_0x11() }\n            product := mul(/** @src 5:305:315  \"1000000000\" */ 0x3b9aca00, /** @src 5:126:439  \"contract ISLEToken is ERC20 {...\" */ y)\n        }\n        function update_storage_value_offsett_uint256_to_uint256(value)\n        {\n            sstore(/** @src 5:305:339  \"1000000000 * (10 ** uint256(_dec))\" */ 0x08, /** @src 5:126:439  \"contract ISLEToken is ERC20 {...\" */ value)\n        }\n        function extract_used_part_and_set_length_of_short_byte_array(data, len) -> used\n        {\n            used := or(and(data, not(shr(shl(3, len), not(0)))), shl(1, len))\n        }\n        function copy_byte_array_to_storage_from_string_to_string(src)\n        {\n            let newLen := mload(src)\n            if gt(newLen, sub(shl(64, 1), 1)) { panic_error_0x41() }\n            clean_up_bytearray_end_slots_bytes_storage_ptr_3734(extract_byte_array_length(sload(/** @src 0:2065:2082  \"_symbol = symbol_\" */ 0x04)), /** @src 5:126:439  \"contract ISLEToken is ERC20 {...\" */ newLen)\n            let srcOffset := 0\n            let srcOffset_1 := 0x20\n            srcOffset := srcOffset_1\n            switch gt(newLen, 31)\n            case 1 {\n                let loopEnd := and(newLen, not(31))\n                let dstPtr := array_dataslot_string_storage()\n                let i := 0\n                for { } lt(i, loopEnd) { i := add(i, srcOffset_1) }\n                {\n                    sstore(dstPtr, mload(add(src, srcOffset)))\n                    dstPtr := add(dstPtr, 1)\n                    srcOffset := add(srcOffset, srcOffset_1)\n                }\n                if lt(loopEnd, newLen)\n                {\n                    let lastValue := mload(add(src, srcOffset))\n                    sstore(dstPtr, and(lastValue, not(shr(and(shl(3, newLen), 248), not(0)))))\n                }\n                sstore(/** @src 0:2065:2082  \"_symbol = symbol_\" */ 0x04, /** @src 5:126:439  \"contract ISLEToken is ERC20 {...\" */ add(shl(1, newLen), 1))\n            }\n            default {\n                let value := 0\n                if newLen\n                {\n                    value := mload(add(src, srcOffset))\n                }\n                sstore(/** @src 0:2065:2082  \"_symbol = symbol_\" */ 0x04, /** @src 5:126:439  \"contract ISLEToken is ERC20 {...\" */ extract_used_part_and_set_length_of_short_byte_array(value, newLen))\n            }\n        }\n        /// @ast-id 403 @src 0:8567:9102  \"function _mint(address account, uint256 amount) internal virtual {...\"\n        function fun_mint(var_account, var_amount)\n        {\n            /// @src 5:126:439  \"contract ISLEToken is ERC20 {...\"\n            let _1 := and(/** @src 0:8650:8671  \"account != address(0)\" */ var_account, /** @src 5:126:439  \"contract ISLEToken is ERC20 {...\" */ sub(shl(160, 1), 1))\n            if /** @src 0:8650:8671  \"account != address(0)\" */ iszero(/** @src 5:126:439  \"contract ISLEToken is ERC20 {...\" */ _1)\n            {\n                let memPtr := mload(64)\n                mstore(memPtr, shl(229, 4594637))\n                mstore(add(memPtr, 4), 32)\n                mstore(add(memPtr, 36), 31)\n                mstore(add(memPtr, 68), \"ERC20: mint to the zero address\")\n                revert(memPtr, 100)\n            }\n            let _2 := sload(/** @src 0:8778:8800  \"_totalSupply += amount\" */ 0x02)\n            /// @src 5:126:439  \"contract ISLEToken is ERC20 {...\"\n            if gt(_2, not(var_amount)) { panic_error_0x11() }\n            sstore(/** @src 0:8778:8800  \"_totalSupply += amount\" */ 0x02, /** @src 5:126:439  \"contract ISLEToken is ERC20 {...\" */ add(_2, var_amount))\n            mstore(/** @src -1:-1:-1 */ 0, /** @src 5:126:439  \"contract ISLEToken is ERC20 {...\" */ _1)\n            mstore(0x20, /** @src -1:-1:-1 */ 0)\n            /// @src 5:126:439  \"contract ISLEToken is ERC20 {...\"\n            let dataSlot := keccak256(/** @src -1:-1:-1 */ 0, /** @src 5:126:439  \"contract ISLEToken is ERC20 {...\" */ 0x40)\n            sstore(dataSlot, add(sload(/** @src 0:8946:8974  \"_balances[account] += amount\" */ dataSlot), /** @src 5:126:439  \"contract ISLEToken is ERC20 {...\" */ var_amount))\n            /// @src 0:8999:9036  \"Transfer(address(0), account, amount)\"\n            let _3 := /** @src 5:126:439  \"contract ISLEToken is ERC20 {...\" */ mload(0x40)\n            mstore(_3, var_amount)\n            /// @src 0:8999:9036  \"Transfer(address(0), account, amount)\"\n            log3(_3, /** @src 5:126:439  \"contract ISLEToken is ERC20 {...\" */ 0x20, /** @src 0:8999:9036  \"Transfer(address(0), account, amount)\" */ 0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef, /** @src -1:-1:-1 */ 0, /** @src 0:8999:9036  \"Transfer(address(0), account, amount)\" */ var_account)\n        }\n    }\n    /// @use-src 0:\"@openzeppelin/contracts/token/ERC20/ERC20.sol\", 3:\"@openzeppelin/contracts/utils/Context.sol\", 5:\"contracts/ISLEToken.sol\"\n    object \"ISLEToken_784_deployed\" {\n        code {\n            {\n                /// @src 5:126:439  \"contract ISLEToken is ERC20 {...\"\n                let _1 := 64\n                mstore(_1, 128)\n                if iszero(lt(calldatasize(), 4))\n                {\n                    let _2 := 0\n                    switch shr(224, calldataload(_2))\n                    case 0x06fdde03 {\n                        if callvalue() { revert(_2, _2) }\n                        abi_decode(calldatasize())\n                        let converted := copy_array_from_storage_to_memory_string_2479()\n                        let memPos := mload(_1)\n                        return(memPos, sub(abi_encode_string(memPos, converted), memPos))\n                    }\n                    case 0x095ea7b3 {\n                        if callvalue() { revert(_2, _2) }\n                        let param, param_1 := abi_decode_addresst_uint256(calldatasize())\n                        let ret := fun_approve(param, param_1)\n                        let memPos_1 := mload(_1)\n                        return(memPos_1, sub(abi_encode_bool(memPos_1, ret), memPos_1))\n                    }\n                    case 0x18160ddd {\n                        if callvalue() { revert(_2, _2) }\n                        abi_decode(calldatasize())\n                        let _3 := sload(/** @src 0:3329:3341  \"_totalSupply\" */ 0x02)\n                        /// @src 5:126:439  \"contract ISLEToken is ERC20 {...\"\n                        let memPos_2 := mload(_1)\n                        return(memPos_2, sub(abi_encode_uint256(memPos_2, _3), memPos_2))\n                    }\n                    case 0x23b872dd {\n                        if callvalue() { revert(_2, _2) }\n                        let param_2, param_3, param_4 := abi_decode_addresst_addresst_uint256(calldatasize())\n                        let ret_1 := fun_transferFrom(param_2, param_3, param_4)\n                        let memPos_3 := mload(_1)\n                        return(memPos_3, sub(abi_encode_bool(memPos_3, ret_1), memPos_3))\n                    }\n                    case 0x313ce567 {\n                        if callvalue() { revert(_2, _2) }\n                        abi_decode(calldatasize())\n                        let memPos_4 := mload(_1)\n                        return(memPos_4, sub(abi_encode_uint8(memPos_4), memPos_4))\n                    }\n                    case 0x39509351 {\n                        if callvalue() { revert(_2, _2) }\n                        let param_5, param_6 := abi_decode_addresst_uint256(calldatasize())\n                        let ret_2 := fun_increaseAllowance(param_5, param_6)\n                        let memPos_5 := mload(_1)\n                        return(memPos_5, sub(abi_encode_bool(memPos_5, ret_2), memPos_5))\n                    }\n                    case 0x70a08231 {\n                        if callvalue() { revert(_2, _2) }\n                        let ret_3 := fun_balanceOf(abi_decode_address(calldatasize()))\n                        let memPos_6 := mload(_1)\n                        return(memPos_6, sub(abi_encode_uint256(memPos_6, ret_3), memPos_6))\n                    }\n                    case 0x95d89b41 {\n                        if callvalue() { revert(_2, _2) }\n                        abi_decode(calldatasize())\n                        let converted_1 := copy_array_from_storage_to_memory_string()\n                        let memPos_7 := mload(_1)\n                        return(memPos_7, sub(abi_encode_string(memPos_7, converted_1), memPos_7))\n                    }\n                    case 0xa457c2d7 {\n                        if callvalue() { revert(_2, _2) }\n                        let param_7, param_8 := abi_decode_addresst_uint256(calldatasize())\n                        let ret_4 := fun_decreaseAllowance(param_7, param_8)\n                        let memPos_8 := mload(_1)\n                        return(memPos_8, sub(abi_encode_bool(memPos_8, ret_4), memPos_8))\n                    }\n                    case 0xa9059cbb {\n                        if callvalue() { revert(_2, _2) }\n                        let param_9, param_10 := abi_decode_addresst_uint256(calldatasize())\n                        let ret_5 := fun_transfer(param_9, param_10)\n                        let memPos_9 := mload(_1)\n                        return(memPos_9, sub(abi_encode_bool(memPos_9, ret_5), memPos_9))\n                    }\n                    case 0xdd62ed3e {\n                        if callvalue() { revert(_2, _2) }\n                        let param_11, param_12 := abi_decode_addresst_address(calldatasize())\n                        let _4 := sload(/** @src 0:4089:4116  \"_allowances[owner][spender]\" */ mapping_index_access_mapping_address_uint256_of_address(/** @src 0:4089:4107  \"_allowances[owner]\" */ mapping_index_access_mapping_address_uint256_of_address_2492(/** @src 5:126:439  \"contract ISLEToken is ERC20 {...\" */ param_11), param_12))\n                        let memPos_10 := mload(_1)\n                        return(memPos_10, sub(abi_encode_uint256(memPos_10, _4), memPos_10))\n                    }\n                }\n                revert(0, 0)\n            }\n            function abi_decode(dataEnd)\n            {\n                if slt(add(dataEnd, not(3)), 0) { revert(0, 0) }\n            }\n            function array_storeLengthForEncoding_string(pos, length) -> updated_pos\n            {\n                mstore(pos, length)\n                updated_pos := add(pos, 0x20)\n            }\n            function abi_encode_string(headStart, value0) -> tail\n            {\n                let _1 := 32\n                mstore(headStart, _1)\n                let length := mload(value0)\n                mstore(add(headStart, _1), length)\n                let i := 0\n                for { } lt(i, length) { i := add(i, _1) }\n                {\n                    mstore(add(add(headStart, i), 64), mload(add(add(value0, i), _1)))\n                }\n                if gt(i, length)\n                {\n                    mstore(add(add(headStart, length), 64), 0)\n                }\n                tail := add(add(headStart, and(add(length, 31), not(31))), 64)\n            }\n            function abi_decode_addresst_uint256(dataEnd) -> value0, value1\n            {\n                if slt(add(dataEnd, not(3)), 64) { revert(0, 0) }\n                let value := calldataload(4)\n                if iszero(eq(value, and(value, sub(shl(160, 1), 1))))\n                {\n                    revert(/** @src -1:-1:-1 */ 0, 0)\n                }\n                /// @src 5:126:439  \"contract ISLEToken is ERC20 {...\"\n                value0 := value\n                value1 := calldataload(36)\n            }\n            function abi_encode_bool(headStart, value0) -> tail\n            {\n                tail := add(headStart, 32)\n                mstore(headStart, iszero(iszero(value0)))\n            }\n            function abi_encode_uint256(headStart, value0) -> tail\n            {\n                tail := add(headStart, 32)\n                mstore(headStart, value0)\n            }\n            function abi_decode_addresst_addresst_uint256(dataEnd) -> value0, value1, value2\n            {\n                if slt(add(dataEnd, not(3)), 96) { revert(0, 0) }\n                let value := calldataload(4)\n                let _1 := sub(shl(160, 1), 1)\n                if iszero(eq(value, and(value, _1)))\n                {\n                    revert(/** @src -1:-1:-1 */ 0, 0)\n                }\n                /// @src 5:126:439  \"contract ISLEToken is ERC20 {...\"\n                value0 := value\n                let value_1 := calldataload(36)\n                if iszero(eq(value_1, and(value_1, _1)))\n                {\n                    revert(/** @src -1:-1:-1 */ 0, 0)\n                }\n                /// @src 5:126:439  \"contract ISLEToken is ERC20 {...\"\n                value1 := value_1\n                value2 := calldataload(68)\n            }\n            function abi_encode_uint8(headStart) -> tail\n            {\n                tail := add(headStart, 32)\n                mstore(headStart, /** @src 0:3173:3175  \"18\" */ 0x12)\n            }\n            /// @src 5:126:439  \"contract ISLEToken is ERC20 {...\"\n            function abi_decode_address(dataEnd) -> value0\n            {\n                if slt(add(dataEnd, not(3)), 32) { revert(0, 0) }\n                let value := calldataload(4)\n                if iszero(eq(value, and(value, sub(shl(160, 1), 1))))\n                {\n                    revert(/** @src -1:-1:-1 */ 0, 0)\n                }\n                /// @src 5:126:439  \"contract ISLEToken is ERC20 {...\"\n                value0 := value\n            }\n            function abi_decode_addresst_address(dataEnd) -> value0, value1\n            {\n                if slt(add(dataEnd, not(3)), 64) { revert(0, 0) }\n                let value := calldataload(4)\n                let _1 := sub(shl(160, 1), 1)\n                if iszero(eq(value, and(value, _1)))\n                {\n                    revert(/** @src -1:-1:-1 */ 0, 0)\n                }\n                /// @src 5:126:439  \"contract ISLEToken is ERC20 {...\"\n                value0 := value\n                let value_1 := calldataload(36)\n                if iszero(eq(value_1, and(value_1, _1)))\n                {\n                    revert(/** @src -1:-1:-1 */ 0, 0)\n                }\n                /// @src 5:126:439  \"contract ISLEToken is ERC20 {...\"\n                value1 := value_1\n            }\n            function array_dataslot_string_storage() -> data\n            {\n                mstore(0, /** @src 0:2240:2245  \"_name\" */ 0x03)\n                /// @src 5:126:439  \"contract ISLEToken is ERC20 {...\"\n                data := 87903029871075914254377627908054574944891091886930582284385770809450030037083\n            }\n            function array_dataslot_string_storage_4050() -> data\n            {\n                mstore(0, 4)\n                data := 62514009886607029107290561805838585334079798074568712924583230797734656856475\n            }\n            function finalize_allocation(memPtr, size)\n            {\n                let newFreePtr := add(memPtr, and(add(size, 31), not(31)))\n                if or(gt(newFreePtr, 0xffffffffffffffff), lt(newFreePtr, memPtr))\n                {\n                    mstore(0, shl(224, 0x4e487b71))\n                    mstore(4, 0x41)\n                    revert(0, 0x24)\n                }\n                mstore(64, newFreePtr)\n            }\n            function copy_array_from_storage_to_memory_string_2479() -> memPtr\n            {\n                memPtr := mload(64)\n                let ret := /** @src -1:-1:-1 */ 0\n                /// @src 5:126:439  \"contract ISLEToken is ERC20 {...\"\n                let slotValue := sload(/** @src 0:2240:2245  \"_name\" */ 0x03)\n                /// @src 5:126:439  \"contract ISLEToken is ERC20 {...\"\n                let length := /** @src -1:-1:-1 */ ret\n                /// @src 5:126:439  \"contract ISLEToken is ERC20 {...\"\n                let _1 := 1\n                length := shr(_1, slotValue)\n                let outOfPlaceEncoding := and(slotValue, _1)\n                if iszero(outOfPlaceEncoding) { length := and(length, 0x7f) }\n                let _2 := 32\n                if eq(outOfPlaceEncoding, lt(length, _2))\n                {\n                    mstore(/** @src -1:-1:-1 */ ret, /** @src 5:126:439  \"contract ISLEToken is ERC20 {...\" */ shl(224, 0x4e487b71))\n                    mstore(4, 0x22)\n                    revert(/** @src -1:-1:-1 */ ret, /** @src 5:126:439  \"contract ISLEToken is ERC20 {...\" */ 0x24)\n                }\n                let pos := array_storeLengthForEncoding_string(memPtr, length)\n                switch outOfPlaceEncoding\n                case 0 {\n                    mstore(pos, and(slotValue, not(255)))\n                    ret := add(pos, _2)\n                }\n                case 1 {\n                    let dataPos := array_dataslot_string_storage()\n                    let i := /** @src -1:-1:-1 */ 0\n                    /// @src 5:126:439  \"contract ISLEToken is ERC20 {...\"\n                    for { } lt(i, length) { i := add(i, _2) }\n                    {\n                        mstore(add(pos, i), sload(dataPos))\n                        dataPos := add(dataPos, _1)\n                    }\n                    ret := add(pos, i)\n                }\n                finalize_allocation(memPtr, sub(ret, memPtr))\n            }\n            function copy_array_from_storage_to_memory_string() -> memPtr\n            {\n                memPtr := mload(64)\n                let ret := /** @src -1:-1:-1 */ 0\n                /// @src 5:126:439  \"contract ISLEToken is ERC20 {...\"\n                let slotValue := sload(4)\n                let length := /** @src -1:-1:-1 */ ret\n                /// @src 5:126:439  \"contract ISLEToken is ERC20 {...\"\n                let _1 := 1\n                length := shr(_1, slotValue)\n                let outOfPlaceEncoding := and(slotValue, _1)\n                if iszero(outOfPlaceEncoding) { length := and(length, 0x7f) }\n                let _2 := 32\n                if eq(outOfPlaceEncoding, lt(length, _2))\n                {\n                    mstore(/** @src -1:-1:-1 */ ret, /** @src 5:126:439  \"contract ISLEToken is ERC20 {...\" */ shl(224, 0x4e487b71))\n                    mstore(4, 0x22)\n                    revert(/** @src -1:-1:-1 */ ret, /** @src 5:126:439  \"contract ISLEToken is ERC20 {...\" */ 0x24)\n                }\n                let pos := array_storeLengthForEncoding_string(memPtr, length)\n                switch outOfPlaceEncoding\n                case 0 {\n                    mstore(pos, and(slotValue, not(255)))\n                    ret := add(pos, _2)\n                }\n                case 1 {\n                    let dataPos := array_dataslot_string_storage_4050()\n                    let i := /** @src -1:-1:-1 */ 0\n                    /// @src 5:126:439  \"contract ISLEToken is ERC20 {...\"\n                    for { } lt(i, length) { i := add(i, _2) }\n                    {\n                        mstore(add(pos, i), sload(dataPos))\n                        dataPos := add(dataPos, _1)\n                    }\n                    ret := add(pos, i)\n                }\n                finalize_allocation(memPtr, sub(ret, memPtr))\n            }\n            function mapping_index_access_mapping_address_uint256_of_address_2492(key) -> dataSlot\n            {\n                mstore(0, and(key, sub(shl(160, 1), 1)))\n                mstore(0x20, /** @src 0:4089:4100  \"_allowances\" */ 0x01)\n                /// @src 5:126:439  \"contract ISLEToken is ERC20 {...\"\n                dataSlot := keccak256(0, 0x40)\n            }\n            function mapping_index_access_mapping_address_uint256_of_address_2493(key) -> dataSlot\n            {\n                mstore(/** @src 0:7615:7616  \"0\" */ 0x00, /** @src 5:126:439  \"contract ISLEToken is ERC20 {...\" */ and(key, sub(shl(160, 1), 1)))\n                mstore(0x20, /** @src 0:7615:7616  \"0\" */ 0x00)\n                /// @src 5:126:439  \"contract ISLEToken is ERC20 {...\"\n                dataSlot := keccak256(/** @src 0:7615:7616  \"0\" */ 0x00, /** @src 5:126:439  \"contract ISLEToken is ERC20 {...\" */ 0x40)\n            }\n            function mapping_index_access_mapping_address_uint256_of_address(slot, key) -> dataSlot\n            {\n                mstore(0, and(key, sub(shl(160, 1), 1)))\n                mstore(0x20, slot)\n                dataSlot := keccak256(0, 0x40)\n            }\n            /// @ast-id 98 @src 0:3406:3531  \"function balanceOf(address account) public view virtual override returns (uint256) {...\"\n            function fun_balanceOf(var_account) -> var\n            {\n                /// @src 5:126:439  \"contract ISLEToken is ERC20 {...\"\n                mstore(/** @src 0:3506:3515  \"_balances\" */ 0x00, /** @src 5:126:439  \"contract ISLEToken is ERC20 {...\" */ and(var_account, sub(shl(160, 1), 1)))\n                mstore(0x20, /** @src 0:3506:3515  \"_balances\" */ 0x00)\n                /// @src 0:3499:3524  \"return _balances[account]\"\n                var := /** @src 5:126:439  \"contract ISLEToken is ERC20 {...\" */ sload(keccak256(/** @src 0:3506:3515  \"_balances\" */ 0x00, /** @src 5:126:439  \"contract ISLEToken is ERC20 {...\" */ 0x40))\n            }\n            /// @ast-id 123 @src 0:3727:3916  \"function transfer(address to, uint256 amount) public virtual override returns (bool) {...\"\n            function fun_transfer(var_to, var_amount) -> var\n            {\n                /// @src 0:3881:3887  \"amount\"\n                fun__transfer(/** @src 3:719:729  \"msg.sender\" */ caller(), /** @src 0:3881:3887  \"amount\" */ var_to, var_amount)\n                /// @src 0:3898:3909  \"return true\"\n                var := /** @src 0:3905:3909  \"true\" */ 0x01\n            }\n            /// @ast-id 166 @src 0:4431:4628  \"function approve(address spender, uint256 amount) public virtual override returns (bool) {...\"\n            function fun_approve(var_spender, var_amount) -> var\n            {\n                /// @src 0:4593:4599  \"amount\"\n                fun__approve(/** @src 3:719:729  \"msg.sender\" */ caller(), /** @src 0:4593:4599  \"amount\" */ var_spender, var_amount)\n                /// @src 0:4610:4621  \"return true\"\n                var := /** @src 0:4617:4621  \"true\" */ 0x01\n            }\n            /// @ast-id 199 @src 0:5190:5476  \"function transferFrom(...\"\n            function fun_transferFrom(var_from, var_to, var_amount) -> var\n            {\n                /// @src 5:126:439  \"contract ISLEToken is ERC20 {...\"\n                mstore(/** @src -1:-1:-1 */ 0, /** @src 5:126:439  \"contract ISLEToken is ERC20 {...\" */ and(var_from, sub(shl(160, 1), 1)))\n                mstore(0x20, /** @src 0:4089:4100  \"_allowances\" */ 0x01)\n                /// @src 5:126:439  \"contract ISLEToken is ERC20 {...\"\n                let _1 := sload(/** @src 0:4089:4116  \"_allowances[owner][spender]\" */ mapping_index_access_mapping_address_uint256_of_address(/** @src 5:126:439  \"contract ISLEToken is ERC20 {...\" */ keccak256(/** @src -1:-1:-1 */ 0, /** @src 5:126:439  \"contract ISLEToken is ERC20 {...\" */ 0x40), /** @src 3:719:729  \"msg.sender\" */ caller()))\n                /// @src 0:11347:11590  \"if (currentAllowance != type(uint256).max) {...\"\n                if /** @src 0:11351:11388  \"currentAllowance != type(uint256).max\" */ iszero(eq(_1, /** @src 0:11371:11388  \"type(uint256).max\" */ not(0)))\n                /// @src 0:11347:11590  \"if (currentAllowance != type(uint256).max) {...\"\n                {\n                    /// @src 5:126:439  \"contract ISLEToken is ERC20 {...\"\n                    if /** @src 0:11412:11438  \"currentAllowance >= amount\" */ lt(_1, var_amount)\n                    /// @src 5:126:439  \"contract ISLEToken is ERC20 {...\"\n                    {\n                        let memPtr := mload(0x40)\n                        mstore(memPtr, shl(229, 4594637))\n                        mstore(add(memPtr, 4), 0x20)\n                        mstore(add(memPtr, 36), 29)\n                        mstore(add(memPtr, 68), \"ERC20: insufficient allowance\")\n                        revert(memPtr, 100)\n                    }\n                    /// @src 0:11539:11564  \"currentAllowance - amount\"\n                    fun__approve(var_from, /** @src 3:719:729  \"msg.sender\" */ caller(), /** @src 5:126:439  \"contract ISLEToken is ERC20 {...\" */ sub(/** @src 0:11539:11564  \"currentAllowance - amount\" */ _1, var_amount))\n                }\n                /// @src 0:5441:5447  \"amount\"\n                fun__transfer(var_from, var_to, var_amount)\n                /// @src 0:5458:5469  \"return true\"\n                var := /** @src 0:4089:4100  \"_allowances\" */ 0x01\n            }\n            /// @ast-id 228 @src 0:5871:6105  \"function increaseAllowance(address spender, uint256 addedValue) public virtual returns (bool) {...\"\n            function fun_increaseAllowance(var_spender, var_addedValue) -> var\n            {\n                /// @src 5:126:439  \"contract ISLEToken is ERC20 {...\"\n                mstore(/** @src -1:-1:-1 */ 0, /** @src 3:719:729  \"msg.sender\" */ caller())\n                /// @src 5:126:439  \"contract ISLEToken is ERC20 {...\"\n                mstore(0x20, /** @src 0:4089:4100  \"_allowances\" */ 0x01)\n                /// @src 5:126:439  \"contract ISLEToken is ERC20 {...\"\n                let _1 := sload(/** @src 0:4089:4116  \"_allowances[owner][spender]\" */ mapping_index_access_mapping_address_uint256_of_address(/** @src 5:126:439  \"contract ISLEToken is ERC20 {...\" */ keccak256(/** @src -1:-1:-1 */ 0, /** @src 5:126:439  \"contract ISLEToken is ERC20 {...\" */ 0x40), /** @src 0:6038:6063  \"allowance(owner, spender)\" */ var_spender))\n                /// @src 5:126:439  \"contract ISLEToken is ERC20 {...\"\n                if gt(_1, not(var_addedValue))\n                {\n                    mstore(/** @src -1:-1:-1 */ 0, /** @src 5:126:439  \"contract ISLEToken is ERC20 {...\" */ shl(224, 0x4e487b71))\n                    mstore(4, 0x11)\n                    revert(/** @src -1:-1:-1 */ 0, /** @src 5:126:439  \"contract ISLEToken is ERC20 {...\" */ 0x24)\n                }\n                /// @src 0:6038:6076  \"allowance(owner, spender) + addedValue\"\n                fun__approve(/** @src 3:719:729  \"msg.sender\" */ caller(), /** @src 0:6038:6076  \"allowance(owner, spender) + addedValue\" */ var_spender, /** @src 5:126:439  \"contract ISLEToken is ERC20 {...\" */ add(_1, var_addedValue))\n                /// @src 0:6087:6098  \"return true\"\n                var := /** @src 0:4089:4100  \"_allowances\" */ 0x01\n            }\n            /// @ast-id 269 @src 0:6592:7019  \"function decreaseAllowance(address spender, uint256 subtractedValue) public virtual returns (bool) {...\"\n            function fun_decreaseAllowance(var_spender, var_subtractedValue) -> var\n            {\n                /// @src 5:126:439  \"contract ISLEToken is ERC20 {...\"\n                mstore(/** @src -1:-1:-1 */ 0, /** @src 3:719:729  \"msg.sender\" */ caller())\n                /// @src 5:126:439  \"contract ISLEToken is ERC20 {...\"\n                mstore(0x20, /** @src 0:4089:4100  \"_allowances\" */ 0x01)\n                /// @src 5:126:439  \"contract ISLEToken is ERC20 {...\"\n                let _1 := sload(/** @src 0:4089:4116  \"_allowances[owner][spender]\" */ mapping_index_access_mapping_address_uint256_of_address(/** @src 5:126:439  \"contract ISLEToken is ERC20 {...\" */ keccak256(/** @src -1:-1:-1 */ 0, /** @src 5:126:439  \"contract ISLEToken is ERC20 {...\" */ 0x40), /** @src 0:6766:6791  \"allowance(owner, spender)\" */ var_spender))\n                /// @src 5:126:439  \"contract ISLEToken is ERC20 {...\"\n                if /** @src 0:6809:6844  \"currentAllowance >= subtractedValue\" */ lt(_1, var_subtractedValue)\n                /// @src 5:126:439  \"contract ISLEToken is ERC20 {...\"\n                {\n                    let memPtr := mload(0x40)\n                    mstore(memPtr, shl(229, 4594637))\n                    mstore(add(memPtr, 4), 0x20)\n                    mstore(add(memPtr, 36), 37)\n                    mstore(add(memPtr, 68), \"ERC20: decreased allowance below\")\n                    mstore(add(memPtr, 100), \" zero\")\n                    revert(memPtr, 132)\n                }\n                /// @src 0:6945:6979  \"currentAllowance - subtractedValue\"\n                fun__approve(/** @src 3:719:729  \"msg.sender\" */ caller(), /** @src 0:6945:6979  \"currentAllowance - subtractedValue\" */ var_spender, /** @src 5:126:439  \"contract ISLEToken is ERC20 {...\" */ sub(/** @src 0:6945:6979  \"currentAllowance - subtractedValue\" */ _1, var_subtractedValue))\n                /// @src 0:7001:7012  \"return true\"\n                var := /** @src 0:4089:4100  \"_allowances\" */ 0x01\n            }\n            /// @src 5:126:439  \"contract ISLEToken is ERC20 {...\"\n            function require_helper_stringliteral(condition)\n            {\n                if iszero(condition)\n                {\n                    let memPtr := mload(64)\n                    mstore(memPtr, shl(229, 4594637))\n                    mstore(add(memPtr, 4), 32)\n                    mstore(add(memPtr, 36), 35)\n                    mstore(add(memPtr, 68), \"ERC20: transfer to the zero addr\")\n                    mstore(add(memPtr, 100), \"ess\")\n                    revert(memPtr, 132)\n                }\n            }\n            function require_helper_stringliteral_4107(condition)\n            {\n                if iszero(condition)\n                {\n                    let memPtr := mload(64)\n                    mstore(memPtr, shl(229, 4594637))\n                    mstore(add(memPtr, 4), 32)\n                    mstore(add(memPtr, 36), 38)\n                    mstore(add(memPtr, 68), \"ERC20: transfer amount exceeds b\")\n                    mstore(add(memPtr, 100), \"alance\")\n                    revert(memPtr, 132)\n                }\n            }\n            /// @ast-id 346 @src 0:7473:8291  \"function _transfer(...\"\n            function fun__transfer(var_from, var_to, var_amount)\n            {\n                /// @src 5:126:439  \"contract ISLEToken is ERC20 {...\"\n                let _1 := sub(shl(160, 1), 1)\n                if /** @src 0:7599:7617  \"from != address(0)\" */ iszero(/** @src 5:126:439  \"contract ISLEToken is ERC20 {...\" */ and(/** @src 0:7599:7617  \"from != address(0)\" */ var_from, /** @src 5:126:439  \"contract ISLEToken is ERC20 {...\" */ _1))\n                {\n                    let memPtr := mload(64)\n                    mstore(memPtr, shl(229, 4594637))\n                    mstore(add(memPtr, 4), 32)\n                    mstore(add(memPtr, 36), 37)\n                    mstore(add(memPtr, 68), \"ERC20: transfer from the zero ad\")\n                    mstore(add(memPtr, 100), \"dress\")\n                    revert(memPtr, 132)\n                }\n                /// @src 0:7669:7733  \"require(to != address(0), \\\"ERC20: transfer to the zero address\\\")\"\n                require_helper_stringliteral(/** @src 0:7677:7693  \"to != address(0)\" */ iszero(iszero(/** @src 5:126:439  \"contract ISLEToken is ERC20 {...\" */ and(/** @src 0:7677:7693  \"to != address(0)\" */ var_to, /** @src 5:126:439  \"contract ISLEToken is ERC20 {...\" */ _1))))\n                let _2 := sload(/** @src 0:7815:7830  \"_balances[from]\" */ mapping_index_access_mapping_address_uint256_of_address_2493(var_from))\n                /// @src 0:7840:7912  \"require(fromBalance >= amount, \\\"ERC20: transfer amount exceeds balance\\\")\"\n                require_helper_stringliteral_4107(/** @src 0:7848:7869  \"fromBalance >= amount\" */ iszero(lt(_2, var_amount)))\n                /// @src 5:126:439  \"contract ISLEToken is ERC20 {...\"\n                sstore(/** @src 0:7946:7961  \"_balances[from]\" */ mapping_index_access_mapping_address_uint256_of_address_2493(var_from), /** @src 5:126:439  \"contract ISLEToken is ERC20 {...\" */ sub(/** @src 0:7964:7984  \"fromBalance - amount\" */ _2, var_amount))\n                /// @src 0:8161:8174  \"_balances[to]\"\n                let _3 := mapping_index_access_mapping_address_uint256_of_address_2493(var_to)\n                /// @src 5:126:439  \"contract ISLEToken is ERC20 {...\"\n                sstore(_3, add(sload(/** @src 0:8161:8184  \"_balances[to] += amount\" */ _3), /** @src 5:126:439  \"contract ISLEToken is ERC20 {...\" */ var_amount))\n                /// @src 0:8210:8236  \"Transfer(from, to, amount)\"\n                let _4 := /** @src 5:126:439  \"contract ISLEToken is ERC20 {...\" */ mload(64)\n                /// @src 0:8210:8236  \"Transfer(from, to, amount)\"\n                log3(_4, sub(abi_encode_uint256(_4, var_amount), _4), 0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef, var_from, var_to)\n            }\n            /// @ast-id 520 @src 0:10504:10874  \"function _approve(...\"\n            function fun__approve(var_owner, var_spender, var_amount)\n            {\n                /// @src 5:126:439  \"contract ISLEToken is ERC20 {...\"\n                let _1 := sub(shl(160, 1), 1)\n                if /** @src 0:10635:10654  \"owner != address(0)\" */ iszero(/** @src 5:126:439  \"contract ISLEToken is ERC20 {...\" */ and(/** @src 0:10635:10654  \"owner != address(0)\" */ var_owner, /** @src 5:126:439  \"contract ISLEToken is ERC20 {...\" */ _1))\n                {\n                    let memPtr := mload(64)\n                    mstore(memPtr, shl(229, 4594637))\n                    mstore(add(memPtr, 4), 32)\n                    mstore(add(memPtr, 36), 36)\n                    mstore(add(memPtr, 68), \"ERC20: approve from the zero add\")\n                    mstore(add(memPtr, 100), \"ress\")\n                    revert(memPtr, 132)\n                }\n                if /** @src 0:10713:10734  \"spender != address(0)\" */ iszero(/** @src 5:126:439  \"contract ISLEToken is ERC20 {...\" */ and(/** @src 0:10713:10734  \"spender != address(0)\" */ var_spender, /** @src 5:126:439  \"contract ISLEToken is ERC20 {...\" */ _1))\n                {\n                    let memPtr_1 := mload(64)\n                    mstore(memPtr_1, shl(229, 4594637))\n                    mstore(add(memPtr_1, 4), 32)\n                    mstore(add(memPtr_1, 36), 34)\n                    mstore(add(memPtr_1, 68), \"ERC20: approve to the zero addre\")\n                    mstore(add(memPtr_1, 100), \"ss\")\n                    revert(memPtr_1, 132)\n                }\n                sstore(/** @src 0:10784:10811  \"_allowances[owner][spender]\" */ mapping_index_access_mapping_address_uint256_of_address(/** @src 0:10784:10802  \"_allowances[owner]\" */ mapping_index_access_mapping_address_uint256_of_address_2492(var_owner), /** @src 0:10784:10811  \"_allowances[owner][spender]\" */ var_spender), /** @src 5:126:439  \"contract ISLEToken is ERC20 {...\" */ var_amount)\n                /// @src 0:10835:10867  \"Approval(owner, spender, amount)\"\n                let _2 := /** @src 5:126:439  \"contract ISLEToken is ERC20 {...\" */ mload(64)\n                /// @src 0:10835:10867  \"Approval(owner, spender, amount)\"\n                log3(_2, sub(abi_encode_uint256(_2, var_amount), _2), 0x8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925, var_owner, var_spender)\n            }\n        }\n        data \".metadata\" hex\"a364697066735822122041df1316c7703819948ff37c5ee7fbba9d6ab353c4b66af72cf0ef23d2542d136c6578706572696d656e74616cf564736f6c63430008080041\"\n    }\n}\n","hash":"01000239cfadbab3de06f9b5133363173cddc8efca7efbe90e486b31735eefe5","factoryDependencies":{}}}}}}